[
{
  "$schema": "jsonschema",
  "name": "Health",
  "rpcs": [
    {
      "type": "unary",
      "route": "/json.architect.Health/Check",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "HealthCheckRequest",
        "type": "object",
        "properties": {
          "service": {
            "description": "The service to check status for; if not provided, status of the queried server overall is returned.\n\nGenerally, this will only be set when querying the API gateway.  It's not recommended to rely on internal subservice names being stable.",
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "HealthCheckResponse",
        "type": "object",
        "required": [
          "status"
        ],
        "properties": {
          "status": {
            "$ref": "#/definitions/HealthStatus"
          }
        },
        "definitions": {
          "HealthStatus": {
            "type": "string",
            "enum": [
              "UNKNOWN",
              "SERVING",
              "NOT_SERVING",
              "SERVICE_UNKNOWN"
            ]
          }
        }
      }
    }
  ]
},

{
  "$schema": "jsonschema",
  "name": "Accounts",
  "rpcs": [
    {
      "type": "unary",
      "route": "/json.architect.Accounts/Accounts",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "AccountsRequest",
        "type": "object",
        "properties": {
          "trader": {
            "description": "Request accounts from the perspective of this trader; if not specified, defaults to the caller user.",
            "anyOf": [
              {
                "$ref": "#/definitions/TraderIdOrEmail"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "definitions": {
          "TraderIdOrEmail": {
            "type": "string"
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "AccountsResponse",
        "type": "object",
        "required": [
          "accounts"
        ],
        "properties": {
          "accounts": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/AccountWithPermissions"
            }
          }
        },
        "definitions": {
          "Account": {
            "type": "object",
            "required": [
              "id",
              "name"
            ],
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid"
              },
              "name": {
                "$ref": "#/definitions/AccountName"
              }
            }
          },
          "AccountName": {
            "type": "string"
          },
          "AccountPermissions": {
            "description": "Set of flags for account permissions",
            "type": "object",
            "required": [
              "list",
              "reduce_or_close",
              "set_limits",
              "trade",
              "view"
            ],
            "properties": {
              "list": {
                "type": "boolean"
              },
              "reduce_or_close": {
                "type": "boolean"
              },
              "set_limits": {
                "type": "boolean"
              },
              "trade": {
                "type": "boolean"
              },
              "view": {
                "type": "boolean"
              }
            }
          },
          "AccountWithPermissions": {
            "type": "object",
            "required": [
              "account",
              "permissions",
              "trader"
            ],
            "properties": {
              "account": {
                "$ref": "#/definitions/Account"
              },
              "permissions": {
                "$ref": "#/definitions/AccountPermissions"
              },
              "trader": {
                "$ref": "#/definitions/UserId"
              }
            }
          },
          "UserId": {
            "type": "string",
            "format": "uuid"
          }
        }
      }
    }
  ]
},

{
  "$schema": "jsonschema",
  "name": "Symbology",
  "rpcs": [
    {
      "type": "unary",
      "route": "/json.architect.Symbology/Symbols",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "SymbolsRequest",
        "description": "List all symbols",
        "type": "object"
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "SymbolsResponse",
        "type": "object",
        "required": [
          "symbols"
        ],
        "properties": {
          "symbols": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      }
    },
    {
      "type": "unary",
      "route": "/json.architect.Symbology/Symbology",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "SymbologyRequest",
        "type": "object"
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "SymbologySnapshot",
        "description": "Unique sequence id and number.",
        "type": "object",
        "required": [
          "execution_info",
          "options_series",
          "products",
          "sid",
          "sn"
        ],
        "properties": {
          "execution_info": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/ExecutionInfo"
              }
            }
          },
          "options_series": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/definitions/OptionsSeriesInfo"
            }
          },
          "product_aliases": {
            "default": {},
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "products": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/definitions/ProductInfo"
            }
          },
          "sid": {
            "title": "sequence_id",
            "type": "integer",
            "format": "default",
            "minimum": 0.0
          },
          "sn": {
            "title": "sequence_number",
            "type": "integer",
            "format": "default",
            "minimum": 0.0
          }
        },
        "definitions": {
          "Decimal": {
            "type": "string"
          },
          "DerivativeKind": {
            "oneOf": [
              {
                "description": "Normal futures",
                "type": "string",
                "enum": [
                  "Linear"
                ]
              },
              {
                "description": "Futures settled in the base currency",
                "type": "string",
                "enum": [
                  "Inverse"
                ]
              },
              {
                "description": "Quote currency different from settle currency",
                "type": "string",
                "enum": [
                  "Quanto"
                ]
              }
            ]
          },
          "EventContractSeriesInstance": {
            "oneOf": [
              {
                "type": "object",
                "required": [
                  "Enumerated"
                ],
                "properties": {
                  "Enumerated": {
                    "type": "object",
                    "required": [
                      "outcome"
                    ],
                    "properties": {
                      "outcome": {
                        "$ref": "#/definitions/Outcome"
                      }
                    }
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "object",
                "required": [
                  "OptionLike"
                ],
                "properties": {
                  "OptionLike": {
                    "type": "object",
                    "required": [
                      "strike"
                    ],
                    "properties": {
                      "expiration": {
                        "type": [
                          "string",
                          "null"
                        ],
                        "format": "date-time"
                      },
                      "strike": {
                        "type": "string",
                        "format": "decimal"
                      }
                    }
                  }
                },
                "additionalProperties": false
              }
            ]
          },
          "ExecutionInfo": {
            "description": "Information about a symbol related to its execution route.",
            "type": "object",
            "required": [
              "execution_venue",
              "is_delisted",
              "min_order_quantity",
              "min_order_quantity_unit",
              "step_size",
              "tick_size"
            ],
            "properties": {
              "execution_venue": {
                "type": "string"
              },
              "initial_margin": {
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "is_delisted": {
                "type": "boolean"
              },
              "maintenance_margin": {
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "min_order_quantity": {
                "type": "string",
                "format": "decimal"
              },
              "min_order_quantity_unit": {
                "$ref": "#/definitions/MinOrderQuantityUnit"
              },
              "step_size": {
                "type": "string",
                "format": "decimal"
              },
              "tick_size": {
                "$ref": "#/definitions/TickSize"
              }
            }
          },
          "MinOrderQuantityUnit": {
            "oneOf": [
              {
                "type": "object",
                "required": [
                  "unit"
                ],
                "properties": {
                  "unit": {
                    "type": "string",
                    "enum": [
                      "base"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "unit"
                ],
                "properties": {
                  "unit": {
                    "type": "string",
                    "enum": [
                      "quote"
                    ]
                  }
                }
              }
            ]
          },
          "OptionsExerciseType": {
            "type": "string",
            "enum": [
              "american",
              "european",
              "unknown"
            ]
          },
          "OptionsSeriesInfo": {
            "type": "object",
            "required": [
              "derivative_kind",
              "exercise_type",
              "expiration_time_of_day",
              "expiration_time_zone",
              "is_cash_settled",
              "multiplier",
              "options_series",
              "quote_symbol",
              "strikes_by_expiration",
              "underlying"
            ],
            "properties": {
              "derivative_kind": {
                "$ref": "#/definitions/DerivativeKind"
              },
              "exercise_type": {
                "$ref": "#/definitions/OptionsExerciseType"
              },
              "expiration_time_of_day": {
                "type": "string",
                "format": "partial-date-time"
              },
              "expiration_time_zone": {
                "$ref": "#/definitions/TimeZone"
              },
              "is_cash_settled": {
                "type": "boolean"
              },
              "multiplier": {
                "type": "string",
                "format": "decimal"
              },
              "options_series": {
                "type": "string"
              },
              "quote_symbol": {
                "type": "string"
              },
              "strikes_by_expiration": {
                "type": "object",
                "additionalProperties": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "decimal"
                  },
                  "uniqueItems": true
                }
              },
              "underlying": {
                "type": "string"
              },
              "venue_discriminant": {
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          },
          "OptionsSeriesInstance": {
            "description": "A specific option from a series.",
            "type": "object",
            "required": [
              "expiration",
              "put_or_call",
              "strike"
            ],
            "properties": {
              "expiration": {
                "type": "string",
                "format": "date-time"
              },
              "put_or_call": {
                "$ref": "#/definitions/PutOrCall"
              },
              "strike": {
                "type": "string",
                "format": "decimal"
              }
            }
          },
          "Outcome": {
            "type": "object",
            "required": [
              "name"
            ],
            "properties": {
              "name": {
                "type": "string"
              }
            }
          },
          "PriceDisplayFormat": {
            "type": "string"
          },
          "ProductInfo": {
            "type": "object",
            "required": [
              "product_type"
            ],
            "properties": {
              "price_display_format": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/PriceDisplayFormat"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "primary_venue": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "product_type": {
                "$ref": "#/definitions/ProductType"
              }
            }
          },
          "ProductType": {
            "oneOf": [
              {
                "type": "object",
                "required": [
                  "product_type"
                ],
                "properties": {
                  "product_type": {
                    "type": "string",
                    "enum": [
                      "Fiat"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "product_type"
                ],
                "properties": {
                  "product_type": {
                    "type": "string",
                    "enum": [
                      "Commodity"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "product_type"
                ],
                "properties": {
                  "product_type": {
                    "type": "string",
                    "enum": [
                      "Crypto"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "product_type"
                ],
                "properties": {
                  "product_type": {
                    "type": "string",
                    "enum": [
                      "Equity"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "product_type"
                ],
                "properties": {
                  "product_type": {
                    "type": "string",
                    "enum": [
                      "Index"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "derivative_kind",
                  "expiration",
                  "multiplier",
                  "product_type"
                ],
                "properties": {
                  "derivative_kind": {
                    "$ref": "#/definitions/DerivativeKind"
                  },
                  "expiration": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "first_notice_date": {
                    "default": null,
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date"
                  },
                  "multiplier": {
                    "type": "string",
                    "format": "decimal"
                  },
                  "product_type": {
                    "type": "string",
                    "enum": [
                      "Future"
                    ]
                  },
                  "series": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "underlying": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "legs",
                  "product_type"
                ],
                "properties": {
                  "legs": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/SpreadLeg"
                    }
                  },
                  "product_type": {
                    "type": "string",
                    "enum": [
                      "FutureSpread"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "derivative_kind",
                  "multiplier",
                  "product_type"
                ],
                "properties": {
                  "derivative_kind": {
                    "$ref": "#/definitions/DerivativeKind"
                  },
                  "multiplier": {
                    "type": "string",
                    "format": "decimal"
                  },
                  "product_type": {
                    "type": "string",
                    "enum": [
                      "Perpetual"
                    ]
                  },
                  "underlying": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "instance",
                  "product_type",
                  "series"
                ],
                "properties": {
                  "instance": {
                    "$ref": "#/definitions/OptionsSeriesInstance"
                  },
                  "product_type": {
                    "type": "string",
                    "enum": [
                      "Option"
                    ]
                  },
                  "series": {
                    "type": "string"
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "instance",
                  "product_type",
                  "series"
                ],
                "properties": {
                  "instance": {
                    "$ref": "#/definitions/EventContractSeriesInstance"
                  },
                  "product_type": {
                    "type": "string",
                    "enum": [
                      "EventContract"
                    ]
                  },
                  "series": {
                    "type": "string"
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "product_type"
                ],
                "properties": {
                  "product_type": {
                    "type": "string",
                    "enum": [
                      "Unknown"
                    ]
                  }
                }
              }
            ]
          },
          "PutOrCall": {
            "type": "string",
            "enum": [
              "P",
              "C"
            ]
          },
          "SpreadLeg": {
            "type": "object",
            "required": [
              "product",
              "quantity"
            ],
            "properties": {
              "product": {
                "type": "string"
              },
              "quantity": {
                "description": "Some spreads have different ratios for their legs, like buy 1 A, sell 2 B, buy 1 C; We would represent that with quantities in the legs: 1, -2, 1",
                "allOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  }
                ]
              }
            }
          },
          "TickSize": {
            "oneOf": [
              {
                "type": "object",
                "required": [
                  "simple"
                ],
                "properties": {
                  "simple": {
                    "type": "string",
                    "format": "decimal"
                  }
                },
                "additionalProperties": false
              },
              {
                "description": "List of (threshold, tick_size) pairs.  For price greater than or equal to each threshold, the tick size is the corresponding value.",
                "type": "object",
                "required": [
                  "varying"
                ],
                "properties": {
                  "varying": {
                    "type": "object",
                    "required": [
                      "thresholds"
                    ],
                    "properties": {
                      "thresholds": {
                        "type": "array",
                        "items": {
                          "type": "array",
                          "items": [
                            {
                              "type": "string",
                              "format": "decimal"
                            },
                            {
                              "type": "string",
                              "format": "decimal"
                            }
                          ],
                          "maxItems": 2,
                          "minItems": 2
                        }
                      }
                    }
                  }
                },
                "additionalProperties": false
              }
            ]
          },
          "TimeZone": {
            "type": "string",
            "enum": [
              "Africa/Abidjan",
              "Africa/Accra",
              "Africa/Addis_Ababa",
              "Africa/Algiers",
              "Africa/Asmara",
              "Africa/Asmera",
              "Africa/Bamako",
              "Africa/Bangui",
              "Africa/Banjul",
              "Africa/Bissau",
              "Africa/Blantyre",
              "Africa/Brazzaville",
              "Africa/Bujumbura",
              "Africa/Cairo",
              "Africa/Casablanca",
              "Africa/Ceuta",
              "Africa/Conakry",
              "Africa/Dakar",
              "Africa/Dar_es_Salaam",
              "Africa/Djibouti",
              "Africa/Douala",
              "Africa/El_Aaiun",
              "Africa/Freetown",
              "Africa/Gaborone",
              "Africa/Harare",
              "Africa/Johannesburg",
              "Africa/Juba",
              "Africa/Kampala",
              "Africa/Khartoum",
              "Africa/Kigali",
              "Africa/Kinshasa",
              "Africa/Lagos",
              "Africa/Libreville",
              "Africa/Lome",
              "Africa/Luanda",
              "Africa/Lubumbashi",
              "Africa/Lusaka",
              "Africa/Malabo",
              "Africa/Maputo",
              "Africa/Maseru",
              "Africa/Mbabane",
              "Africa/Mogadishu",
              "Africa/Monrovia",
              "Africa/Nairobi",
              "Africa/Ndjamena",
              "Africa/Niamey",
              "Africa/Nouakchott",
              "Africa/Ouagadougou",
              "Africa/Porto-Novo",
              "Africa/Sao_Tome",
              "Africa/Timbuktu",
              "Africa/Tripoli",
              "Africa/Tunis",
              "Africa/Windhoek",
              "America/Adak",
              "America/Anchorage",
              "America/Anguilla",
              "America/Antigua",
              "America/Araguaina",
              "America/Argentina/Buenos_Aires",
              "America/Argentina/Catamarca",
              "America/Argentina/ComodRivadavia",
              "America/Argentina/Cordoba",
              "America/Argentina/Jujuy",
              "America/Argentina/La_Rioja",
              "America/Argentina/Mendoza",
              "America/Argentina/Rio_Gallegos",
              "America/Argentina/Salta",
              "America/Argentina/San_Juan",
              "America/Argentina/San_Luis",
              "America/Argentina/Tucuman",
              "America/Argentina/Ushuaia",
              "America/Aruba",
              "America/Asuncion",
              "America/Atikokan",
              "America/Atka",
              "America/Bahia",
              "America/Bahia_Banderas",
              "America/Barbados",
              "America/Belem",
              "America/Belize",
              "America/Blanc-Sablon",
              "America/Boa_Vista",
              "America/Bogota",
              "America/Boise",
              "America/Buenos_Aires",
              "America/Cambridge_Bay",
              "America/Campo_Grande",
              "America/Cancun",
              "America/Caracas",
              "America/Catamarca",
              "America/Cayenne",
              "America/Cayman",
              "America/Chicago",
              "America/Chihuahua",
              "America/Ciudad_Juarez",
              "America/Coral_Harbour",
              "America/Cordoba",
              "America/Costa_Rica",
              "America/Creston",
              "America/Cuiaba",
              "America/Curacao",
              "America/Danmarkshavn",
              "America/Dawson",
              "America/Dawson_Creek",
              "America/Denver",
              "America/Detroit",
              "America/Dominica",
              "America/Edmonton",
              "America/Eirunepe",
              "America/El_Salvador",
              "America/Ensenada",
              "America/Fort_Nelson",
              "America/Fort_Wayne",
              "America/Fortaleza",
              "America/Glace_Bay",
              "America/Godthab",
              "America/Goose_Bay",
              "America/Grand_Turk",
              "America/Grenada",
              "America/Guadeloupe",
              "America/Guatemala",
              "America/Guayaquil",
              "America/Guyana",
              "America/Halifax",
              "America/Havana",
              "America/Hermosillo",
              "America/Indiana/Indianapolis",
              "America/Indiana/Knox",
              "America/Indiana/Marengo",
              "America/Indiana/Petersburg",
              "America/Indiana/Tell_City",
              "America/Indiana/Vevay",
              "America/Indiana/Vincennes",
              "America/Indiana/Winamac",
              "America/Indianapolis",
              "America/Inuvik",
              "America/Iqaluit",
              "America/Jamaica",
              "America/Jujuy",
              "America/Juneau",
              "America/Kentucky/Louisville",
              "America/Kentucky/Monticello",
              "America/Knox_IN",
              "America/Kralendijk",
              "America/La_Paz",
              "America/Lima",
              "America/Los_Angeles",
              "America/Louisville",
              "America/Lower_Princes",
              "America/Maceio",
              "America/Managua",
              "America/Manaus",
              "America/Marigot",
              "America/Martinique",
              "America/Matamoros",
              "America/Mazatlan",
              "America/Mendoza",
              "America/Menominee",
              "America/Merida",
              "America/Metlakatla",
              "America/Mexico_City",
              "America/Miquelon",
              "America/Moncton",
              "America/Monterrey",
              "America/Montevideo",
              "America/Montreal",
              "America/Montserrat",
              "America/Nassau",
              "America/New_York",
              "America/Nipigon",
              "America/Nome",
              "America/Noronha",
              "America/North_Dakota/Beulah",
              "America/North_Dakota/Center",
              "America/North_Dakota/New_Salem",
              "America/Nuuk",
              "America/Ojinaga",
              "America/Panama",
              "America/Pangnirtung",
              "America/Paramaribo",
              "America/Phoenix",
              "America/Port-au-Prince",
              "America/Port_of_Spain",
              "America/Porto_Acre",
              "America/Porto_Velho",
              "America/Puerto_Rico",
              "America/Punta_Arenas",
              "America/Rainy_River",
              "America/Rankin_Inlet",
              "America/Recife",
              "America/Regina",
              "America/Resolute",
              "America/Rio_Branco",
              "America/Rosario",
              "America/Santa_Isabel",
              "America/Santarem",
              "America/Santiago",
              "America/Santo_Domingo",
              "America/Sao_Paulo",
              "America/Scoresbysund",
              "America/Shiprock",
              "America/Sitka",
              "America/St_Barthelemy",
              "America/St_Johns",
              "America/St_Kitts",
              "America/St_Lucia",
              "America/St_Thomas",
              "America/St_Vincent",
              "America/Swift_Current",
              "America/Tegucigalpa",
              "America/Thule",
              "America/Thunder_Bay",
              "America/Tijuana",
              "America/Toronto",
              "America/Tortola",
              "America/Vancouver",
              "America/Virgin",
              "America/Whitehorse",
              "America/Winnipeg",
              "America/Yakutat",
              "America/Yellowknife",
              "Antarctica/Casey",
              "Antarctica/Davis",
              "Antarctica/DumontDUrville",
              "Antarctica/Macquarie",
              "Antarctica/Mawson",
              "Antarctica/McMurdo",
              "Antarctica/Palmer",
              "Antarctica/Rothera",
              "Antarctica/South_Pole",
              "Antarctica/Syowa",
              "Antarctica/Troll",
              "Antarctica/Vostok",
              "Arctic/Longyearbyen",
              "Asia/Aden",
              "Asia/Almaty",
              "Asia/Amman",
              "Asia/Anadyr",
              "Asia/Aqtau",
              "Asia/Aqtobe",
              "Asia/Ashgabat",
              "Asia/Ashkhabad",
              "Asia/Atyrau",
              "Asia/Baghdad",
              "Asia/Bahrain",
              "Asia/Baku",
              "Asia/Bangkok",
              "Asia/Barnaul",
              "Asia/Beirut",
              "Asia/Bishkek",
              "Asia/Brunei",
              "Asia/Calcutta",
              "Asia/Chita",
              "Asia/Choibalsan",
              "Asia/Chongqing",
              "Asia/Chungking",
              "Asia/Colombo",
              "Asia/Dacca",
              "Asia/Damascus",
              "Asia/Dhaka",
              "Asia/Dili",
              "Asia/Dubai",
              "Asia/Dushanbe",
              "Asia/Famagusta",
              "Asia/Gaza",
              "Asia/Harbin",
              "Asia/Hebron",
              "Asia/Ho_Chi_Minh",
              "Asia/Hong_Kong",
              "Asia/Hovd",
              "Asia/Irkutsk",
              "Asia/Istanbul",
              "Asia/Jakarta",
              "Asia/Jayapura",
              "Asia/Jerusalem",
              "Asia/Kabul",
              "Asia/Kamchatka",
              "Asia/Karachi",
              "Asia/Kashgar",
              "Asia/Kathmandu",
              "Asia/Katmandu",
              "Asia/Khandyga",
              "Asia/Kolkata",
              "Asia/Krasnoyarsk",
              "Asia/Kuala_Lumpur",
              "Asia/Kuching",
              "Asia/Kuwait",
              "Asia/Macao",
              "Asia/Macau",
              "Asia/Magadan",
              "Asia/Makassar",
              "Asia/Manila",
              "Asia/Muscat",
              "Asia/Nicosia",
              "Asia/Novokuznetsk",
              "Asia/Novosibirsk",
              "Asia/Omsk",
              "Asia/Oral",
              "Asia/Phnom_Penh",
              "Asia/Pontianak",
              "Asia/Pyongyang",
              "Asia/Qatar",
              "Asia/Qostanay",
              "Asia/Qyzylorda",
              "Asia/Rangoon",
              "Asia/Riyadh",
              "Asia/Saigon",
              "Asia/Sakhalin",
              "Asia/Samarkand",
              "Asia/Seoul",
              "Asia/Shanghai",
              "Asia/Singapore",
              "Asia/Srednekolymsk",
              "Asia/Taipei",
              "Asia/Tashkent",
              "Asia/Tbilisi",
              "Asia/Tehran",
              "Asia/Tel_Aviv",
              "Asia/Thimbu",
              "Asia/Thimphu",
              "Asia/Tokyo",
              "Asia/Tomsk",
              "Asia/Ujung_Pandang",
              "Asia/Ulaanbaatar",
              "Asia/Ulan_Bator",
              "Asia/Urumqi",
              "Asia/Ust-Nera",
              "Asia/Vientiane",
              "Asia/Vladivostok",
              "Asia/Yakutsk",
              "Asia/Yangon",
              "Asia/Yekaterinburg",
              "Asia/Yerevan",
              "Atlantic/Azores",
              "Atlantic/Bermuda",
              "Atlantic/Canary",
              "Atlantic/Cape_Verde",
              "Atlantic/Faeroe",
              "Atlantic/Faroe",
              "Atlantic/Jan_Mayen",
              "Atlantic/Madeira",
              "Atlantic/Reykjavik",
              "Atlantic/South_Georgia",
              "Atlantic/St_Helena",
              "Atlantic/Stanley",
              "Australia/ACT",
              "Australia/Adelaide",
              "Australia/Brisbane",
              "Australia/Broken_Hill",
              "Australia/Canberra",
              "Australia/Currie",
              "Australia/Darwin",
              "Australia/Eucla",
              "Australia/Hobart",
              "Australia/LHI",
              "Australia/Lindeman",
              "Australia/Lord_Howe",
              "Australia/Melbourne",
              "Australia/NSW",
              "Australia/North",
              "Australia/Perth",
              "Australia/Queensland",
              "Australia/South",
              "Australia/Sydney",
              "Australia/Tasmania",
              "Australia/Victoria",
              "Australia/West",
              "Australia/Yancowinna",
              "Brazil/Acre",
              "Brazil/DeNoronha",
              "Brazil/East",
              "Brazil/West",
              "CET",
              "CST6CDT",
              "Canada/Atlantic",
              "Canada/Central",
              "Canada/Eastern",
              "Canada/Mountain",
              "Canada/Newfoundland",
              "Canada/Pacific",
              "Canada/Saskatchewan",
              "Canada/Yukon",
              "Chile/Continental",
              "Chile/EasterIsland",
              "Cuba",
              "EET",
              "EST",
              "EST5EDT",
              "Egypt",
              "Eire",
              "Etc/GMT",
              "Etc/GMT+0",
              "Etc/GMT+1",
              "Etc/GMT+10",
              "Etc/GMT+11",
              "Etc/GMT+12",
              "Etc/GMT+2",
              "Etc/GMT+3",
              "Etc/GMT+4",
              "Etc/GMT+5",
              "Etc/GMT+6",
              "Etc/GMT+7",
              "Etc/GMT+8",
              "Etc/GMT+9",
              "Etc/GMT-0",
              "Etc/GMT-1",
              "Etc/GMT-10",
              "Etc/GMT-11",
              "Etc/GMT-12",
              "Etc/GMT-13",
              "Etc/GMT-14",
              "Etc/GMT-2",
              "Etc/GMT-3",
              "Etc/GMT-4",
              "Etc/GMT-5",
              "Etc/GMT-6",
              "Etc/GMT-7",
              "Etc/GMT-8",
              "Etc/GMT-9",
              "Etc/GMT0",
              "Etc/Greenwich",
              "Etc/UCT",
              "Etc/UTC",
              "Etc/Universal",
              "Etc/Zulu",
              "Europe/Amsterdam",
              "Europe/Andorra",
              "Europe/Astrakhan",
              "Europe/Athens",
              "Europe/Belfast",
              "Europe/Belgrade",
              "Europe/Berlin",
              "Europe/Bratislava",
              "Europe/Brussels",
              "Europe/Bucharest",
              "Europe/Budapest",
              "Europe/Busingen",
              "Europe/Chisinau",
              "Europe/Copenhagen",
              "Europe/Dublin",
              "Europe/Gibraltar",
              "Europe/Guernsey",
              "Europe/Helsinki",
              "Europe/Isle_of_Man",
              "Europe/Istanbul",
              "Europe/Jersey",
              "Europe/Kaliningrad",
              "Europe/Kiev",
              "Europe/Kirov",
              "Europe/Kyiv",
              "Europe/Lisbon",
              "Europe/Ljubljana",
              "Europe/London",
              "Europe/Luxembourg",
              "Europe/Madrid",
              "Europe/Malta",
              "Europe/Mariehamn",
              "Europe/Minsk",
              "Europe/Monaco",
              "Europe/Moscow",
              "Europe/Nicosia",
              "Europe/Oslo",
              "Europe/Paris",
              "Europe/Podgorica",
              "Europe/Prague",
              "Europe/Riga",
              "Europe/Rome",
              "Europe/Samara",
              "Europe/San_Marino",
              "Europe/Sarajevo",
              "Europe/Saratov",
              "Europe/Simferopol",
              "Europe/Skopje",
              "Europe/Sofia",
              "Europe/Stockholm",
              "Europe/Tallinn",
              "Europe/Tirane",
              "Europe/Tiraspol",
              "Europe/Ulyanovsk",
              "Europe/Uzhgorod",
              "Europe/Vaduz",
              "Europe/Vatican",
              "Europe/Vienna",
              "Europe/Vilnius",
              "Europe/Volgograd",
              "Europe/Warsaw",
              "Europe/Zagreb",
              "Europe/Zaporozhye",
              "Europe/Zurich",
              "GB",
              "GB-Eire",
              "GMT",
              "GMT+0",
              "GMT-0",
              "GMT0",
              "Greenwich",
              "HST",
              "Hongkong",
              "Iceland",
              "Indian/Antananarivo",
              "Indian/Chagos",
              "Indian/Christmas",
              "Indian/Cocos",
              "Indian/Comoro",
              "Indian/Kerguelen",
              "Indian/Mahe",
              "Indian/Maldives",
              "Indian/Mauritius",
              "Indian/Mayotte",
              "Indian/Reunion",
              "Iran",
              "Israel",
              "Jamaica",
              "Japan",
              "Kwajalein",
              "Libya",
              "MET",
              "MST",
              "MST7MDT",
              "Mexico/BajaNorte",
              "Mexico/BajaSur",
              "Mexico/General",
              "NZ",
              "NZ-CHAT",
              "Navajo",
              "PRC",
              "PST8PDT",
              "Pacific/Apia",
              "Pacific/Auckland",
              "Pacific/Bougainville",
              "Pacific/Chatham",
              "Pacific/Chuuk",
              "Pacific/Easter",
              "Pacific/Efate",
              "Pacific/Enderbury",
              "Pacific/Fakaofo",
              "Pacific/Fiji",
              "Pacific/Funafuti",
              "Pacific/Galapagos",
              "Pacific/Gambier",
              "Pacific/Guadalcanal",
              "Pacific/Guam",
              "Pacific/Honolulu",
              "Pacific/Johnston",
              "Pacific/Kanton",
              "Pacific/Kiritimati",
              "Pacific/Kosrae",
              "Pacific/Kwajalein",
              "Pacific/Majuro",
              "Pacific/Marquesas",
              "Pacific/Midway",
              "Pacific/Nauru",
              "Pacific/Niue",
              "Pacific/Norfolk",
              "Pacific/Noumea",
              "Pacific/Pago_Pago",
              "Pacific/Palau",
              "Pacific/Pitcairn",
              "Pacific/Pohnpei",
              "Pacific/Ponape",
              "Pacific/Port_Moresby",
              "Pacific/Rarotonga",
              "Pacific/Saipan",
              "Pacific/Samoa",
              "Pacific/Tahiti",
              "Pacific/Tarawa",
              "Pacific/Tongatapu",
              "Pacific/Truk",
              "Pacific/Wake",
              "Pacific/Wallis",
              "Pacific/Yap",
              "Poland",
              "Portugal",
              "ROC",
              "ROK",
              "Singapore",
              "Turkey",
              "UCT",
              "US/Alaska",
              "US/Aleutian",
              "US/Arizona",
              "US/Central",
              "US/East-Indiana",
              "US/Eastern",
              "US/Hawaii",
              "US/Indiana-Starke",
              "US/Michigan",
              "US/Mountain",
              "US/Pacific",
              "US/Samoa",
              "UTC",
              "Universal",
              "W-SU",
              "WET",
              "Zulu"
            ]
          }
        }
      }
    },
    {
      "type": "stream",
      "route": "/json.architect.Symbology/SubscribeSymbology",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "SubscribeSymbology",
        "type": "object"
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "SymbologyUpdate",
        "description": "Unique sequence id and number.",
        "type": "object",
        "required": [
          "sid",
          "sn"
        ],
        "properties": {
          "execution_info": {
            "anyOf": [
              {
                "$ref": "#/definitions/SnapshotOrUpdate_for_String_and_SnapshotOrUpdate_for_String_and_ExecutionInfo"
              },
              {
                "type": "null"
              }
            ]
          },
          "options_series": {
            "anyOf": [
              {
                "$ref": "#/definitions/SnapshotOrUpdate_for_String_and_OptionsSeriesInfo"
              },
              {
                "type": "null"
              }
            ]
          },
          "product_aliases": {
            "anyOf": [
              {
                "$ref": "#/definitions/SnapshotOrUpdate_for_AliasKind_and_SnapshotOrUpdate_for_String_and_String"
              },
              {
                "type": "null"
              }
            ]
          },
          "products": {
            "anyOf": [
              {
                "$ref": "#/definitions/SnapshotOrUpdate_for_String_and_ProductInfo"
              },
              {
                "type": "null"
              }
            ]
          },
          "sid": {
            "title": "sequence_id",
            "type": "integer",
            "format": "default",
            "minimum": 0.0
          },
          "sn": {
            "title": "sequence_number",
            "type": "integer",
            "format": "default",
            "minimum": 0.0
          }
        },
        "definitions": {
          "AliasKind": {
            "type": "string",
            "enum": [
              "CME_GLOBEX"
            ]
          },
          "Decimal": {
            "type": "string"
          },
          "DerivativeKind": {
            "oneOf": [
              {
                "description": "Normal futures",
                "type": "string",
                "enum": [
                  "Linear"
                ]
              },
              {
                "description": "Futures settled in the base currency",
                "type": "string",
                "enum": [
                  "Inverse"
                ]
              },
              {
                "description": "Quote currency different from settle currency",
                "type": "string",
                "enum": [
                  "Quanto"
                ]
              }
            ]
          },
          "EventContractSeriesInstance": {
            "oneOf": [
              {
                "type": "object",
                "required": [
                  "Enumerated"
                ],
                "properties": {
                  "Enumerated": {
                    "type": "object",
                    "required": [
                      "outcome"
                    ],
                    "properties": {
                      "outcome": {
                        "$ref": "#/definitions/Outcome"
                      }
                    }
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "object",
                "required": [
                  "OptionLike"
                ],
                "properties": {
                  "OptionLike": {
                    "type": "object",
                    "required": [
                      "strike"
                    ],
                    "properties": {
                      "expiration": {
                        "type": [
                          "string",
                          "null"
                        ],
                        "format": "date-time"
                      },
                      "strike": {
                        "type": "string",
                        "format": "decimal"
                      }
                    }
                  }
                },
                "additionalProperties": false
              }
            ]
          },
          "ExecutionInfo": {
            "description": "Information about a symbol related to its execution route.",
            "type": "object",
            "required": [
              "execution_venue",
              "is_delisted",
              "min_order_quantity",
              "min_order_quantity_unit",
              "step_size",
              "tick_size"
            ],
            "properties": {
              "execution_venue": {
                "type": "string"
              },
              "initial_margin": {
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "is_delisted": {
                "type": "boolean"
              },
              "maintenance_margin": {
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "min_order_quantity": {
                "type": "string",
                "format": "decimal"
              },
              "min_order_quantity_unit": {
                "$ref": "#/definitions/MinOrderQuantityUnit"
              },
              "step_size": {
                "type": "string",
                "format": "decimal"
              },
              "tick_size": {
                "$ref": "#/definitions/TickSize"
              }
            }
          },
          "MinOrderQuantityUnit": {
            "oneOf": [
              {
                "type": "object",
                "required": [
                  "unit"
                ],
                "properties": {
                  "unit": {
                    "type": "string",
                    "enum": [
                      "base"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "unit"
                ],
                "properties": {
                  "unit": {
                    "type": "string",
                    "enum": [
                      "quote"
                    ]
                  }
                }
              }
            ]
          },
          "OptionsExerciseType": {
            "type": "string",
            "enum": [
              "american",
              "european",
              "unknown"
            ]
          },
          "OptionsSeriesInfo": {
            "type": "object",
            "required": [
              "derivative_kind",
              "exercise_type",
              "expiration_time_of_day",
              "expiration_time_zone",
              "is_cash_settled",
              "multiplier",
              "options_series",
              "quote_symbol",
              "strikes_by_expiration",
              "underlying"
            ],
            "properties": {
              "derivative_kind": {
                "$ref": "#/definitions/DerivativeKind"
              },
              "exercise_type": {
                "$ref": "#/definitions/OptionsExerciseType"
              },
              "expiration_time_of_day": {
                "type": "string",
                "format": "partial-date-time"
              },
              "expiration_time_zone": {
                "$ref": "#/definitions/TimeZone"
              },
              "is_cash_settled": {
                "type": "boolean"
              },
              "multiplier": {
                "type": "string",
                "format": "decimal"
              },
              "options_series": {
                "type": "string"
              },
              "quote_symbol": {
                "type": "string"
              },
              "strikes_by_expiration": {
                "type": "object",
                "additionalProperties": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "decimal"
                  },
                  "uniqueItems": true
                }
              },
              "underlying": {
                "type": "string"
              },
              "venue_discriminant": {
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          },
          "OptionsSeriesInstance": {
            "description": "A specific option from a series.",
            "type": "object",
            "required": [
              "expiration",
              "put_or_call",
              "strike"
            ],
            "properties": {
              "expiration": {
                "type": "string",
                "format": "date-time"
              },
              "put_or_call": {
                "$ref": "#/definitions/PutOrCall"
              },
              "strike": {
                "type": "string",
                "format": "decimal"
              }
            }
          },
          "Outcome": {
            "type": "object",
            "required": [
              "name"
            ],
            "properties": {
              "name": {
                "type": "string"
              }
            }
          },
          "PriceDisplayFormat": {
            "type": "string"
          },
          "ProductInfo": {
            "type": "object",
            "required": [
              "product_type"
            ],
            "properties": {
              "price_display_format": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/PriceDisplayFormat"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "primary_venue": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "product_type": {
                "$ref": "#/definitions/ProductType"
              }
            }
          },
          "ProductType": {
            "oneOf": [
              {
                "type": "object",
                "required": [
                  "product_type"
                ],
                "properties": {
                  "product_type": {
                    "type": "string",
                    "enum": [
                      "Fiat"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "product_type"
                ],
                "properties": {
                  "product_type": {
                    "type": "string",
                    "enum": [
                      "Commodity"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "product_type"
                ],
                "properties": {
                  "product_type": {
                    "type": "string",
                    "enum": [
                      "Crypto"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "product_type"
                ],
                "properties": {
                  "product_type": {
                    "type": "string",
                    "enum": [
                      "Equity"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "product_type"
                ],
                "properties": {
                  "product_type": {
                    "type": "string",
                    "enum": [
                      "Index"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "derivative_kind",
                  "expiration",
                  "multiplier",
                  "product_type"
                ],
                "properties": {
                  "derivative_kind": {
                    "$ref": "#/definitions/DerivativeKind"
                  },
                  "expiration": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "first_notice_date": {
                    "default": null,
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date"
                  },
                  "multiplier": {
                    "type": "string",
                    "format": "decimal"
                  },
                  "product_type": {
                    "type": "string",
                    "enum": [
                      "Future"
                    ]
                  },
                  "series": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "underlying": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "legs",
                  "product_type"
                ],
                "properties": {
                  "legs": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/SpreadLeg"
                    }
                  },
                  "product_type": {
                    "type": "string",
                    "enum": [
                      "FutureSpread"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "derivative_kind",
                  "multiplier",
                  "product_type"
                ],
                "properties": {
                  "derivative_kind": {
                    "$ref": "#/definitions/DerivativeKind"
                  },
                  "multiplier": {
                    "type": "string",
                    "format": "decimal"
                  },
                  "product_type": {
                    "type": "string",
                    "enum": [
                      "Perpetual"
                    ]
                  },
                  "underlying": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "instance",
                  "product_type",
                  "series"
                ],
                "properties": {
                  "instance": {
                    "$ref": "#/definitions/OptionsSeriesInstance"
                  },
                  "product_type": {
                    "type": "string",
                    "enum": [
                      "Option"
                    ]
                  },
                  "series": {
                    "type": "string"
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "instance",
                  "product_type",
                  "series"
                ],
                "properties": {
                  "instance": {
                    "$ref": "#/definitions/EventContractSeriesInstance"
                  },
                  "product_type": {
                    "type": "string",
                    "enum": [
                      "EventContract"
                    ]
                  },
                  "series": {
                    "type": "string"
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "product_type"
                ],
                "properties": {
                  "product_type": {
                    "type": "string",
                    "enum": [
                      "Unknown"
                    ]
                  }
                }
              }
            ]
          },
          "PutOrCall": {
            "type": "string",
            "enum": [
              "P",
              "C"
            ]
          },
          "SnapshotOrUpdate_for_AliasKind_and_SnapshotOrUpdate_for_String_and_String": {
            "anyOf": [
              {
                "type": "object",
                "required": [
                  "snapshot"
                ],
                "properties": {
                  "snapshot": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/definitions/SnapshotOrUpdate_for_String_and_String"
                    }
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "updates"
                ],
                "properties": {
                  "updates": {
                    "type": "array",
                    "items": {
                      "type": "array",
                      "items": [
                        {
                          "$ref": "#/definitions/AliasKind"
                        },
                        {
                          "anyOf": [
                            {
                              "$ref": "#/definitions/SnapshotOrUpdate_for_String_and_String"
                            },
                            {
                              "type": "null"
                            }
                          ]
                        }
                      ],
                      "maxItems": 2,
                      "minItems": 2
                    }
                  }
                }
              }
            ]
          },
          "SnapshotOrUpdate_for_String_and_ExecutionInfo": {
            "anyOf": [
              {
                "type": "object",
                "required": [
                  "snapshot"
                ],
                "properties": {
                  "snapshot": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/definitions/ExecutionInfo"
                    }
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "updates"
                ],
                "properties": {
                  "updates": {
                    "type": "array",
                    "items": {
                      "type": "array",
                      "items": [
                        {
                          "type": "string"
                        },
                        {
                          "anyOf": [
                            {
                              "$ref": "#/definitions/ExecutionInfo"
                            },
                            {
                              "type": "null"
                            }
                          ]
                        }
                      ],
                      "maxItems": 2,
                      "minItems": 2
                    }
                  }
                }
              }
            ]
          },
          "SnapshotOrUpdate_for_String_and_OptionsSeriesInfo": {
            "anyOf": [
              {
                "type": "object",
                "required": [
                  "snapshot"
                ],
                "properties": {
                  "snapshot": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/definitions/OptionsSeriesInfo"
                    }
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "updates"
                ],
                "properties": {
                  "updates": {
                    "type": "array",
                    "items": {
                      "type": "array",
                      "items": [
                        {
                          "type": "string"
                        },
                        {
                          "anyOf": [
                            {
                              "$ref": "#/definitions/OptionsSeriesInfo"
                            },
                            {
                              "type": "null"
                            }
                          ]
                        }
                      ],
                      "maxItems": 2,
                      "minItems": 2
                    }
                  }
                }
              }
            ]
          },
          "SnapshotOrUpdate_for_String_and_ProductInfo": {
            "anyOf": [
              {
                "type": "object",
                "required": [
                  "snapshot"
                ],
                "properties": {
                  "snapshot": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/definitions/ProductInfo"
                    }
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "updates"
                ],
                "properties": {
                  "updates": {
                    "type": "array",
                    "items": {
                      "type": "array",
                      "items": [
                        {
                          "type": "string"
                        },
                        {
                          "anyOf": [
                            {
                              "$ref": "#/definitions/ProductInfo"
                            },
                            {
                              "type": "null"
                            }
                          ]
                        }
                      ],
                      "maxItems": 2,
                      "minItems": 2
                    }
                  }
                }
              }
            ]
          },
          "SnapshotOrUpdate_for_String_and_SnapshotOrUpdate_for_String_and_ExecutionInfo": {
            "anyOf": [
              {
                "type": "object",
                "required": [
                  "snapshot"
                ],
                "properties": {
                  "snapshot": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/definitions/SnapshotOrUpdate_for_String_and_ExecutionInfo"
                    }
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "updates"
                ],
                "properties": {
                  "updates": {
                    "type": "array",
                    "items": {
                      "type": "array",
                      "items": [
                        {
                          "type": "string"
                        },
                        {
                          "anyOf": [
                            {
                              "$ref": "#/definitions/SnapshotOrUpdate_for_String_and_ExecutionInfo"
                            },
                            {
                              "type": "null"
                            }
                          ]
                        }
                      ],
                      "maxItems": 2,
                      "minItems": 2
                    }
                  }
                }
              }
            ]
          },
          "SnapshotOrUpdate_for_String_and_String": {
            "anyOf": [
              {
                "type": "object",
                "required": [
                  "snapshot"
                ],
                "properties": {
                  "snapshot": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "updates"
                ],
                "properties": {
                  "updates": {
                    "type": "array",
                    "items": {
                      "type": "array",
                      "items": [
                        {
                          "type": "string"
                        },
                        {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      ],
                      "maxItems": 2,
                      "minItems": 2
                    }
                  }
                }
              }
            ]
          },
          "SpreadLeg": {
            "type": "object",
            "required": [
              "product",
              "quantity"
            ],
            "properties": {
              "product": {
                "type": "string"
              },
              "quantity": {
                "description": "Some spreads have different ratios for their legs, like buy 1 A, sell 2 B, buy 1 C; We would represent that with quantities in the legs: 1, -2, 1",
                "allOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  }
                ]
              }
            }
          },
          "TickSize": {
            "oneOf": [
              {
                "type": "object",
                "required": [
                  "simple"
                ],
                "properties": {
                  "simple": {
                    "type": "string",
                    "format": "decimal"
                  }
                },
                "additionalProperties": false
              },
              {
                "description": "List of (threshold, tick_size) pairs.  For price greater than or equal to each threshold, the tick size is the corresponding value.",
                "type": "object",
                "required": [
                  "varying"
                ],
                "properties": {
                  "varying": {
                    "type": "object",
                    "required": [
                      "thresholds"
                    ],
                    "properties": {
                      "thresholds": {
                        "type": "array",
                        "items": {
                          "type": "array",
                          "items": [
                            {
                              "type": "string",
                              "format": "decimal"
                            },
                            {
                              "type": "string",
                              "format": "decimal"
                            }
                          ],
                          "maxItems": 2,
                          "minItems": 2
                        }
                      }
                    }
                  }
                },
                "additionalProperties": false
              }
            ]
          },
          "TimeZone": {
            "type": "string",
            "enum": [
              "Africa/Abidjan",
              "Africa/Accra",
              "Africa/Addis_Ababa",
              "Africa/Algiers",
              "Africa/Asmara",
              "Africa/Asmera",
              "Africa/Bamako",
              "Africa/Bangui",
              "Africa/Banjul",
              "Africa/Bissau",
              "Africa/Blantyre",
              "Africa/Brazzaville",
              "Africa/Bujumbura",
              "Africa/Cairo",
              "Africa/Casablanca",
              "Africa/Ceuta",
              "Africa/Conakry",
              "Africa/Dakar",
              "Africa/Dar_es_Salaam",
              "Africa/Djibouti",
              "Africa/Douala",
              "Africa/El_Aaiun",
              "Africa/Freetown",
              "Africa/Gaborone",
              "Africa/Harare",
              "Africa/Johannesburg",
              "Africa/Juba",
              "Africa/Kampala",
              "Africa/Khartoum",
              "Africa/Kigali",
              "Africa/Kinshasa",
              "Africa/Lagos",
              "Africa/Libreville",
              "Africa/Lome",
              "Africa/Luanda",
              "Africa/Lubumbashi",
              "Africa/Lusaka",
              "Africa/Malabo",
              "Africa/Maputo",
              "Africa/Maseru",
              "Africa/Mbabane",
              "Africa/Mogadishu",
              "Africa/Monrovia",
              "Africa/Nairobi",
              "Africa/Ndjamena",
              "Africa/Niamey",
              "Africa/Nouakchott",
              "Africa/Ouagadougou",
              "Africa/Porto-Novo",
              "Africa/Sao_Tome",
              "Africa/Timbuktu",
              "Africa/Tripoli",
              "Africa/Tunis",
              "Africa/Windhoek",
              "America/Adak",
              "America/Anchorage",
              "America/Anguilla",
              "America/Antigua",
              "America/Araguaina",
              "America/Argentina/Buenos_Aires",
              "America/Argentina/Catamarca",
              "America/Argentina/ComodRivadavia",
              "America/Argentina/Cordoba",
              "America/Argentina/Jujuy",
              "America/Argentina/La_Rioja",
              "America/Argentina/Mendoza",
              "America/Argentina/Rio_Gallegos",
              "America/Argentina/Salta",
              "America/Argentina/San_Juan",
              "America/Argentina/San_Luis",
              "America/Argentina/Tucuman",
              "America/Argentina/Ushuaia",
              "America/Aruba",
              "America/Asuncion",
              "America/Atikokan",
              "America/Atka",
              "America/Bahia",
              "America/Bahia_Banderas",
              "America/Barbados",
              "America/Belem",
              "America/Belize",
              "America/Blanc-Sablon",
              "America/Boa_Vista",
              "America/Bogota",
              "America/Boise",
              "America/Buenos_Aires",
              "America/Cambridge_Bay",
              "America/Campo_Grande",
              "America/Cancun",
              "America/Caracas",
              "America/Catamarca",
              "America/Cayenne",
              "America/Cayman",
              "America/Chicago",
              "America/Chihuahua",
              "America/Ciudad_Juarez",
              "America/Coral_Harbour",
              "America/Cordoba",
              "America/Costa_Rica",
              "America/Creston",
              "America/Cuiaba",
              "America/Curacao",
              "America/Danmarkshavn",
              "America/Dawson",
              "America/Dawson_Creek",
              "America/Denver",
              "America/Detroit",
              "America/Dominica",
              "America/Edmonton",
              "America/Eirunepe",
              "America/El_Salvador",
              "America/Ensenada",
              "America/Fort_Nelson",
              "America/Fort_Wayne",
              "America/Fortaleza",
              "America/Glace_Bay",
              "America/Godthab",
              "America/Goose_Bay",
              "America/Grand_Turk",
              "America/Grenada",
              "America/Guadeloupe",
              "America/Guatemala",
              "America/Guayaquil",
              "America/Guyana",
              "America/Halifax",
              "America/Havana",
              "America/Hermosillo",
              "America/Indiana/Indianapolis",
              "America/Indiana/Knox",
              "America/Indiana/Marengo",
              "America/Indiana/Petersburg",
              "America/Indiana/Tell_City",
              "America/Indiana/Vevay",
              "America/Indiana/Vincennes",
              "America/Indiana/Winamac",
              "America/Indianapolis",
              "America/Inuvik",
              "America/Iqaluit",
              "America/Jamaica",
              "America/Jujuy",
              "America/Juneau",
              "America/Kentucky/Louisville",
              "America/Kentucky/Monticello",
              "America/Knox_IN",
              "America/Kralendijk",
              "America/La_Paz",
              "America/Lima",
              "America/Los_Angeles",
              "America/Louisville",
              "America/Lower_Princes",
              "America/Maceio",
              "America/Managua",
              "America/Manaus",
              "America/Marigot",
              "America/Martinique",
              "America/Matamoros",
              "America/Mazatlan",
              "America/Mendoza",
              "America/Menominee",
              "America/Merida",
              "America/Metlakatla",
              "America/Mexico_City",
              "America/Miquelon",
              "America/Moncton",
              "America/Monterrey",
              "America/Montevideo",
              "America/Montreal",
              "America/Montserrat",
              "America/Nassau",
              "America/New_York",
              "America/Nipigon",
              "America/Nome",
              "America/Noronha",
              "America/North_Dakota/Beulah",
              "America/North_Dakota/Center",
              "America/North_Dakota/New_Salem",
              "America/Nuuk",
              "America/Ojinaga",
              "America/Panama",
              "America/Pangnirtung",
              "America/Paramaribo",
              "America/Phoenix",
              "America/Port-au-Prince",
              "America/Port_of_Spain",
              "America/Porto_Acre",
              "America/Porto_Velho",
              "America/Puerto_Rico",
              "America/Punta_Arenas",
              "America/Rainy_River",
              "America/Rankin_Inlet",
              "America/Recife",
              "America/Regina",
              "America/Resolute",
              "America/Rio_Branco",
              "America/Rosario",
              "America/Santa_Isabel",
              "America/Santarem",
              "America/Santiago",
              "America/Santo_Domingo",
              "America/Sao_Paulo",
              "America/Scoresbysund",
              "America/Shiprock",
              "America/Sitka",
              "America/St_Barthelemy",
              "America/St_Johns",
              "America/St_Kitts",
              "America/St_Lucia",
              "America/St_Thomas",
              "America/St_Vincent",
              "America/Swift_Current",
              "America/Tegucigalpa",
              "America/Thule",
              "America/Thunder_Bay",
              "America/Tijuana",
              "America/Toronto",
              "America/Tortola",
              "America/Vancouver",
              "America/Virgin",
              "America/Whitehorse",
              "America/Winnipeg",
              "America/Yakutat",
              "America/Yellowknife",
              "Antarctica/Casey",
              "Antarctica/Davis",
              "Antarctica/DumontDUrville",
              "Antarctica/Macquarie",
              "Antarctica/Mawson",
              "Antarctica/McMurdo",
              "Antarctica/Palmer",
              "Antarctica/Rothera",
              "Antarctica/South_Pole",
              "Antarctica/Syowa",
              "Antarctica/Troll",
              "Antarctica/Vostok",
              "Arctic/Longyearbyen",
              "Asia/Aden",
              "Asia/Almaty",
              "Asia/Amman",
              "Asia/Anadyr",
              "Asia/Aqtau",
              "Asia/Aqtobe",
              "Asia/Ashgabat",
              "Asia/Ashkhabad",
              "Asia/Atyrau",
              "Asia/Baghdad",
              "Asia/Bahrain",
              "Asia/Baku",
              "Asia/Bangkok",
              "Asia/Barnaul",
              "Asia/Beirut",
              "Asia/Bishkek",
              "Asia/Brunei",
              "Asia/Calcutta",
              "Asia/Chita",
              "Asia/Choibalsan",
              "Asia/Chongqing",
              "Asia/Chungking",
              "Asia/Colombo",
              "Asia/Dacca",
              "Asia/Damascus",
              "Asia/Dhaka",
              "Asia/Dili",
              "Asia/Dubai",
              "Asia/Dushanbe",
              "Asia/Famagusta",
              "Asia/Gaza",
              "Asia/Harbin",
              "Asia/Hebron",
              "Asia/Ho_Chi_Minh",
              "Asia/Hong_Kong",
              "Asia/Hovd",
              "Asia/Irkutsk",
              "Asia/Istanbul",
              "Asia/Jakarta",
              "Asia/Jayapura",
              "Asia/Jerusalem",
              "Asia/Kabul",
              "Asia/Kamchatka",
              "Asia/Karachi",
              "Asia/Kashgar",
              "Asia/Kathmandu",
              "Asia/Katmandu",
              "Asia/Khandyga",
              "Asia/Kolkata",
              "Asia/Krasnoyarsk",
              "Asia/Kuala_Lumpur",
              "Asia/Kuching",
              "Asia/Kuwait",
              "Asia/Macao",
              "Asia/Macau",
              "Asia/Magadan",
              "Asia/Makassar",
              "Asia/Manila",
              "Asia/Muscat",
              "Asia/Nicosia",
              "Asia/Novokuznetsk",
              "Asia/Novosibirsk",
              "Asia/Omsk",
              "Asia/Oral",
              "Asia/Phnom_Penh",
              "Asia/Pontianak",
              "Asia/Pyongyang",
              "Asia/Qatar",
              "Asia/Qostanay",
              "Asia/Qyzylorda",
              "Asia/Rangoon",
              "Asia/Riyadh",
              "Asia/Saigon",
              "Asia/Sakhalin",
              "Asia/Samarkand",
              "Asia/Seoul",
              "Asia/Shanghai",
              "Asia/Singapore",
              "Asia/Srednekolymsk",
              "Asia/Taipei",
              "Asia/Tashkent",
              "Asia/Tbilisi",
              "Asia/Tehran",
              "Asia/Tel_Aviv",
              "Asia/Thimbu",
              "Asia/Thimphu",
              "Asia/Tokyo",
              "Asia/Tomsk",
              "Asia/Ujung_Pandang",
              "Asia/Ulaanbaatar",
              "Asia/Ulan_Bator",
              "Asia/Urumqi",
              "Asia/Ust-Nera",
              "Asia/Vientiane",
              "Asia/Vladivostok",
              "Asia/Yakutsk",
              "Asia/Yangon",
              "Asia/Yekaterinburg",
              "Asia/Yerevan",
              "Atlantic/Azores",
              "Atlantic/Bermuda",
              "Atlantic/Canary",
              "Atlantic/Cape_Verde",
              "Atlantic/Faeroe",
              "Atlantic/Faroe",
              "Atlantic/Jan_Mayen",
              "Atlantic/Madeira",
              "Atlantic/Reykjavik",
              "Atlantic/South_Georgia",
              "Atlantic/St_Helena",
              "Atlantic/Stanley",
              "Australia/ACT",
              "Australia/Adelaide",
              "Australia/Brisbane",
              "Australia/Broken_Hill",
              "Australia/Canberra",
              "Australia/Currie",
              "Australia/Darwin",
              "Australia/Eucla",
              "Australia/Hobart",
              "Australia/LHI",
              "Australia/Lindeman",
              "Australia/Lord_Howe",
              "Australia/Melbourne",
              "Australia/NSW",
              "Australia/North",
              "Australia/Perth",
              "Australia/Queensland",
              "Australia/South",
              "Australia/Sydney",
              "Australia/Tasmania",
              "Australia/Victoria",
              "Australia/West",
              "Australia/Yancowinna",
              "Brazil/Acre",
              "Brazil/DeNoronha",
              "Brazil/East",
              "Brazil/West",
              "CET",
              "CST6CDT",
              "Canada/Atlantic",
              "Canada/Central",
              "Canada/Eastern",
              "Canada/Mountain",
              "Canada/Newfoundland",
              "Canada/Pacific",
              "Canada/Saskatchewan",
              "Canada/Yukon",
              "Chile/Continental",
              "Chile/EasterIsland",
              "Cuba",
              "EET",
              "EST",
              "EST5EDT",
              "Egypt",
              "Eire",
              "Etc/GMT",
              "Etc/GMT+0",
              "Etc/GMT+1",
              "Etc/GMT+10",
              "Etc/GMT+11",
              "Etc/GMT+12",
              "Etc/GMT+2",
              "Etc/GMT+3",
              "Etc/GMT+4",
              "Etc/GMT+5",
              "Etc/GMT+6",
              "Etc/GMT+7",
              "Etc/GMT+8",
              "Etc/GMT+9",
              "Etc/GMT-0",
              "Etc/GMT-1",
              "Etc/GMT-10",
              "Etc/GMT-11",
              "Etc/GMT-12",
              "Etc/GMT-13",
              "Etc/GMT-14",
              "Etc/GMT-2",
              "Etc/GMT-3",
              "Etc/GMT-4",
              "Etc/GMT-5",
              "Etc/GMT-6",
              "Etc/GMT-7",
              "Etc/GMT-8",
              "Etc/GMT-9",
              "Etc/GMT0",
              "Etc/Greenwich",
              "Etc/UCT",
              "Etc/UTC",
              "Etc/Universal",
              "Etc/Zulu",
              "Europe/Amsterdam",
              "Europe/Andorra",
              "Europe/Astrakhan",
              "Europe/Athens",
              "Europe/Belfast",
              "Europe/Belgrade",
              "Europe/Berlin",
              "Europe/Bratislava",
              "Europe/Brussels",
              "Europe/Bucharest",
              "Europe/Budapest",
              "Europe/Busingen",
              "Europe/Chisinau",
              "Europe/Copenhagen",
              "Europe/Dublin",
              "Europe/Gibraltar",
              "Europe/Guernsey",
              "Europe/Helsinki",
              "Europe/Isle_of_Man",
              "Europe/Istanbul",
              "Europe/Jersey",
              "Europe/Kaliningrad",
              "Europe/Kiev",
              "Europe/Kirov",
              "Europe/Kyiv",
              "Europe/Lisbon",
              "Europe/Ljubljana",
              "Europe/London",
              "Europe/Luxembourg",
              "Europe/Madrid",
              "Europe/Malta",
              "Europe/Mariehamn",
              "Europe/Minsk",
              "Europe/Monaco",
              "Europe/Moscow",
              "Europe/Nicosia",
              "Europe/Oslo",
              "Europe/Paris",
              "Europe/Podgorica",
              "Europe/Prague",
              "Europe/Riga",
              "Europe/Rome",
              "Europe/Samara",
              "Europe/San_Marino",
              "Europe/Sarajevo",
              "Europe/Saratov",
              "Europe/Simferopol",
              "Europe/Skopje",
              "Europe/Sofia",
              "Europe/Stockholm",
              "Europe/Tallinn",
              "Europe/Tirane",
              "Europe/Tiraspol",
              "Europe/Ulyanovsk",
              "Europe/Uzhgorod",
              "Europe/Vaduz",
              "Europe/Vatican",
              "Europe/Vienna",
              "Europe/Vilnius",
              "Europe/Volgograd",
              "Europe/Warsaw",
              "Europe/Zagreb",
              "Europe/Zaporozhye",
              "Europe/Zurich",
              "GB",
              "GB-Eire",
              "GMT",
              "GMT+0",
              "GMT-0",
              "GMT0",
              "Greenwich",
              "HST",
              "Hongkong",
              "Iceland",
              "Indian/Antananarivo",
              "Indian/Chagos",
              "Indian/Christmas",
              "Indian/Cocos",
              "Indian/Comoro",
              "Indian/Kerguelen",
              "Indian/Mahe",
              "Indian/Maldives",
              "Indian/Mauritius",
              "Indian/Mayotte",
              "Indian/Reunion",
              "Iran",
              "Israel",
              "Jamaica",
              "Japan",
              "Kwajalein",
              "Libya",
              "MET",
              "MST",
              "MST7MDT",
              "Mexico/BajaNorte",
              "Mexico/BajaSur",
              "Mexico/General",
              "NZ",
              "NZ-CHAT",
              "Navajo",
              "PRC",
              "PST8PDT",
              "Pacific/Apia",
              "Pacific/Auckland",
              "Pacific/Bougainville",
              "Pacific/Chatham",
              "Pacific/Chuuk",
              "Pacific/Easter",
              "Pacific/Efate",
              "Pacific/Enderbury",
              "Pacific/Fakaofo",
              "Pacific/Fiji",
              "Pacific/Funafuti",
              "Pacific/Galapagos",
              "Pacific/Gambier",
              "Pacific/Guadalcanal",
              "Pacific/Guam",
              "Pacific/Honolulu",
              "Pacific/Johnston",
              "Pacific/Kanton",
              "Pacific/Kiritimati",
              "Pacific/Kosrae",
              "Pacific/Kwajalein",
              "Pacific/Majuro",
              "Pacific/Marquesas",
              "Pacific/Midway",
              "Pacific/Nauru",
              "Pacific/Niue",
              "Pacific/Norfolk",
              "Pacific/Noumea",
              "Pacific/Pago_Pago",
              "Pacific/Palau",
              "Pacific/Pitcairn",
              "Pacific/Pohnpei",
              "Pacific/Ponape",
              "Pacific/Port_Moresby",
              "Pacific/Rarotonga",
              "Pacific/Saipan",
              "Pacific/Samoa",
              "Pacific/Tahiti",
              "Pacific/Tarawa",
              "Pacific/Tongatapu",
              "Pacific/Truk",
              "Pacific/Wake",
              "Pacific/Wallis",
              "Pacific/Yap",
              "Poland",
              "Portugal",
              "ROC",
              "ROK",
              "Singapore",
              "Turkey",
              "UCT",
              "US/Alaska",
              "US/Aleutian",
              "US/Arizona",
              "US/Central",
              "US/East-Indiana",
              "US/Eastern",
              "US/Hawaii",
              "US/Indiana-Starke",
              "US/Michigan",
              "US/Mountain",
              "US/Pacific",
              "US/Samoa",
              "UTC",
              "Universal",
              "W-SU",
              "WET",
              "Zulu"
            ]
          }
        }
      }
    },
    {
      "type": "unary",
      "route": "/json.architect.Symbology/UploadSymbology",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "UploadSymbologyRequest",
        "type": "object",
        "properties": {
          "execution_info": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/ExecutionInfo"
              }
            }
          },
          "options_series": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/definitions/OptionsSeriesInfo"
            }
          },
          "product_aliases": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "products": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/definitions/ProductInfo"
            }
          }
        },
        "definitions": {
          "Decimal": {
            "type": "string"
          },
          "DerivativeKind": {
            "oneOf": [
              {
                "description": "Normal futures",
                "type": "string",
                "enum": [
                  "Linear"
                ]
              },
              {
                "description": "Futures settled in the base currency",
                "type": "string",
                "enum": [
                  "Inverse"
                ]
              },
              {
                "description": "Quote currency different from settle currency",
                "type": "string",
                "enum": [
                  "Quanto"
                ]
              }
            ]
          },
          "EventContractSeriesInstance": {
            "oneOf": [
              {
                "type": "object",
                "required": [
                  "Enumerated"
                ],
                "properties": {
                  "Enumerated": {
                    "type": "object",
                    "required": [
                      "outcome"
                    ],
                    "properties": {
                      "outcome": {
                        "$ref": "#/definitions/Outcome"
                      }
                    }
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "object",
                "required": [
                  "OptionLike"
                ],
                "properties": {
                  "OptionLike": {
                    "type": "object",
                    "required": [
                      "strike"
                    ],
                    "properties": {
                      "expiration": {
                        "type": [
                          "string",
                          "null"
                        ],
                        "format": "date-time"
                      },
                      "strike": {
                        "type": "string",
                        "format": "decimal"
                      }
                    }
                  }
                },
                "additionalProperties": false
              }
            ]
          },
          "ExecutionInfo": {
            "description": "Information about a symbol related to its execution route.",
            "type": "object",
            "required": [
              "execution_venue",
              "is_delisted",
              "min_order_quantity",
              "min_order_quantity_unit",
              "step_size",
              "tick_size"
            ],
            "properties": {
              "execution_venue": {
                "type": "string"
              },
              "initial_margin": {
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "is_delisted": {
                "type": "boolean"
              },
              "maintenance_margin": {
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "min_order_quantity": {
                "type": "string",
                "format": "decimal"
              },
              "min_order_quantity_unit": {
                "$ref": "#/definitions/MinOrderQuantityUnit"
              },
              "step_size": {
                "type": "string",
                "format": "decimal"
              },
              "tick_size": {
                "$ref": "#/definitions/TickSize"
              }
            }
          },
          "MinOrderQuantityUnit": {
            "oneOf": [
              {
                "type": "object",
                "required": [
                  "unit"
                ],
                "properties": {
                  "unit": {
                    "type": "string",
                    "enum": [
                      "base"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "unit"
                ],
                "properties": {
                  "unit": {
                    "type": "string",
                    "enum": [
                      "quote"
                    ]
                  }
                }
              }
            ]
          },
          "OptionsExerciseType": {
            "type": "string",
            "enum": [
              "american",
              "european",
              "unknown"
            ]
          },
          "OptionsSeriesInfo": {
            "type": "object",
            "required": [
              "derivative_kind",
              "exercise_type",
              "expiration_time_of_day",
              "expiration_time_zone",
              "is_cash_settled",
              "multiplier",
              "options_series",
              "quote_symbol",
              "strikes_by_expiration",
              "underlying"
            ],
            "properties": {
              "derivative_kind": {
                "$ref": "#/definitions/DerivativeKind"
              },
              "exercise_type": {
                "$ref": "#/definitions/OptionsExerciseType"
              },
              "expiration_time_of_day": {
                "type": "string",
                "format": "partial-date-time"
              },
              "expiration_time_zone": {
                "$ref": "#/definitions/TimeZone"
              },
              "is_cash_settled": {
                "type": "boolean"
              },
              "multiplier": {
                "type": "string",
                "format": "decimal"
              },
              "options_series": {
                "type": "string"
              },
              "quote_symbol": {
                "type": "string"
              },
              "strikes_by_expiration": {
                "type": "object",
                "additionalProperties": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "decimal"
                  },
                  "uniqueItems": true
                }
              },
              "underlying": {
                "type": "string"
              },
              "venue_discriminant": {
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          },
          "OptionsSeriesInstance": {
            "description": "A specific option from a series.",
            "type": "object",
            "required": [
              "expiration",
              "put_or_call",
              "strike"
            ],
            "properties": {
              "expiration": {
                "type": "string",
                "format": "date-time"
              },
              "put_or_call": {
                "$ref": "#/definitions/PutOrCall"
              },
              "strike": {
                "type": "string",
                "format": "decimal"
              }
            }
          },
          "Outcome": {
            "type": "object",
            "required": [
              "name"
            ],
            "properties": {
              "name": {
                "type": "string"
              }
            }
          },
          "PriceDisplayFormat": {
            "type": "string"
          },
          "ProductInfo": {
            "type": "object",
            "required": [
              "product_type"
            ],
            "properties": {
              "price_display_format": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/PriceDisplayFormat"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "primary_venue": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "product_type": {
                "$ref": "#/definitions/ProductType"
              }
            }
          },
          "ProductType": {
            "oneOf": [
              {
                "type": "object",
                "required": [
                  "product_type"
                ],
                "properties": {
                  "product_type": {
                    "type": "string",
                    "enum": [
                      "Fiat"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "product_type"
                ],
                "properties": {
                  "product_type": {
                    "type": "string",
                    "enum": [
                      "Commodity"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "product_type"
                ],
                "properties": {
                  "product_type": {
                    "type": "string",
                    "enum": [
                      "Crypto"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "product_type"
                ],
                "properties": {
                  "product_type": {
                    "type": "string",
                    "enum": [
                      "Equity"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "product_type"
                ],
                "properties": {
                  "product_type": {
                    "type": "string",
                    "enum": [
                      "Index"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "derivative_kind",
                  "expiration",
                  "multiplier",
                  "product_type"
                ],
                "properties": {
                  "derivative_kind": {
                    "$ref": "#/definitions/DerivativeKind"
                  },
                  "expiration": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "first_notice_date": {
                    "default": null,
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date"
                  },
                  "multiplier": {
                    "type": "string",
                    "format": "decimal"
                  },
                  "product_type": {
                    "type": "string",
                    "enum": [
                      "Future"
                    ]
                  },
                  "series": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "underlying": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "legs",
                  "product_type"
                ],
                "properties": {
                  "legs": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/SpreadLeg"
                    }
                  },
                  "product_type": {
                    "type": "string",
                    "enum": [
                      "FutureSpread"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "derivative_kind",
                  "multiplier",
                  "product_type"
                ],
                "properties": {
                  "derivative_kind": {
                    "$ref": "#/definitions/DerivativeKind"
                  },
                  "multiplier": {
                    "type": "string",
                    "format": "decimal"
                  },
                  "product_type": {
                    "type": "string",
                    "enum": [
                      "Perpetual"
                    ]
                  },
                  "underlying": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "instance",
                  "product_type",
                  "series"
                ],
                "properties": {
                  "instance": {
                    "$ref": "#/definitions/OptionsSeriesInstance"
                  },
                  "product_type": {
                    "type": "string",
                    "enum": [
                      "Option"
                    ]
                  },
                  "series": {
                    "type": "string"
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "instance",
                  "product_type",
                  "series"
                ],
                "properties": {
                  "instance": {
                    "$ref": "#/definitions/EventContractSeriesInstance"
                  },
                  "product_type": {
                    "type": "string",
                    "enum": [
                      "EventContract"
                    ]
                  },
                  "series": {
                    "type": "string"
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "product_type"
                ],
                "properties": {
                  "product_type": {
                    "type": "string",
                    "enum": [
                      "Unknown"
                    ]
                  }
                }
              }
            ]
          },
          "PutOrCall": {
            "type": "string",
            "enum": [
              "P",
              "C"
            ]
          },
          "SpreadLeg": {
            "type": "object",
            "required": [
              "product",
              "quantity"
            ],
            "properties": {
              "product": {
                "type": "string"
              },
              "quantity": {
                "description": "Some spreads have different ratios for their legs, like buy 1 A, sell 2 B, buy 1 C; We would represent that with quantities in the legs: 1, -2, 1",
                "allOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  }
                ]
              }
            }
          },
          "TickSize": {
            "oneOf": [
              {
                "type": "object",
                "required": [
                  "simple"
                ],
                "properties": {
                  "simple": {
                    "type": "string",
                    "format": "decimal"
                  }
                },
                "additionalProperties": false
              },
              {
                "description": "List of (threshold, tick_size) pairs.  For price greater than or equal to each threshold, the tick size is the corresponding value.",
                "type": "object",
                "required": [
                  "varying"
                ],
                "properties": {
                  "varying": {
                    "type": "object",
                    "required": [
                      "thresholds"
                    ],
                    "properties": {
                      "thresholds": {
                        "type": "array",
                        "items": {
                          "type": "array",
                          "items": [
                            {
                              "type": "string",
                              "format": "decimal"
                            },
                            {
                              "type": "string",
                              "format": "decimal"
                            }
                          ],
                          "maxItems": 2,
                          "minItems": 2
                        }
                      }
                    }
                  }
                },
                "additionalProperties": false
              }
            ]
          },
          "TimeZone": {
            "type": "string",
            "enum": [
              "Africa/Abidjan",
              "Africa/Accra",
              "Africa/Addis_Ababa",
              "Africa/Algiers",
              "Africa/Asmara",
              "Africa/Asmera",
              "Africa/Bamako",
              "Africa/Bangui",
              "Africa/Banjul",
              "Africa/Bissau",
              "Africa/Blantyre",
              "Africa/Brazzaville",
              "Africa/Bujumbura",
              "Africa/Cairo",
              "Africa/Casablanca",
              "Africa/Ceuta",
              "Africa/Conakry",
              "Africa/Dakar",
              "Africa/Dar_es_Salaam",
              "Africa/Djibouti",
              "Africa/Douala",
              "Africa/El_Aaiun",
              "Africa/Freetown",
              "Africa/Gaborone",
              "Africa/Harare",
              "Africa/Johannesburg",
              "Africa/Juba",
              "Africa/Kampala",
              "Africa/Khartoum",
              "Africa/Kigali",
              "Africa/Kinshasa",
              "Africa/Lagos",
              "Africa/Libreville",
              "Africa/Lome",
              "Africa/Luanda",
              "Africa/Lubumbashi",
              "Africa/Lusaka",
              "Africa/Malabo",
              "Africa/Maputo",
              "Africa/Maseru",
              "Africa/Mbabane",
              "Africa/Mogadishu",
              "Africa/Monrovia",
              "Africa/Nairobi",
              "Africa/Ndjamena",
              "Africa/Niamey",
              "Africa/Nouakchott",
              "Africa/Ouagadougou",
              "Africa/Porto-Novo",
              "Africa/Sao_Tome",
              "Africa/Timbuktu",
              "Africa/Tripoli",
              "Africa/Tunis",
              "Africa/Windhoek",
              "America/Adak",
              "America/Anchorage",
              "America/Anguilla",
              "America/Antigua",
              "America/Araguaina",
              "America/Argentina/Buenos_Aires",
              "America/Argentina/Catamarca",
              "America/Argentina/ComodRivadavia",
              "America/Argentina/Cordoba",
              "America/Argentina/Jujuy",
              "America/Argentina/La_Rioja",
              "America/Argentina/Mendoza",
              "America/Argentina/Rio_Gallegos",
              "America/Argentina/Salta",
              "America/Argentina/San_Juan",
              "America/Argentina/San_Luis",
              "America/Argentina/Tucuman",
              "America/Argentina/Ushuaia",
              "America/Aruba",
              "America/Asuncion",
              "America/Atikokan",
              "America/Atka",
              "America/Bahia",
              "America/Bahia_Banderas",
              "America/Barbados",
              "America/Belem",
              "America/Belize",
              "America/Blanc-Sablon",
              "America/Boa_Vista",
              "America/Bogota",
              "America/Boise",
              "America/Buenos_Aires",
              "America/Cambridge_Bay",
              "America/Campo_Grande",
              "America/Cancun",
              "America/Caracas",
              "America/Catamarca",
              "America/Cayenne",
              "America/Cayman",
              "America/Chicago",
              "America/Chihuahua",
              "America/Ciudad_Juarez",
              "America/Coral_Harbour",
              "America/Cordoba",
              "America/Costa_Rica",
              "America/Creston",
              "America/Cuiaba",
              "America/Curacao",
              "America/Danmarkshavn",
              "America/Dawson",
              "America/Dawson_Creek",
              "America/Denver",
              "America/Detroit",
              "America/Dominica",
              "America/Edmonton",
              "America/Eirunepe",
              "America/El_Salvador",
              "America/Ensenada",
              "America/Fort_Nelson",
              "America/Fort_Wayne",
              "America/Fortaleza",
              "America/Glace_Bay",
              "America/Godthab",
              "America/Goose_Bay",
              "America/Grand_Turk",
              "America/Grenada",
              "America/Guadeloupe",
              "America/Guatemala",
              "America/Guayaquil",
              "America/Guyana",
              "America/Halifax",
              "America/Havana",
              "America/Hermosillo",
              "America/Indiana/Indianapolis",
              "America/Indiana/Knox",
              "America/Indiana/Marengo",
              "America/Indiana/Petersburg",
              "America/Indiana/Tell_City",
              "America/Indiana/Vevay",
              "America/Indiana/Vincennes",
              "America/Indiana/Winamac",
              "America/Indianapolis",
              "America/Inuvik",
              "America/Iqaluit",
              "America/Jamaica",
              "America/Jujuy",
              "America/Juneau",
              "America/Kentucky/Louisville",
              "America/Kentucky/Monticello",
              "America/Knox_IN",
              "America/Kralendijk",
              "America/La_Paz",
              "America/Lima",
              "America/Los_Angeles",
              "America/Louisville",
              "America/Lower_Princes",
              "America/Maceio",
              "America/Managua",
              "America/Manaus",
              "America/Marigot",
              "America/Martinique",
              "America/Matamoros",
              "America/Mazatlan",
              "America/Mendoza",
              "America/Menominee",
              "America/Merida",
              "America/Metlakatla",
              "America/Mexico_City",
              "America/Miquelon",
              "America/Moncton",
              "America/Monterrey",
              "America/Montevideo",
              "America/Montreal",
              "America/Montserrat",
              "America/Nassau",
              "America/New_York",
              "America/Nipigon",
              "America/Nome",
              "America/Noronha",
              "America/North_Dakota/Beulah",
              "America/North_Dakota/Center",
              "America/North_Dakota/New_Salem",
              "America/Nuuk",
              "America/Ojinaga",
              "America/Panama",
              "America/Pangnirtung",
              "America/Paramaribo",
              "America/Phoenix",
              "America/Port-au-Prince",
              "America/Port_of_Spain",
              "America/Porto_Acre",
              "America/Porto_Velho",
              "America/Puerto_Rico",
              "America/Punta_Arenas",
              "America/Rainy_River",
              "America/Rankin_Inlet",
              "America/Recife",
              "America/Regina",
              "America/Resolute",
              "America/Rio_Branco",
              "America/Rosario",
              "America/Santa_Isabel",
              "America/Santarem",
              "America/Santiago",
              "America/Santo_Domingo",
              "America/Sao_Paulo",
              "America/Scoresbysund",
              "America/Shiprock",
              "America/Sitka",
              "America/St_Barthelemy",
              "America/St_Johns",
              "America/St_Kitts",
              "America/St_Lucia",
              "America/St_Thomas",
              "America/St_Vincent",
              "America/Swift_Current",
              "America/Tegucigalpa",
              "America/Thule",
              "America/Thunder_Bay",
              "America/Tijuana",
              "America/Toronto",
              "America/Tortola",
              "America/Vancouver",
              "America/Virgin",
              "America/Whitehorse",
              "America/Winnipeg",
              "America/Yakutat",
              "America/Yellowknife",
              "Antarctica/Casey",
              "Antarctica/Davis",
              "Antarctica/DumontDUrville",
              "Antarctica/Macquarie",
              "Antarctica/Mawson",
              "Antarctica/McMurdo",
              "Antarctica/Palmer",
              "Antarctica/Rothera",
              "Antarctica/South_Pole",
              "Antarctica/Syowa",
              "Antarctica/Troll",
              "Antarctica/Vostok",
              "Arctic/Longyearbyen",
              "Asia/Aden",
              "Asia/Almaty",
              "Asia/Amman",
              "Asia/Anadyr",
              "Asia/Aqtau",
              "Asia/Aqtobe",
              "Asia/Ashgabat",
              "Asia/Ashkhabad",
              "Asia/Atyrau",
              "Asia/Baghdad",
              "Asia/Bahrain",
              "Asia/Baku",
              "Asia/Bangkok",
              "Asia/Barnaul",
              "Asia/Beirut",
              "Asia/Bishkek",
              "Asia/Brunei",
              "Asia/Calcutta",
              "Asia/Chita",
              "Asia/Choibalsan",
              "Asia/Chongqing",
              "Asia/Chungking",
              "Asia/Colombo",
              "Asia/Dacca",
              "Asia/Damascus",
              "Asia/Dhaka",
              "Asia/Dili",
              "Asia/Dubai",
              "Asia/Dushanbe",
              "Asia/Famagusta",
              "Asia/Gaza",
              "Asia/Harbin",
              "Asia/Hebron",
              "Asia/Ho_Chi_Minh",
              "Asia/Hong_Kong",
              "Asia/Hovd",
              "Asia/Irkutsk",
              "Asia/Istanbul",
              "Asia/Jakarta",
              "Asia/Jayapura",
              "Asia/Jerusalem",
              "Asia/Kabul",
              "Asia/Kamchatka",
              "Asia/Karachi",
              "Asia/Kashgar",
              "Asia/Kathmandu",
              "Asia/Katmandu",
              "Asia/Khandyga",
              "Asia/Kolkata",
              "Asia/Krasnoyarsk",
              "Asia/Kuala_Lumpur",
              "Asia/Kuching",
              "Asia/Kuwait",
              "Asia/Macao",
              "Asia/Macau",
              "Asia/Magadan",
              "Asia/Makassar",
              "Asia/Manila",
              "Asia/Muscat",
              "Asia/Nicosia",
              "Asia/Novokuznetsk",
              "Asia/Novosibirsk",
              "Asia/Omsk",
              "Asia/Oral",
              "Asia/Phnom_Penh",
              "Asia/Pontianak",
              "Asia/Pyongyang",
              "Asia/Qatar",
              "Asia/Qostanay",
              "Asia/Qyzylorda",
              "Asia/Rangoon",
              "Asia/Riyadh",
              "Asia/Saigon",
              "Asia/Sakhalin",
              "Asia/Samarkand",
              "Asia/Seoul",
              "Asia/Shanghai",
              "Asia/Singapore",
              "Asia/Srednekolymsk",
              "Asia/Taipei",
              "Asia/Tashkent",
              "Asia/Tbilisi",
              "Asia/Tehran",
              "Asia/Tel_Aviv",
              "Asia/Thimbu",
              "Asia/Thimphu",
              "Asia/Tokyo",
              "Asia/Tomsk",
              "Asia/Ujung_Pandang",
              "Asia/Ulaanbaatar",
              "Asia/Ulan_Bator",
              "Asia/Urumqi",
              "Asia/Ust-Nera",
              "Asia/Vientiane",
              "Asia/Vladivostok",
              "Asia/Yakutsk",
              "Asia/Yangon",
              "Asia/Yekaterinburg",
              "Asia/Yerevan",
              "Atlantic/Azores",
              "Atlantic/Bermuda",
              "Atlantic/Canary",
              "Atlantic/Cape_Verde",
              "Atlantic/Faeroe",
              "Atlantic/Faroe",
              "Atlantic/Jan_Mayen",
              "Atlantic/Madeira",
              "Atlantic/Reykjavik",
              "Atlantic/South_Georgia",
              "Atlantic/St_Helena",
              "Atlantic/Stanley",
              "Australia/ACT",
              "Australia/Adelaide",
              "Australia/Brisbane",
              "Australia/Broken_Hill",
              "Australia/Canberra",
              "Australia/Currie",
              "Australia/Darwin",
              "Australia/Eucla",
              "Australia/Hobart",
              "Australia/LHI",
              "Australia/Lindeman",
              "Australia/Lord_Howe",
              "Australia/Melbourne",
              "Australia/NSW",
              "Australia/North",
              "Australia/Perth",
              "Australia/Queensland",
              "Australia/South",
              "Australia/Sydney",
              "Australia/Tasmania",
              "Australia/Victoria",
              "Australia/West",
              "Australia/Yancowinna",
              "Brazil/Acre",
              "Brazil/DeNoronha",
              "Brazil/East",
              "Brazil/West",
              "CET",
              "CST6CDT",
              "Canada/Atlantic",
              "Canada/Central",
              "Canada/Eastern",
              "Canada/Mountain",
              "Canada/Newfoundland",
              "Canada/Pacific",
              "Canada/Saskatchewan",
              "Canada/Yukon",
              "Chile/Continental",
              "Chile/EasterIsland",
              "Cuba",
              "EET",
              "EST",
              "EST5EDT",
              "Egypt",
              "Eire",
              "Etc/GMT",
              "Etc/GMT+0",
              "Etc/GMT+1",
              "Etc/GMT+10",
              "Etc/GMT+11",
              "Etc/GMT+12",
              "Etc/GMT+2",
              "Etc/GMT+3",
              "Etc/GMT+4",
              "Etc/GMT+5",
              "Etc/GMT+6",
              "Etc/GMT+7",
              "Etc/GMT+8",
              "Etc/GMT+9",
              "Etc/GMT-0",
              "Etc/GMT-1",
              "Etc/GMT-10",
              "Etc/GMT-11",
              "Etc/GMT-12",
              "Etc/GMT-13",
              "Etc/GMT-14",
              "Etc/GMT-2",
              "Etc/GMT-3",
              "Etc/GMT-4",
              "Etc/GMT-5",
              "Etc/GMT-6",
              "Etc/GMT-7",
              "Etc/GMT-8",
              "Etc/GMT-9",
              "Etc/GMT0",
              "Etc/Greenwich",
              "Etc/UCT",
              "Etc/UTC",
              "Etc/Universal",
              "Etc/Zulu",
              "Europe/Amsterdam",
              "Europe/Andorra",
              "Europe/Astrakhan",
              "Europe/Athens",
              "Europe/Belfast",
              "Europe/Belgrade",
              "Europe/Berlin",
              "Europe/Bratislava",
              "Europe/Brussels",
              "Europe/Bucharest",
              "Europe/Budapest",
              "Europe/Busingen",
              "Europe/Chisinau",
              "Europe/Copenhagen",
              "Europe/Dublin",
              "Europe/Gibraltar",
              "Europe/Guernsey",
              "Europe/Helsinki",
              "Europe/Isle_of_Man",
              "Europe/Istanbul",
              "Europe/Jersey",
              "Europe/Kaliningrad",
              "Europe/Kiev",
              "Europe/Kirov",
              "Europe/Kyiv",
              "Europe/Lisbon",
              "Europe/Ljubljana",
              "Europe/London",
              "Europe/Luxembourg",
              "Europe/Madrid",
              "Europe/Malta",
              "Europe/Mariehamn",
              "Europe/Minsk",
              "Europe/Monaco",
              "Europe/Moscow",
              "Europe/Nicosia",
              "Europe/Oslo",
              "Europe/Paris",
              "Europe/Podgorica",
              "Europe/Prague",
              "Europe/Riga",
              "Europe/Rome",
              "Europe/Samara",
              "Europe/San_Marino",
              "Europe/Sarajevo",
              "Europe/Saratov",
              "Europe/Simferopol",
              "Europe/Skopje",
              "Europe/Sofia",
              "Europe/Stockholm",
              "Europe/Tallinn",
              "Europe/Tirane",
              "Europe/Tiraspol",
              "Europe/Ulyanovsk",
              "Europe/Uzhgorod",
              "Europe/Vaduz",
              "Europe/Vatican",
              "Europe/Vienna",
              "Europe/Vilnius",
              "Europe/Volgograd",
              "Europe/Warsaw",
              "Europe/Zagreb",
              "Europe/Zaporozhye",
              "Europe/Zurich",
              "GB",
              "GB-Eire",
              "GMT",
              "GMT+0",
              "GMT-0",
              "GMT0",
              "Greenwich",
              "HST",
              "Hongkong",
              "Iceland",
              "Indian/Antananarivo",
              "Indian/Chagos",
              "Indian/Christmas",
              "Indian/Cocos",
              "Indian/Comoro",
              "Indian/Kerguelen",
              "Indian/Mahe",
              "Indian/Maldives",
              "Indian/Mauritius",
              "Indian/Mayotte",
              "Indian/Reunion",
              "Iran",
              "Israel",
              "Jamaica",
              "Japan",
              "Kwajalein",
              "Libya",
              "MET",
              "MST",
              "MST7MDT",
              "Mexico/BajaNorte",
              "Mexico/BajaSur",
              "Mexico/General",
              "NZ",
              "NZ-CHAT",
              "Navajo",
              "PRC",
              "PST8PDT",
              "Pacific/Apia",
              "Pacific/Auckland",
              "Pacific/Bougainville",
              "Pacific/Chatham",
              "Pacific/Chuuk",
              "Pacific/Easter",
              "Pacific/Efate",
              "Pacific/Enderbury",
              "Pacific/Fakaofo",
              "Pacific/Fiji",
              "Pacific/Funafuti",
              "Pacific/Galapagos",
              "Pacific/Gambier",
              "Pacific/Guadalcanal",
              "Pacific/Guam",
              "Pacific/Honolulu",
              "Pacific/Johnston",
              "Pacific/Kanton",
              "Pacific/Kiritimati",
              "Pacific/Kosrae",
              "Pacific/Kwajalein",
              "Pacific/Majuro",
              "Pacific/Marquesas",
              "Pacific/Midway",
              "Pacific/Nauru",
              "Pacific/Niue",
              "Pacific/Norfolk",
              "Pacific/Noumea",
              "Pacific/Pago_Pago",
              "Pacific/Palau",
              "Pacific/Pitcairn",
              "Pacific/Pohnpei",
              "Pacific/Ponape",
              "Pacific/Port_Moresby",
              "Pacific/Rarotonga",
              "Pacific/Saipan",
              "Pacific/Samoa",
              "Pacific/Tahiti",
              "Pacific/Tarawa",
              "Pacific/Tongatapu",
              "Pacific/Truk",
              "Pacific/Wake",
              "Pacific/Wallis",
              "Pacific/Yap",
              "Poland",
              "Portugal",
              "ROC",
              "ROK",
              "Singapore",
              "Turkey",
              "UCT",
              "US/Alaska",
              "US/Aleutian",
              "US/Arizona",
              "US/Central",
              "US/East-Indiana",
              "US/Eastern",
              "US/Hawaii",
              "US/Indiana-Starke",
              "US/Michigan",
              "US/Mountain",
              "US/Pacific",
              "US/Samoa",
              "UTC",
              "Universal",
              "W-SU",
              "WET",
              "Zulu"
            ]
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "UploadSymbologyResponse",
        "type": "object"
      }
    },
    {
      "type": "unary",
      "route": "/json.architect.Symbology/PruneExpiredSymbols",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "PruneExpiredSymbolsRequest",
        "type": "object",
        "properties": {
          "cutoff": {
            "description": "If None then it will just use server current time; otherwise, specify a unix timestamp in seconds",
            "type": [
              "integer",
              "null"
            ],
            "format": "int64"
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "PruneExpiredSymbolsResponse",
        "type": "object"
      }
    }
  ]
},

{
  "$schema": "jsonschema",
  "name": "Marketdata",
  "rpcs": [
    {
      "type": "unary",
      "route": "/json.architect.Marketdata/L1BookSnapshot",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "L1BookSnapshotRequest",
        "type": "object",
        "required": [
          "symbol"
        ],
        "properties": {
          "symbol": {
            "type": "string"
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "L1BookSnapshot",
        "type": "object",
        "required": [
          "s",
          "tn",
          "ts"
        ],
        "properties": {
          "a": {
            "title": "best_ask",
            "type": [
              "array",
              "null"
            ],
            "items": [
              {
                "type": "string",
                "format": "decimal"
              },
              {
                "type": "string",
                "format": "decimal"
              }
            ],
            "maxItems": 2,
            "minItems": 2
          },
          "b": {
            "title": "best_bid",
            "type": [
              "array",
              "null"
            ],
            "items": [
              {
                "type": "string",
                "format": "decimal"
              },
              {
                "type": "string",
                "format": "decimal"
              }
            ],
            "maxItems": 2,
            "minItems": 2
          },
          "s": {
            "title": "symbol",
            "type": "string"
          },
          "tn": {
            "title": "timestamp_ns",
            "type": "integer",
            "format": "default",
            "minimum": 0.0
          },
          "ts": {
            "title": "timestamp",
            "type": "integer",
            "format": "int64"
          }
        },
        "definitions": {
          "Decimal": {
            "type": "string"
          }
        }
      }
    },
    {
      "type": "unary",
      "route": "/json.architect.Marketdata/L1BookSnapshots",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "L1BookSnapshotsRequest",
        "type": "object",
        "properties": {
          "symbols": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Array_of_L1BookSnapshot",
        "type": "array",
        "items": {
          "$ref": "#/definitions/L1BookSnapshot"
        },
        "definitions": {
          "Decimal": {
            "type": "string"
          },
          "L1BookSnapshot": {
            "type": "object",
            "required": [
              "s",
              "tn",
              "ts"
            ],
            "properties": {
              "a": {
                "title": "best_ask",
                "type": [
                  "array",
                  "null"
                ],
                "items": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "string",
                    "format": "decimal"
                  }
                ],
                "maxItems": 2,
                "minItems": 2
              },
              "b": {
                "title": "best_bid",
                "type": [
                  "array",
                  "null"
                ],
                "items": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "string",
                    "format": "decimal"
                  }
                ],
                "maxItems": 2,
                "minItems": 2
              },
              "s": {
                "title": "symbol",
                "type": "string"
              },
              "tn": {
                "title": "timestamp_ns",
                "type": "integer",
                "format": "default",
                "minimum": 0.0
              },
              "ts": {
                "title": "timestamp",
                "type": "integer",
                "format": "int64"
              }
            }
          }
        }
      }
    },
    {
      "type": "stream",
      "route": "/json.architect.Marketdata/SubscribeL1BookSnapshots",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "SubscribeL1BookSnapshotsRequest",
        "type": "object",
        "properties": {
          "symbols": {
            "description": "If None, subscribe from all symbols on the feed",
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "L1BookSnapshot",
        "type": "object",
        "required": [
          "s",
          "tn",
          "ts"
        ],
        "properties": {
          "a": {
            "title": "best_ask",
            "type": [
              "array",
              "null"
            ],
            "items": [
              {
                "type": "string",
                "format": "decimal"
              },
              {
                "type": "string",
                "format": "decimal"
              }
            ],
            "maxItems": 2,
            "minItems": 2
          },
          "b": {
            "title": "best_bid",
            "type": [
              "array",
              "null"
            ],
            "items": [
              {
                "type": "string",
                "format": "decimal"
              },
              {
                "type": "string",
                "format": "decimal"
              }
            ],
            "maxItems": 2,
            "minItems": 2
          },
          "s": {
            "title": "symbol",
            "type": "string"
          },
          "tn": {
            "title": "timestamp_ns",
            "type": "integer",
            "format": "default",
            "minimum": 0.0
          },
          "ts": {
            "title": "timestamp",
            "type": "integer",
            "format": "int64"
          }
        },
        "definitions": {
          "Decimal": {
            "type": "string"
          }
        }
      }
    },
    {
      "type": "stream",
      "route": "/json.architect.Marketdata/SubscribeL2BookUpdates",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "SubscribeL2BookUpdatesRequest",
        "type": "object",
        "required": [
          "symbol"
        ],
        "properties": {
          "symbol": {
            "type": "string"
          },
          "venue": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "L2BookUpdate",
        "description": "To build a book from a stream of updates, the client should first subscribe to this update stream, which then returns a stream starting with a snapshot and following with diffs.\n\nDiffs should be applied consecutively to the snapshot in order to reconstruct the state of the book.\n\n```rust # use architect_api::marketdata::*; # use std::collections::BTreeMap; # use rust_decimal::Decimal; # use rust_decimal_macros::dec;\n\n/// Suppose we receive this snapshot from the server: let snapshot: L2BookUpdate = serde_json::from_str(r#\"{ \"t\": \"s\", \"ts\": 1729700837, \"tn\": 0, \"sid\": 123, \"sn\": 8999, \"b\": [[\"99.00\", \"3\"], [\"98.78\", \"2\"]], \"a\": [[\"100.00\", \"1\"], [\"100.10\", \"2\"]] }\"#)?;\n\n/// It corresponds to the following book: let mut book = BTreeMap::new(); book.insert(dec!(99.00), 3); book.insert(dec!(98.78), 2); book.insert(dec!(100.00), 1); book.insert(dec!(100.10), 2);\n\n/// Then we receive this update: let diff: L2BookUpdate = serde_json::from_str(r#\"{ \"t\": \"d\", \"ts\": 1729700839, \"tn\": 0, \"sid\": 123, \"sn\": 9000, \"b\": [[\"99.00\", \"1\"]], \"a\": [] }\"#)?;\n\n/// Verify that the sequence number is correct assert!(diff.sequence().is_next_in_sequence(&snapshot.sequence()));\n\n/// Apply the update to our book book.insert(dec!(99.00), 1);\n\n// Suppose we then receive this update: let diff: L2BookUpdate = serde_json::from_str(r#\"{ \"t\": \"d\", \"ts\": 1729700841, \"tn\": 0, \"sid\": 123, \"sn\": 9005, \"b\": [], \"a\": [[\"103.00\", \"1\"]] }\"#)?;\n\n/// We shouldn't apply this update because it's not next in sequence! assert_eq!(diff.sequence().is_next_in_sequence(&snapshot.sequence()), false);\n\n/// Or if we had received this update: let diff: L2BookUpdate = serde_json::from_str(r#\"{ \"t\": \"d\", \"ts\": 1729700841, \"tn\": 0, \"sid\": 170, \"sn\": 9001, \"b\": [], \"a\": [[\"103.00\", \"1\"]] }\"#)?;\n\n/// It appears that the sequence id is changed, signalling a new sequence. /// In this case, we should re-request the snapshot from the server. assert_eq!(diff.sequence().is_next_in_sequence(&snapshot.sequence()), false);\n\n# Ok::<(), anyhow::Error>(()) ```",
        "oneOf": [
          {
            "title": "snapshot",
            "description": "Unique sequence id and number.",
            "type": "object",
            "required": [
              "a",
              "b",
              "sid",
              "sn",
              "t",
              "tn",
              "ts"
            ],
            "properties": {
              "a": {
                "title": "asks",
                "type": "array",
                "items": {
                  "type": "array",
                  "items": [
                    {
                      "type": "string",
                      "format": "decimal"
                    },
                    {
                      "type": "string",
                      "format": "decimal"
                    }
                  ],
                  "maxItems": 2,
                  "minItems": 2
                }
              },
              "b": {
                "title": "bids",
                "type": "array",
                "items": {
                  "type": "array",
                  "items": [
                    {
                      "type": "string",
                      "format": "decimal"
                    },
                    {
                      "type": "string",
                      "format": "decimal"
                    }
                  ],
                  "maxItems": 2,
                  "minItems": 2
                }
              },
              "sid": {
                "title": "sequence_id",
                "type": "integer",
                "format": "default",
                "minimum": 0.0
              },
              "sn": {
                "title": "sequence_number",
                "type": "integer",
                "format": "default",
                "minimum": 0.0
              },
              "t": {
                "type": "string",
                "enum": [
                  "s"
                ]
              },
              "tn": {
                "title": "timestamp_ns",
                "type": "integer",
                "format": "default",
                "minimum": 0.0
              },
              "ts": {
                "title": "timestamp",
                "type": "integer",
                "format": "int64"
              }
            }
          },
          {
            "title": "diff",
            "description": "Unique sequence id and number.",
            "type": "object",
            "required": [
              "a",
              "b",
              "sid",
              "sn",
              "t",
              "tn",
              "ts"
            ],
            "properties": {
              "a": {
                "title": "asks",
                "description": "Set of (price, level) updates. If zero, the price level has been removed from the book.",
                "type": "array",
                "items": {
                  "type": "array",
                  "items": [
                    {
                      "type": "string",
                      "format": "decimal"
                    },
                    {
                      "type": "string",
                      "format": "decimal"
                    }
                  ],
                  "maxItems": 2,
                  "minItems": 2
                }
              },
              "b": {
                "title": "bids",
                "description": "Set of (price, level) updates. If zero, the price level has been removed from the book.",
                "type": "array",
                "items": {
                  "type": "array",
                  "items": [
                    {
                      "type": "string",
                      "format": "decimal"
                    },
                    {
                      "type": "string",
                      "format": "decimal"
                    }
                  ],
                  "maxItems": 2,
                  "minItems": 2
                }
              },
              "sid": {
                "title": "sequence_id",
                "type": "integer",
                "format": "default",
                "minimum": 0.0
              },
              "sn": {
                "title": "sequence_number",
                "type": "integer",
                "format": "default",
                "minimum": 0.0
              },
              "t": {
                "type": "string",
                "enum": [
                  "d"
                ]
              },
              "tn": {
                "title": "timestamp_ns",
                "type": "integer",
                "format": "default",
                "minimum": 0.0
              },
              "ts": {
                "title": "timestamp",
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ],
        "definitions": {
          "Decimal": {
            "type": "string"
          }
        }
      }
    },
    {
      "type": "unary",
      "route": "/json.architect.Marketdata/L2BookSnapshot",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "L2BookSnapshotRequest",
        "type": "object",
        "required": [
          "symbol"
        ],
        "properties": {
          "symbol": {
            "type": "string"
          },
          "venue": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "L2BookSnapshot",
        "description": "Unique sequence id and number.",
        "type": "object",
        "required": [
          "a",
          "b",
          "sid",
          "sn",
          "tn",
          "ts"
        ],
        "properties": {
          "a": {
            "title": "asks",
            "type": "array",
            "items": {
              "type": "array",
              "items": [
                {
                  "type": "string",
                  "format": "decimal"
                },
                {
                  "type": "string",
                  "format": "decimal"
                }
              ],
              "maxItems": 2,
              "minItems": 2
            }
          },
          "b": {
            "title": "bids",
            "type": "array",
            "items": {
              "type": "array",
              "items": [
                {
                  "type": "string",
                  "format": "decimal"
                },
                {
                  "type": "string",
                  "format": "decimal"
                }
              ],
              "maxItems": 2,
              "minItems": 2
            }
          },
          "sid": {
            "title": "sequence_id",
            "type": "integer",
            "format": "default",
            "minimum": 0.0
          },
          "sn": {
            "title": "sequence_number",
            "type": "integer",
            "format": "default",
            "minimum": 0.0
          },
          "tn": {
            "title": "timestamp_ns",
            "type": "integer",
            "format": "default",
            "minimum": 0.0
          },
          "ts": {
            "title": "timestamp",
            "type": "integer",
            "format": "int64"
          }
        },
        "definitions": {
          "Decimal": {
            "type": "string"
          }
        }
      }
    },
    {
      "type": "stream",
      "route": "/json.architect.Marketdata/SubscribeCandles",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "SubscribeCandlesRequest",
        "type": "object",
        "required": [
          "symbol"
        ],
        "properties": {
          "candle_widths": {
            "description": "If None, subscribe from all candle widths on the feed",
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/definitions/CandleWidth"
            }
          },
          "symbol": {
            "type": "string"
          },
          "venue": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "definitions": {
          "CandleWidth": {
            "type": "integer",
            "enum": [
              1,
              2,
              4,
              8,
              16,
              32
            ],
            "x-enumNames": [
              "OneSecond",
              "FiveSecond",
              "OneMinute",
              "FifteenMinute",
              "OneHour",
              "OneDay"
            ]
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Candle",
        "type": "object",
        "required": [
          "av",
          "bv",
          "s",
          "tn",
          "ts",
          "v",
          "w"
        ],
        "properties": {
          "ac": {
            "title": "ask_close",
            "anyOf": [
              {
                "type": "string",
                "format": "decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "ah": {
            "title": "ask_high",
            "anyOf": [
              {
                "type": "string",
                "format": "decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "al": {
            "title": "ask_low",
            "anyOf": [
              {
                "type": "string",
                "format": "decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "ao": {
            "title": "ask_open",
            "anyOf": [
              {
                "type": "string",
                "format": "decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "av": {
            "title": "sell_volume",
            "allOf": [
              {
                "type": "string",
                "format": "decimal"
              }
            ]
          },
          "bc": {
            "title": "bid_close",
            "anyOf": [
              {
                "type": "string",
                "format": "decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "bh": {
            "title": "bid_high",
            "anyOf": [
              {
                "type": "string",
                "format": "decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "bl": {
            "title": "bid_low",
            "anyOf": [
              {
                "type": "string",
                "format": "decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "bo": {
            "title": "bid_open",
            "anyOf": [
              {
                "type": "string",
                "format": "decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "bv": {
            "title": "buy_volume",
            "allOf": [
              {
                "type": "string",
                "format": "decimal"
              }
            ]
          },
          "c": {
            "title": "close",
            "anyOf": [
              {
                "type": "string",
                "format": "decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "h": {
            "title": "high",
            "anyOf": [
              {
                "type": "string",
                "format": "decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "l": {
            "title": "low",
            "anyOf": [
              {
                "type": "string",
                "format": "decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "mc": {
            "title": "mid_close",
            "anyOf": [
              {
                "type": "string",
                "format": "decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "mh": {
            "title": "mid_high",
            "anyOf": [
              {
                "type": "string",
                "format": "decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "ml": {
            "title": "mid_low",
            "anyOf": [
              {
                "type": "string",
                "format": "decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "mo": {
            "title": "mid_open",
            "anyOf": [
              {
                "type": "string",
                "format": "decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "o": {
            "title": "open",
            "anyOf": [
              {
                "type": "string",
                "format": "decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "s": {
            "title": "symbol",
            "type": "string"
          },
          "tn": {
            "title": "timestamp_ns",
            "type": "integer",
            "format": "default",
            "minimum": 0.0
          },
          "ts": {
            "title": "timestamp",
            "type": "integer",
            "format": "int64"
          },
          "v": {
            "title": "volume",
            "allOf": [
              {
                "type": "string",
                "format": "decimal"
              }
            ]
          },
          "w": {
            "title": "width",
            "allOf": [
              {
                "$ref": "#/definitions/CandleWidth"
              }
            ]
          }
        },
        "definitions": {
          "CandleWidth": {
            "type": "integer",
            "enum": [
              1,
              2,
              4,
              8,
              16,
              32
            ],
            "x-enumNames": [
              "OneSecond",
              "FiveSecond",
              "OneMinute",
              "FifteenMinute",
              "OneHour",
              "OneDay"
            ]
          },
          "Decimal": {
            "type": "string"
          }
        }
      }
    },
    {
      "type": "stream",
      "route": "/json.architect.Marketdata/SubscribeManyCandles",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "SubscribeManyCandlesRequest",
        "type": "object",
        "required": [
          "candle_width"
        ],
        "properties": {
          "candle_width": {
            "$ref": "#/definitions/CandleWidth"
          },
          "symbols": {
            "description": "If None, subscribe from all symbols on the feed",
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          },
          "venue": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "definitions": {
          "CandleWidth": {
            "type": "integer",
            "enum": [
              1,
              2,
              4,
              8,
              16,
              32
            ],
            "x-enumNames": [
              "OneSecond",
              "FiveSecond",
              "OneMinute",
              "FifteenMinute",
              "OneHour",
              "OneDay"
            ]
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Candle",
        "type": "object",
        "required": [
          "av",
          "bv",
          "s",
          "tn",
          "ts",
          "v",
          "w"
        ],
        "properties": {
          "ac": {
            "title": "ask_close",
            "anyOf": [
              {
                "type": "string",
                "format": "decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "ah": {
            "title": "ask_high",
            "anyOf": [
              {
                "type": "string",
                "format": "decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "al": {
            "title": "ask_low",
            "anyOf": [
              {
                "type": "string",
                "format": "decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "ao": {
            "title": "ask_open",
            "anyOf": [
              {
                "type": "string",
                "format": "decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "av": {
            "title": "sell_volume",
            "allOf": [
              {
                "type": "string",
                "format": "decimal"
              }
            ]
          },
          "bc": {
            "title": "bid_close",
            "anyOf": [
              {
                "type": "string",
                "format": "decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "bh": {
            "title": "bid_high",
            "anyOf": [
              {
                "type": "string",
                "format": "decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "bl": {
            "title": "bid_low",
            "anyOf": [
              {
                "type": "string",
                "format": "decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "bo": {
            "title": "bid_open",
            "anyOf": [
              {
                "type": "string",
                "format": "decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "bv": {
            "title": "buy_volume",
            "allOf": [
              {
                "type": "string",
                "format": "decimal"
              }
            ]
          },
          "c": {
            "title": "close",
            "anyOf": [
              {
                "type": "string",
                "format": "decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "h": {
            "title": "high",
            "anyOf": [
              {
                "type": "string",
                "format": "decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "l": {
            "title": "low",
            "anyOf": [
              {
                "type": "string",
                "format": "decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "mc": {
            "title": "mid_close",
            "anyOf": [
              {
                "type": "string",
                "format": "decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "mh": {
            "title": "mid_high",
            "anyOf": [
              {
                "type": "string",
                "format": "decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "ml": {
            "title": "mid_low",
            "anyOf": [
              {
                "type": "string",
                "format": "decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "mo": {
            "title": "mid_open",
            "anyOf": [
              {
                "type": "string",
                "format": "decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "o": {
            "title": "open",
            "anyOf": [
              {
                "type": "string",
                "format": "decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "s": {
            "title": "symbol",
            "type": "string"
          },
          "tn": {
            "title": "timestamp_ns",
            "type": "integer",
            "format": "default",
            "minimum": 0.0
          },
          "ts": {
            "title": "timestamp",
            "type": "integer",
            "format": "int64"
          },
          "v": {
            "title": "volume",
            "allOf": [
              {
                "type": "string",
                "format": "decimal"
              }
            ]
          },
          "w": {
            "title": "width",
            "allOf": [
              {
                "$ref": "#/definitions/CandleWidth"
              }
            ]
          }
        },
        "definitions": {
          "CandleWidth": {
            "type": "integer",
            "enum": [
              1,
              2,
              4,
              8,
              16,
              32
            ],
            "x-enumNames": [
              "OneSecond",
              "FiveSecond",
              "OneMinute",
              "FifteenMinute",
              "OneHour",
              "OneDay"
            ]
          },
          "Decimal": {
            "type": "string"
          }
        }
      }
    },
    {
      "type": "stream",
      "route": "/json.architect.Marketdata/SubscribeCurrentCandles",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "SubscribeCurrentCandlesRequest",
        "description": "Subscribe to the current candle.  This allows you to display the most recent/building candle live in a UI, for example.",
        "type": "object",
        "required": [
          "candle_width",
          "symbol"
        ],
        "properties": {
          "candle_width": {
            "$ref": "#/definitions/CandleWidth"
          },
          "symbol": {
            "type": "string"
          },
          "tick_period_ms": {
            "description": "If None, send the current candle on every trade or candle tick. Otherwise, send a candle every `tick_period_ms`.",
            "type": [
              "integer",
              "null"
            ],
            "format": "default",
            "minimum": 0.0
          },
          "venue": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "definitions": {
          "CandleWidth": {
            "type": "integer",
            "enum": [
              1,
              2,
              4,
              8,
              16,
              32
            ],
            "x-enumNames": [
              "OneSecond",
              "FiveSecond",
              "OneMinute",
              "FifteenMinute",
              "OneHour",
              "OneDay"
            ]
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Candle",
        "type": "object",
        "required": [
          "av",
          "bv",
          "s",
          "tn",
          "ts",
          "v",
          "w"
        ],
        "properties": {
          "ac": {
            "title": "ask_close",
            "anyOf": [
              {
                "type": "string",
                "format": "decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "ah": {
            "title": "ask_high",
            "anyOf": [
              {
                "type": "string",
                "format": "decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "al": {
            "title": "ask_low",
            "anyOf": [
              {
                "type": "string",
                "format": "decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "ao": {
            "title": "ask_open",
            "anyOf": [
              {
                "type": "string",
                "format": "decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "av": {
            "title": "sell_volume",
            "allOf": [
              {
                "type": "string",
                "format": "decimal"
              }
            ]
          },
          "bc": {
            "title": "bid_close",
            "anyOf": [
              {
                "type": "string",
                "format": "decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "bh": {
            "title": "bid_high",
            "anyOf": [
              {
                "type": "string",
                "format": "decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "bl": {
            "title": "bid_low",
            "anyOf": [
              {
                "type": "string",
                "format": "decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "bo": {
            "title": "bid_open",
            "anyOf": [
              {
                "type": "string",
                "format": "decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "bv": {
            "title": "buy_volume",
            "allOf": [
              {
                "type": "string",
                "format": "decimal"
              }
            ]
          },
          "c": {
            "title": "close",
            "anyOf": [
              {
                "type": "string",
                "format": "decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "h": {
            "title": "high",
            "anyOf": [
              {
                "type": "string",
                "format": "decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "l": {
            "title": "low",
            "anyOf": [
              {
                "type": "string",
                "format": "decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "mc": {
            "title": "mid_close",
            "anyOf": [
              {
                "type": "string",
                "format": "decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "mh": {
            "title": "mid_high",
            "anyOf": [
              {
                "type": "string",
                "format": "decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "ml": {
            "title": "mid_low",
            "anyOf": [
              {
                "type": "string",
                "format": "decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "mo": {
            "title": "mid_open",
            "anyOf": [
              {
                "type": "string",
                "format": "decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "o": {
            "title": "open",
            "anyOf": [
              {
                "type": "string",
                "format": "decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "s": {
            "title": "symbol",
            "type": "string"
          },
          "tn": {
            "title": "timestamp_ns",
            "type": "integer",
            "format": "default",
            "minimum": 0.0
          },
          "ts": {
            "title": "timestamp",
            "type": "integer",
            "format": "int64"
          },
          "v": {
            "title": "volume",
            "allOf": [
              {
                "type": "string",
                "format": "decimal"
              }
            ]
          },
          "w": {
            "title": "width",
            "allOf": [
              {
                "$ref": "#/definitions/CandleWidth"
              }
            ]
          }
        },
        "definitions": {
          "CandleWidth": {
            "type": "integer",
            "enum": [
              1,
              2,
              4,
              8,
              16,
              32
            ],
            "x-enumNames": [
              "OneSecond",
              "FiveSecond",
              "OneMinute",
              "FifteenMinute",
              "OneHour",
              "OneDay"
            ]
          },
          "Decimal": {
            "type": "string"
          }
        }
      }
    },
    {
      "type": "unary",
      "route": "/json.architect.Marketdata/HistoricalCandles",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "HistoricalCandlesRequest",
        "type": "object",
        "required": [
          "candle_width",
          "end_date",
          "start_date",
          "symbol"
        ],
        "properties": {
          "candle_width": {
            "$ref": "#/definitions/CandleWidth"
          },
          "end_date": {
            "type": "string",
            "format": "date-time"
          },
          "start_date": {
            "type": "string",
            "format": "date-time"
          },
          "symbol": {
            "type": "string"
          }
        },
        "definitions": {
          "CandleWidth": {
            "type": "integer",
            "enum": [
              1,
              2,
              4,
              8,
              16,
              32
            ],
            "x-enumNames": [
              "OneSecond",
              "FiveSecond",
              "OneMinute",
              "FifteenMinute",
              "OneHour",
              "OneDay"
            ]
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "HistoricalCandlesResponse",
        "type": "object",
        "required": [
          "candles"
        ],
        "properties": {
          "candles": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Candle"
            }
          }
        },
        "definitions": {
          "Candle": {
            "type": "object",
            "required": [
              "av",
              "bv",
              "s",
              "tn",
              "ts",
              "v",
              "w"
            ],
            "properties": {
              "ac": {
                "title": "ask_close",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "ah": {
                "title": "ask_high",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "al": {
                "title": "ask_low",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "ao": {
                "title": "ask_open",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "av": {
                "title": "sell_volume",
                "allOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  }
                ]
              },
              "bc": {
                "title": "bid_close",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "bh": {
                "title": "bid_high",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "bl": {
                "title": "bid_low",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "bo": {
                "title": "bid_open",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "bv": {
                "title": "buy_volume",
                "allOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  }
                ]
              },
              "c": {
                "title": "close",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "h": {
                "title": "high",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "l": {
                "title": "low",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "mc": {
                "title": "mid_close",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "mh": {
                "title": "mid_high",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "ml": {
                "title": "mid_low",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "mo": {
                "title": "mid_open",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "o": {
                "title": "open",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "s": {
                "title": "symbol",
                "type": "string"
              },
              "tn": {
                "title": "timestamp_ns",
                "type": "integer",
                "format": "default",
                "minimum": 0.0
              },
              "ts": {
                "title": "timestamp",
                "type": "integer",
                "format": "int64"
              },
              "v": {
                "title": "volume",
                "allOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  }
                ]
              },
              "w": {
                "title": "width",
                "allOf": [
                  {
                    "$ref": "#/definitions/CandleWidth"
                  }
                ]
              }
            }
          },
          "CandleWidth": {
            "type": "integer",
            "enum": [
              1,
              2,
              4,
              8,
              16,
              32
            ],
            "x-enumNames": [
              "OneSecond",
              "FiveSecond",
              "OneMinute",
              "FifteenMinute",
              "OneHour",
              "OneDay"
            ]
          },
          "Decimal": {
            "type": "string"
          }
        }
      }
    },
    {
      "type": "stream",
      "route": "/json.architect.Marketdata/SubscribeTrades",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "SubscribeTradesRequest",
        "type": "object",
        "properties": {
          "symbol": {
            "description": "If None, subscribe from all symbols on the feed",
            "type": [
              "string",
              "null"
            ]
          },
          "venue": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Trade",
        "type": "object",
        "required": [
          "p",
          "q",
          "s",
          "tn",
          "ts"
        ],
        "properties": {
          "d": {
            "title": "direction",
            "anyOf": [
              {
                "$ref": "#/definitions/Dir"
              },
              {
                "type": "null"
              }
            ]
          },
          "p": {
            "title": "price",
            "allOf": [
              {
                "type": "string",
                "format": "decimal"
              }
            ]
          },
          "q": {
            "title": "size",
            "allOf": [
              {
                "type": "string",
                "format": "decimal"
              }
            ]
          },
          "s": {
            "title": "symbol",
            "type": "string"
          },
          "tn": {
            "title": "timestamp_ns",
            "type": "integer",
            "format": "default",
            "minimum": 0.0
          },
          "ts": {
            "title": "timestamp",
            "type": "integer",
            "format": "int64"
          }
        },
        "definitions": {
          "Decimal": {
            "type": "string"
          },
          "Dir": {
            "description": "An order side/direction or a trade execution side/direction. In GraphQL these are serialized as \"buy\" or \"sell\".",
            "type": "string",
            "enum": [
              "BUY",
              "SELL"
            ]
          }
        }
      }
    },
    {
      "type": "unary",
      "route": "/json.architect.Marketdata/MarketStatus",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "MarketStatusRequest",
        "type": "object",
        "required": [
          "symbol"
        ],
        "properties": {
          "symbol": {
            "type": "string"
          },
          "venue": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "MarketStatus",
        "type": "object",
        "required": [
          "s"
        ],
        "properties": {
          "is_quoting": {
            "type": [
              "boolean",
              "null"
            ]
          },
          "is_trading": {
            "type": [
              "boolean",
              "null"
            ]
          },
          "s": {
            "title": "symbol",
            "type": "string"
          }
        }
      }
    },
    {
      "type": "unary",
      "route": "/json.architect.Marketdata/Ticker",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "TickerRequest",
        "type": "object",
        "required": [
          "symbol"
        ],
        "properties": {
          "symbol": {
            "type": "string"
          },
          "venue": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Ticker",
        "type": "object",
        "required": [
          "s",
          "tn",
          "ts",
          "ve"
        ],
        "properties": {
          "ap": {
            "title": "ask_price",
            "anyOf": [
              {
                "type": "string",
                "format": "decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "as": {
            "title": "ask_size",
            "anyOf": [
              {
                "type": "string",
                "format": "decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "bp": {
            "title": "bid_price",
            "anyOf": [
              {
                "type": "string",
                "format": "decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "bs": {
            "title": "bid_size",
            "anyOf": [
              {
                "type": "string",
                "format": "decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "dividend": {
            "anyOf": [
              {
                "type": "string",
                "format": "decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "dividend_yield": {
            "anyOf": [
              {
                "type": "string",
                "format": "decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "eps_adj": {
            "anyOf": [
              {
                "type": "string",
                "format": "decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "fr": {
            "title": "funding_rate",
            "anyOf": [
              {
                "type": "string",
                "format": "decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "ft": {
            "title": "next_funding_time",
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "h": {
            "title": "high_24h",
            "anyOf": [
              {
                "type": "string",
                "format": "decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "ip": {
            "title": "index_price",
            "anyOf": [
              {
                "type": "string",
                "format": "decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "l": {
            "title": "low_24h",
            "anyOf": [
              {
                "type": "string",
                "format": "decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "market_cap": {
            "anyOf": [
              {
                "type": "string",
                "format": "decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "mp": {
            "title": "mark_price",
            "anyOf": [
              {
                "type": "string",
                "format": "decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "o": {
            "title": "open_24h",
            "anyOf": [
              {
                "type": "string",
                "format": "decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "oi": {
            "title": "open_interest",
            "anyOf": [
              {
                "type": "string",
                "format": "decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "p": {
            "title": "last_price",
            "anyOf": [
              {
                "type": "string",
                "format": "decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "price_to_earnings": {
            "anyOf": [
              {
                "type": "string",
                "format": "decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "q": {
            "title": "last_size",
            "anyOf": [
              {
                "type": "string",
                "format": "decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "s": {
            "title": "symbol",
            "type": "string"
          },
          "shares_outstanding_weighted_adj": {
            "anyOf": [
              {
                "type": "string",
                "format": "decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "sp": {
            "title": "last_settlement_price",
            "anyOf": [
              {
                "type": "string",
                "format": "decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "tn": {
            "title": "timestamp_ns",
            "type": "integer",
            "format": "default",
            "minimum": 0.0
          },
          "ts": {
            "title": "timestamp",
            "type": "integer",
            "format": "int64"
          },
          "v": {
            "title": "volume_24h",
            "anyOf": [
              {
                "type": "string",
                "format": "decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "ve": {
            "title": "venue",
            "type": "string"
          },
          "vm": {
            "title": "volume_30d",
            "anyOf": [
              {
                "type": "string",
                "format": "decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "xh": {
            "title": "session_high",
            "anyOf": [
              {
                "type": "string",
                "format": "decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "xl": {
            "title": "session_low",
            "anyOf": [
              {
                "type": "string",
                "format": "decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "xo": {
            "title": "session_open",
            "anyOf": [
              {
                "type": "string",
                "format": "decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "xv": {
            "title": "session_volume",
            "anyOf": [
              {
                "type": "string",
                "format": "decimal"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "definitions": {
          "Decimal": {
            "type": "string"
          }
        }
      }
    },
    {
      "type": "unary",
      "route": "/json.architect.Marketdata/Tickers",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "TickersRequest",
        "type": "object",
        "properties": {
          "i": {
            "type": [
              "integer",
              "null"
            ],
            "format": "int32"
          },
          "k": {
            "anyOf": [
              {
                "$ref": "#/definitions/SortTickersBy"
              },
              {
                "type": "null"
              }
            ]
          },
          "n": {
            "type": [
              "integer",
              "null"
            ],
            "format": "int32"
          },
          "symbols": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          },
          "venue": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "definitions": {
          "SortTickersBy": {
            "type": "string",
            "enum": [
              "VOLUME_DESC",
              "CHANGE_ASC",
              "CHANGE_DESC",
              "ABS_CHANGE_DESC"
            ]
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "TickersResponse",
        "type": "object",
        "required": [
          "tickers"
        ],
        "properties": {
          "tickers": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Ticker"
            }
          }
        },
        "definitions": {
          "Decimal": {
            "type": "string"
          },
          "Ticker": {
            "type": "object",
            "required": [
              "s",
              "tn",
              "ts",
              "ve"
            ],
            "properties": {
              "ap": {
                "title": "ask_price",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "as": {
                "title": "ask_size",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "bp": {
                "title": "bid_price",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "bs": {
                "title": "bid_size",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "dividend": {
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "dividend_yield": {
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "eps_adj": {
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "fr": {
                "title": "funding_rate",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "ft": {
                "title": "next_funding_time",
                "type": [
                  "string",
                  "null"
                ],
                "format": "date-time"
              },
              "h": {
                "title": "high_24h",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "ip": {
                "title": "index_price",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "l": {
                "title": "low_24h",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "market_cap": {
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "mp": {
                "title": "mark_price",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "o": {
                "title": "open_24h",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "oi": {
                "title": "open_interest",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "p": {
                "title": "last_price",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "price_to_earnings": {
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "q": {
                "title": "last_size",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "s": {
                "title": "symbol",
                "type": "string"
              },
              "shares_outstanding_weighted_adj": {
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "sp": {
                "title": "last_settlement_price",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "tn": {
                "title": "timestamp_ns",
                "type": "integer",
                "format": "default",
                "minimum": 0.0
              },
              "ts": {
                "title": "timestamp",
                "type": "integer",
                "format": "int64"
              },
              "v": {
                "title": "volume_24h",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "ve": {
                "title": "venue",
                "type": "string"
              },
              "vm": {
                "title": "volume_30d",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "xh": {
                "title": "session_high",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "xl": {
                "title": "session_low",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "xo": {
                "title": "session_open",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "xv": {
                "title": "session_volume",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              }
            }
          }
        }
      }
    },
    {
      "type": "stream",
      "route": "/json.architect.Marketdata/SubscribeTickers",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "SubscribeTickersRequest",
        "description": "Ticker updates are not strongly ordered because the data is considered more casual.  You may receive diffs or snapshots slightly out of order.",
        "type": "object",
        "properties": {
          "symbols": {
            "description": "If None, subscribe from all symbols on the feed",
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "TickerUpdate",
        "oneOf": [
          {
            "type": "object",
            "required": [
              "s",
              "t",
              "tn",
              "ts",
              "ve"
            ],
            "properties": {
              "ap": {
                "title": "ask_price",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "as": {
                "title": "ask_size",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "bp": {
                "title": "bid_price",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "bs": {
                "title": "bid_size",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "dividend": {
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "dividend_yield": {
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "eps_adj": {
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "fr": {
                "title": "funding_rate",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "ft": {
                "title": "next_funding_time",
                "type": [
                  "string",
                  "null"
                ],
                "format": "date-time"
              },
              "h": {
                "title": "high_24h",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "ip": {
                "title": "index_price",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "l": {
                "title": "low_24h",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "market_cap": {
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "mp": {
                "title": "mark_price",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "o": {
                "title": "open_24h",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "oi": {
                "title": "open_interest",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "p": {
                "title": "last_price",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "price_to_earnings": {
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "q": {
                "title": "last_size",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "s": {
                "title": "symbol",
                "type": "string"
              },
              "shares_outstanding_weighted_adj": {
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "sp": {
                "title": "last_settlement_price",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "t": {
                "type": "string",
                "enum": [
                  "snapshot"
                ]
              },
              "tn": {
                "title": "timestamp_ns",
                "type": "integer",
                "format": "default",
                "minimum": 0.0
              },
              "ts": {
                "title": "timestamp",
                "type": "integer",
                "format": "int64"
              },
              "v": {
                "title": "volume_24h",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "ve": {
                "title": "venue",
                "type": "string"
              },
              "vm": {
                "title": "volume_30d",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "xh": {
                "title": "session_high",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "xl": {
                "title": "session_low",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "xo": {
                "title": "session_open",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "xv": {
                "title": "session_volume",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "required": [
              "s",
              "t",
              "tn",
              "ts",
              "ve"
            ],
            "properties": {
              "ap": {
                "title": "ask_price",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "as": {
                "title": "ask_size",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "bp": {
                "title": "bid_price",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "bs": {
                "title": "bid_size",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "dividend": {
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "dividend_yield": {
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "eps_adj": {
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "fr": {
                "title": "funding_rate",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "ft": {
                "title": "next_funding_time",
                "type": [
                  "string",
                  "null"
                ],
                "format": "date-time"
              },
              "h": {
                "title": "high_24h",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "ip": {
                "title": "index_price",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "l": {
                "title": "low_24h",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "market_cap": {
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "mp": {
                "title": "mark_price",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "o": {
                "title": "open_24h",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "oi": {
                "title": "open_interest",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "p": {
                "title": "last_price",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "price_to_earnings": {
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "q": {
                "title": "last_size",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "s": {
                "title": "symbol",
                "type": "string"
              },
              "shares_outstanding_weighted_adj": {
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "sp": {
                "title": "last_settlement_price",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "t": {
                "type": "string",
                "enum": [
                  "diff"
                ]
              },
              "tn": {
                "title": "timestamp_ns",
                "type": "integer",
                "format": "default",
                "minimum": 0.0
              },
              "ts": {
                "title": "timestamp",
                "type": "integer",
                "format": "int64"
              },
              "v": {
                "title": "volume_24h",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "ve": {
                "title": "venue",
                "type": "string"
              },
              "vm": {
                "title": "volume_30d",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "xh": {
                "title": "session_high",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "xl": {
                "title": "session_low",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "xo": {
                "title": "session_open",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "xv": {
                "title": "session_volume",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              }
            }
          }
        ],
        "definitions": {
          "Decimal": {
            "type": "string"
          }
        }
      }
    },
    {
      "type": "stream",
      "route": "/json.architect.Marketdata/SubscribeLiquidations",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "SubscribeLiquidationsRequest",
        "type": "object",
        "properties": {
          "symbols": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Liquidation",
        "type": "object",
        "required": [
          "d",
          "p",
          "q",
          "s",
          "tn",
          "ts"
        ],
        "properties": {
          "d": {
            "title": "direction",
            "allOf": [
              {
                "$ref": "#/definitions/Dir"
              }
            ]
          },
          "p": {
            "title": "price",
            "allOf": [
              {
                "type": "string",
                "format": "decimal"
              }
            ]
          },
          "q": {
            "title": "size",
            "allOf": [
              {
                "type": "string",
                "format": "decimal"
              }
            ]
          },
          "s": {
            "title": "symbol",
            "type": "string"
          },
          "tn": {
            "title": "timestamp_ns",
            "type": "integer",
            "format": "default",
            "minimum": 0.0
          },
          "ts": {
            "title": "timestamp",
            "type": "integer",
            "format": "int64"
          }
        },
        "definitions": {
          "Decimal": {
            "type": "string"
          },
          "Dir": {
            "description": "An order side/direction or a trade execution side/direction. In GraphQL these are serialized as \"buy\" or \"sell\".",
            "type": "string",
            "enum": [
              "BUY",
              "SELL"
            ]
          }
        }
      }
    }
  ]
},

{
  "$schema": "jsonschema",
  "name": "Orderflow",
  "rpcs": [
    {
      "type": "duplex_stream",
      "route": "/json.architect.Orderflow/Orderflow",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "OrderflowRequest",
        "oneOf": [
          {
            "type": "object",
            "oneOf": [
              {
                "type": "object",
                "required": [
                  "k",
                  "p",
                  "po"
                ],
                "properties": {
                  "k": {
                    "type": "string",
                    "enum": [
                      "LIMIT"
                    ]
                  },
                  "p": {
                    "title": "limit_price",
                    "allOf": [
                      {
                        "type": "string",
                        "format": "decimal"
                      }
                    ]
                  },
                  "po": {
                    "title": "post_only",
                    "type": "boolean"
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "k",
                  "p",
                  "tp"
                ],
                "properties": {
                  "k": {
                    "type": "string",
                    "enum": [
                      "STOP_LOSS_LIMIT"
                    ]
                  },
                  "p": {
                    "title": "limit_price",
                    "allOf": [
                      {
                        "type": "string",
                        "format": "decimal"
                      }
                    ]
                  },
                  "tp": {
                    "title": "trigger_price",
                    "allOf": [
                      {
                        "type": "string",
                        "format": "decimal"
                      }
                    ]
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "k",
                  "p",
                  "tp"
                ],
                "properties": {
                  "k": {
                    "type": "string",
                    "enum": [
                      "TAKE_PROFIT_LIMIT"
                    ]
                  },
                  "p": {
                    "title": "limit_price",
                    "allOf": [
                      {
                        "type": "string",
                        "format": "decimal"
                      }
                    ]
                  },
                  "tp": {
                    "title": "trigger_price",
                    "allOf": [
                      {
                        "type": "string",
                        "format": "decimal"
                      }
                    ]
                  }
                }
              }
            ],
            "required": [
              "d",
              "q",
              "s",
              "t",
              "tif"
            ],
            "properties": {
              "a": {
                "title": "account",
                "default": null,
                "anyOf": [
                  {
                    "$ref": "#/definitions/AccountIdOrName"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "d": {
                "title": "dir",
                "allOf": [
                  {
                    "$ref": "#/definitions/Dir"
                  }
                ]
              },
              "id": {
                "description": "If not specified, one will be generated for you; note, in that case, you won't know for sure if the specific request went through.",
                "anyOf": [
                  {
                    "$ref": "#/definitions/OrderId"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "pid": {
                "title": "parent_id",
                "anyOf": [
                  {
                    "$ref": "#/definitions/OrderId"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "q": {
                "title": "quantity",
                "allOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  }
                ]
              },
              "s": {
                "title": "symbol",
                "type": "string"
              },
              "src": {
                "title": "source",
                "default": null,
                "anyOf": [
                  {
                    "$ref": "#/definitions/OrderSource"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "t": {
                "type": "string",
                "enum": [
                  "p"
                ]
              },
              "tif": {
                "title": "time_in_force",
                "allOf": [
                  {
                    "$ref": "#/definitions/TimeInForce"
                  }
                ]
              },
              "u": {
                "title": "trader",
                "default": null,
                "anyOf": [
                  {
                    "$ref": "#/definitions/TraderIdOrEmail"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "x": {
                "title": "execution_venue",
                "default": null,
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          },
          {
            "type": "object",
            "required": [
              "id",
              "t"
            ],
            "properties": {
              "id": {
                "title": "order_id",
                "allOf": [
                  {
                    "$ref": "#/definitions/OrderId"
                  }
                ]
              },
              "t": {
                "type": "string",
                "enum": [
                  "x"
                ]
              },
              "xid": {
                "title": "cancel_id",
                "description": "If not specified, one will be generated for you; note, in that case, you won't know for sure if the specific request went through.",
                "default": null,
                "type": [
                  "string",
                  "null"
                ],
                "format": "uuid"
              }
            }
          },
          {
            "type": "object",
            "required": [
              "id",
              "t"
            ],
            "properties": {
              "account": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/AccountIdOrName"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "execution_venue": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "id": {
                "type": "string",
                "format": "uuid"
              },
              "t": {
                "type": "string",
                "enum": [
                  "xo"
                ]
              },
              "trader": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/TraderIdOrEmail"
                  },
                  {
                    "type": "null"
                  }
                ]
              }
            }
          }
        ],
        "definitions": {
          "AccountIdOrName": {
            "type": "string"
          },
          "Decimal": {
            "type": "string"
          },
          "Dir": {
            "description": "An order side/direction or a trade execution side/direction. In GraphQL these are serialized as \"buy\" or \"sell\".",
            "type": "string",
            "enum": [
              "BUY",
              "SELL"
            ]
          },
          "OrderId": {
            "description": "System-unique, persistent order identifiers",
            "type": "object",
            "required": [
              "seqid",
              "seqno"
            ],
            "properties": {
              "seqid": {
                "type": "string",
                "format": "uuid"
              },
              "seqno": {
                "type": "integer",
                "format": "default",
                "minimum": 0.0
              }
            }
          },
          "OrderSource": {
            "type": "integer",
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              255
            ],
            "x-enumNames": [
              "API",
              "GUI",
              "Algo",
              "Reconciled",
              "CLI",
              "Telegram",
              "Other"
            ]
          },
          "TimeInForce": {
            "oneOf": [
              {
                "type": "string",
                "enum": [
                  "GTC",
                  "IOC",
                  "FOK"
                ]
              },
              {
                "type": "object",
                "required": [
                  "GTD"
                ],
                "properties": {
                  "GTD": {
                    "type": "string",
                    "format": "date-time"
                  }
                },
                "additionalProperties": false
              },
              {
                "description": "Day order--the specific time which this expires will be dependent on the venue",
                "type": "string",
                "enum": [
                  "DAY"
                ]
              }
            ]
          },
          "TraderIdOrEmail": {
            "type": "string"
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Orderflow",
        "oneOf": [
          {
            "type": "object",
            "oneOf": [
              {
                "type": "object",
                "required": [
                  "k",
                  "p",
                  "po"
                ],
                "properties": {
                  "k": {
                    "type": "string",
                    "enum": [
                      "LIMIT"
                    ]
                  },
                  "p": {
                    "title": "limit_price",
                    "allOf": [
                      {
                        "type": "string",
                        "format": "decimal"
                      }
                    ]
                  },
                  "po": {
                    "title": "post_only",
                    "type": "boolean"
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "k",
                  "p",
                  "tp"
                ],
                "properties": {
                  "k": {
                    "type": "string",
                    "enum": [
                      "STOP_LOSS_LIMIT"
                    ]
                  },
                  "p": {
                    "title": "limit_price",
                    "allOf": [
                      {
                        "type": "string",
                        "format": "decimal"
                      }
                    ]
                  },
                  "tp": {
                    "title": "trigger_price",
                    "allOf": [
                      {
                        "type": "string",
                        "format": "decimal"
                      }
                    ]
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "k",
                  "p",
                  "tp"
                ],
                "properties": {
                  "k": {
                    "type": "string",
                    "enum": [
                      "TAKE_PROFIT_LIMIT"
                    ]
                  },
                  "p": {
                    "title": "limit_price",
                    "allOf": [
                      {
                        "type": "string",
                        "format": "decimal"
                      }
                    ]
                  },
                  "tp": {
                    "title": "trigger_price",
                    "allOf": [
                      {
                        "type": "string",
                        "format": "decimal"
                      }
                    ]
                  }
                }
              }
            ],
            "required": [
              "a",
              "d",
              "id",
              "o",
              "q",
              "s",
              "src",
              "t",
              "tif",
              "tn",
              "ts",
              "u",
              "ve",
              "xq"
            ],
            "properties": {
              "a": {
                "title": "account",
                "type": "string",
                "format": "uuid"
              },
              "d": {
                "title": "dir",
                "allOf": [
                  {
                    "$ref": "#/definitions/Dir"
                  }
                ]
              },
              "id": {
                "$ref": "#/definitions/OrderId"
              },
              "o": {
                "title": "status",
                "allOf": [
                  {
                    "$ref": "#/definitions/OrderStatus"
                  }
                ]
              },
              "pid": {
                "title": "parent_id",
                "anyOf": [
                  {
                    "$ref": "#/definitions/OrderId"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "q": {
                "title": "quantity",
                "allOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  }
                ]
              },
              "r": {
                "title": "reject_reason",
                "anyOf": [
                  {
                    "$ref": "#/definitions/OrderRejectReason"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "rm": {
                "title": "reject_message",
                "type": [
                  "string",
                  "null"
                ]
              },
              "s": {
                "title": "symbol",
                "type": "string"
              },
              "src": {
                "title": "source",
                "allOf": [
                  {
                    "$ref": "#/definitions/OrderSource"
                  }
                ]
              },
              "t": {
                "type": "string",
                "enum": [
                  "w"
                ]
              },
              "tif": {
                "title": "time_in_force",
                "allOf": [
                  {
                    "$ref": "#/definitions/TimeInForce"
                  }
                ]
              },
              "tn": {
                "title": "recv_time_ns",
                "type": "integer",
                "format": "default",
                "minimum": 0.0
              },
              "ts": {
                "title": "recv_time",
                "type": "integer",
                "format": "int64"
              },
              "u": {
                "title": "trader",
                "allOf": [
                  {
                    "$ref": "#/definitions/UserId"
                  }
                ]
              },
              "ve": {
                "title": "execution_venue",
                "type": "string"
              },
              "xp": {
                "title": "average_fill_price",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "xq": {
                "title": "filled_quantity",
                "allOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "required": [
              "id",
              "t"
            ],
            "properties": {
              "id": {
                "$ref": "#/definitions/OrderId"
              },
              "t": {
                "type": "string",
                "enum": [
                  "a"
                ]
              }
            }
          },
          {
            "type": "object",
            "required": [
              "id",
              "r",
              "t"
            ],
            "properties": {
              "id": {
                "$ref": "#/definitions/OrderId"
              },
              "r": {
                "$ref": "#/definitions/OrderRejectReason"
              },
              "rm": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "t": {
                "type": "string",
                "enum": [
                  "r"
                ]
              }
            }
          },
          {
            "type": "object",
            "required": [
              "id",
              "t"
            ],
            "properties": {
              "id": {
                "$ref": "#/definitions/OrderId"
              },
              "t": {
                "type": "string",
                "enum": [
                  "o"
                ]
              }
            }
          },
          {
            "type": "object",
            "required": [
              "id",
              "t"
            ],
            "properties": {
              "id": {
                "$ref": "#/definitions/OrderId"
              },
              "t": {
                "type": "string",
                "enum": [
                  "z"
                ]
              }
            }
          },
          {
            "type": "object",
            "required": [
              "id",
              "o",
              "t",
              "tn",
              "ts",
              "xid"
            ],
            "properties": {
              "id": {
                "$ref": "#/definitions/OrderId"
              },
              "o": {
                "$ref": "#/definitions/CancelStatus"
              },
              "r": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "t": {
                "type": "string",
                "enum": [
                  "xc"
                ]
              },
              "tn": {
                "type": "integer",
                "format": "default",
                "minimum": 0.0
              },
              "ts": {
                "type": "integer",
                "format": "int64"
              },
              "xid": {
                "type": "string",
                "format": "uuid"
              }
            }
          },
          {
            "type": "object",
            "required": [
              "id",
              "t",
              "xid"
            ],
            "properties": {
              "id": {
                "$ref": "#/definitions/OrderId"
              },
              "rm": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "t": {
                "type": "string",
                "enum": [
                  "xr"
                ]
              },
              "xid": {
                "type": "string",
                "format": "uuid"
              }
            }
          },
          {
            "type": "object",
            "required": [
              "id",
              "t"
            ],
            "properties": {
              "id": {
                "$ref": "#/definitions/OrderId"
              },
              "t": {
                "type": "string",
                "enum": [
                  "xa"
                ]
              },
              "xid": {
                "type": [
                  "string",
                  "null"
                ],
                "format": "uuid"
              }
            }
          },
          {
            "type": "object",
            "required": [
              "id",
              "t"
            ],
            "properties": {
              "id": {
                "$ref": "#/definitions/OrderId"
              },
              "t": {
                "type": "string",
                "enum": [
                  "xx"
                ]
              },
              "xid": {
                "type": [
                  "string",
                  "null"
                ],
                "format": "uuid"
              }
            }
          },
          {
            "type": "object",
            "required": [
              "d",
              "id",
              "k",
              "p",
              "q",
              "s",
              "t",
              "tn",
              "ts",
              "x"
            ],
            "properties": {
              "a": {
                "title": "account",
                "type": [
                  "string",
                  "null"
                ],
                "format": "uuid"
              },
              "atn": {
                "title": "recv_time_ns",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "default",
                "minimum": 0.0
              },
              "ats": {
                "title": "recv_time",
                "description": "When Architect received the fill, if realtime",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "int64"
              },
              "d": {
                "title": "direction",
                "allOf": [
                  {
                    "$ref": "#/definitions/Dir"
                  }
                ]
              },
              "f": {
                "title": "fee",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "fu": {
                "title": "fee_currency",
                "description": "Fee currency, if different from the price currency",
                "type": [
                  "string",
                  "null"
                ]
              },
              "id": {
                "title": "fill_id",
                "type": "string",
                "format": "uuid"
              },
              "k": {
                "title": "fill_kind",
                "allOf": [
                  {
                    "$ref": "#/definitions/FillKind"
                  }
                ]
              },
              "oid": {
                "title": "order_id",
                "anyOf": [
                  {
                    "$ref": "#/definitions/OrderId"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "p": {
                "title": "price",
                "allOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  }
                ]
              },
              "q": {
                "title": "quantity",
                "allOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  }
                ]
              },
              "s": {
                "title": "symbol",
                "type": "string"
              },
              "t": {
                "title": "is_taker",
                "default": null,
                "type": "integer",
                "format": "default"
              },
              "tn": {
                "title": "trade_time_ns",
                "type": "integer",
                "format": "default",
                "minimum": 0.0
              },
              "ts": {
                "title": "trade_time",
                "description": "When the cpty claims the trade happened",
                "type": "integer",
                "format": "int64"
              },
              "u": {
                "title": "trader",
                "anyOf": [
                  {
                    "$ref": "#/definitions/UserId"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "x": {
                "title": "execution_venue",
                "type": "string"
              },
              "xid": {
                "title": "exchange_fill_id",
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          },
          {
            "description": "Fills which we received but couldn't parse fully, return details best effort",
            "type": "object",
            "required": [
              "id",
              "t",
              "x"
            ],
            "properties": {
              "a": {
                "title": "account",
                "type": [
                  "string",
                  "null"
                ],
                "format": "uuid"
              },
              "atn": {
                "title": "recv_time_ns",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "default",
                "minimum": 0.0
              },
              "ats": {
                "title": "recv_time",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "int64"
              },
              "d": {
                "title": "direction",
                "anyOf": [
                  {
                    "$ref": "#/definitions/Dir"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "f": {
                "title": "fee",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "fu": {
                "title": "fee_currency",
                "type": [
                  "string",
                  "null"
                ]
              },
              "id": {
                "title": "fill_id",
                "type": "string",
                "format": "uuid"
              },
              "k": {
                "title": "fill_kind",
                "anyOf": [
                  {
                    "$ref": "#/definitions/FillKind"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "oid": {
                "title": "order_id",
                "anyOf": [
                  {
                    "$ref": "#/definitions/OrderId"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "p": {
                "title": "price",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "q": {
                "title": "quantity",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "s": {
                "title": "symbol",
                "type": [
                  "string",
                  "null"
                ]
              },
              "t": {
                "type": "string",
                "enum": [
                  "af"
                ]
              },
              "tn": {
                "title": "trade_time_ns",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "default",
                "minimum": 0.0
              },
              "ts": {
                "title": "trade_time",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "int64"
              },
              "u": {
                "title": "trader",
                "anyOf": [
                  {
                    "$ref": "#/definitions/UserId"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "x": {
                "title": "execution_venue",
                "type": "string"
              },
              "xid": {
                "title": "exchange_fill_id",
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          }
        ],
        "definitions": {
          "CancelStatus": {
            "type": "integer",
            "enum": [
              0,
              1,
              2,
              127
            ],
            "x-enumNames": [
              "Pending",
              "Acked",
              "Rejected",
              "Out"
            ]
          },
          "Decimal": {
            "type": "string"
          },
          "Dir": {
            "description": "An order side/direction or a trade execution side/direction. In GraphQL these are serialized as \"buy\" or \"sell\".",
            "type": "string",
            "enum": [
              "BUY",
              "SELL"
            ]
          },
          "FillKind": {
            "type": "integer",
            "enum": [
              0,
              1,
              2
            ],
            "x-enumNames": [
              "Normal",
              "Reversal",
              "Correction"
            ]
          },
          "OrderId": {
            "description": "System-unique, persistent order identifiers",
            "type": "object",
            "required": [
              "seqid",
              "seqno"
            ],
            "properties": {
              "seqid": {
                "type": "string",
                "format": "uuid"
              },
              "seqno": {
                "type": "integer",
                "format": "default",
                "minimum": 0.0
              }
            }
          },
          "OrderRejectReason": {
            "type": "string",
            "enum": [
              "DuplicateOrderId",
              "NotAuthorized",
              "NoExecutionVenue",
              "NoAccount",
              "NoCpty",
              "UnsupportedOrderType",
              "UnsupportedExecutionVenue",
              "Unknown"
            ]
          },
          "OrderSource": {
            "type": "integer",
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              255
            ],
            "x-enumNames": [
              "API",
              "GUI",
              "Algo",
              "Reconciled",
              "CLI",
              "Telegram",
              "Other"
            ]
          },
          "OrderStatus": {
            "type": "integer",
            "enum": [
              0,
              1,
              2,
              127,
              128,
              129,
              254
            ],
            "x-enumNames": [
              "Pending",
              "Open",
              "Rejected",
              "Out",
              "Canceling",
              "Canceled",
              "Stale"
            ]
          },
          "TimeInForce": {
            "oneOf": [
              {
                "type": "string",
                "enum": [
                  "GTC",
                  "IOC",
                  "FOK"
                ]
              },
              {
                "type": "object",
                "required": [
                  "GTD"
                ],
                "properties": {
                  "GTD": {
                    "type": "string",
                    "format": "date-time"
                  }
                },
                "additionalProperties": false
              },
              {
                "description": "Day order--the specific time which this expires will be dependent on the venue",
                "type": "string",
                "enum": [
                  "DAY"
                ]
              }
            ]
          },
          "UserId": {
            "type": "string",
            "format": "uuid"
          }
        }
      }
    },
    {
      "type": "stream",
      "route": "/json.architect.Orderflow/SubscribeOrderflow",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "SubscribeOrderflowRequest",
        "description": "Subscribe/listen to orderflow events.",
        "type": "object",
        "properties": {
          "account": {
            "default": null,
            "anyOf": [
              {
                "$ref": "#/definitions/AccountIdOrName"
              },
              {
                "type": "null"
              }
            ]
          },
          "execution_venue": {
            "default": null,
            "type": [
              "string",
              "null"
            ]
          },
          "trader": {
            "default": null,
            "anyOf": [
              {
                "$ref": "#/definitions/TraderIdOrEmail"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "definitions": {
          "AccountIdOrName": {
            "type": "string"
          },
          "TraderIdOrEmail": {
            "type": "string"
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Orderflow",
        "oneOf": [
          {
            "type": "object",
            "oneOf": [
              {
                "type": "object",
                "required": [
                  "k",
                  "p",
                  "po"
                ],
                "properties": {
                  "k": {
                    "type": "string",
                    "enum": [
                      "LIMIT"
                    ]
                  },
                  "p": {
                    "title": "limit_price",
                    "allOf": [
                      {
                        "type": "string",
                        "format": "decimal"
                      }
                    ]
                  },
                  "po": {
                    "title": "post_only",
                    "type": "boolean"
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "k",
                  "p",
                  "tp"
                ],
                "properties": {
                  "k": {
                    "type": "string",
                    "enum": [
                      "STOP_LOSS_LIMIT"
                    ]
                  },
                  "p": {
                    "title": "limit_price",
                    "allOf": [
                      {
                        "type": "string",
                        "format": "decimal"
                      }
                    ]
                  },
                  "tp": {
                    "title": "trigger_price",
                    "allOf": [
                      {
                        "type": "string",
                        "format": "decimal"
                      }
                    ]
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "k",
                  "p",
                  "tp"
                ],
                "properties": {
                  "k": {
                    "type": "string",
                    "enum": [
                      "TAKE_PROFIT_LIMIT"
                    ]
                  },
                  "p": {
                    "title": "limit_price",
                    "allOf": [
                      {
                        "type": "string",
                        "format": "decimal"
                      }
                    ]
                  },
                  "tp": {
                    "title": "trigger_price",
                    "allOf": [
                      {
                        "type": "string",
                        "format": "decimal"
                      }
                    ]
                  }
                }
              }
            ],
            "required": [
              "a",
              "d",
              "id",
              "o",
              "q",
              "s",
              "src",
              "t",
              "tif",
              "tn",
              "ts",
              "u",
              "ve",
              "xq"
            ],
            "properties": {
              "a": {
                "title": "account",
                "type": "string",
                "format": "uuid"
              },
              "d": {
                "title": "dir",
                "allOf": [
                  {
                    "$ref": "#/definitions/Dir"
                  }
                ]
              },
              "id": {
                "$ref": "#/definitions/OrderId"
              },
              "o": {
                "title": "status",
                "allOf": [
                  {
                    "$ref": "#/definitions/OrderStatus"
                  }
                ]
              },
              "pid": {
                "title": "parent_id",
                "anyOf": [
                  {
                    "$ref": "#/definitions/OrderId"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "q": {
                "title": "quantity",
                "allOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  }
                ]
              },
              "r": {
                "title": "reject_reason",
                "anyOf": [
                  {
                    "$ref": "#/definitions/OrderRejectReason"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "rm": {
                "title": "reject_message",
                "type": [
                  "string",
                  "null"
                ]
              },
              "s": {
                "title": "symbol",
                "type": "string"
              },
              "src": {
                "title": "source",
                "allOf": [
                  {
                    "$ref": "#/definitions/OrderSource"
                  }
                ]
              },
              "t": {
                "type": "string",
                "enum": [
                  "w"
                ]
              },
              "tif": {
                "title": "time_in_force",
                "allOf": [
                  {
                    "$ref": "#/definitions/TimeInForce"
                  }
                ]
              },
              "tn": {
                "title": "recv_time_ns",
                "type": "integer",
                "format": "default",
                "minimum": 0.0
              },
              "ts": {
                "title": "recv_time",
                "type": "integer",
                "format": "int64"
              },
              "u": {
                "title": "trader",
                "allOf": [
                  {
                    "$ref": "#/definitions/UserId"
                  }
                ]
              },
              "ve": {
                "title": "execution_venue",
                "type": "string"
              },
              "xp": {
                "title": "average_fill_price",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "xq": {
                "title": "filled_quantity",
                "allOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "required": [
              "id",
              "t"
            ],
            "properties": {
              "id": {
                "$ref": "#/definitions/OrderId"
              },
              "t": {
                "type": "string",
                "enum": [
                  "a"
                ]
              }
            }
          },
          {
            "type": "object",
            "required": [
              "id",
              "r",
              "t"
            ],
            "properties": {
              "id": {
                "$ref": "#/definitions/OrderId"
              },
              "r": {
                "$ref": "#/definitions/OrderRejectReason"
              },
              "rm": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "t": {
                "type": "string",
                "enum": [
                  "r"
                ]
              }
            }
          },
          {
            "type": "object",
            "required": [
              "id",
              "t"
            ],
            "properties": {
              "id": {
                "$ref": "#/definitions/OrderId"
              },
              "t": {
                "type": "string",
                "enum": [
                  "o"
                ]
              }
            }
          },
          {
            "type": "object",
            "required": [
              "id",
              "t"
            ],
            "properties": {
              "id": {
                "$ref": "#/definitions/OrderId"
              },
              "t": {
                "type": "string",
                "enum": [
                  "z"
                ]
              }
            }
          },
          {
            "type": "object",
            "required": [
              "id",
              "o",
              "t",
              "tn",
              "ts",
              "xid"
            ],
            "properties": {
              "id": {
                "$ref": "#/definitions/OrderId"
              },
              "o": {
                "$ref": "#/definitions/CancelStatus"
              },
              "r": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "t": {
                "type": "string",
                "enum": [
                  "xc"
                ]
              },
              "tn": {
                "type": "integer",
                "format": "default",
                "minimum": 0.0
              },
              "ts": {
                "type": "integer",
                "format": "int64"
              },
              "xid": {
                "type": "string",
                "format": "uuid"
              }
            }
          },
          {
            "type": "object",
            "required": [
              "id",
              "t",
              "xid"
            ],
            "properties": {
              "id": {
                "$ref": "#/definitions/OrderId"
              },
              "rm": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "t": {
                "type": "string",
                "enum": [
                  "xr"
                ]
              },
              "xid": {
                "type": "string",
                "format": "uuid"
              }
            }
          },
          {
            "type": "object",
            "required": [
              "id",
              "t"
            ],
            "properties": {
              "id": {
                "$ref": "#/definitions/OrderId"
              },
              "t": {
                "type": "string",
                "enum": [
                  "xa"
                ]
              },
              "xid": {
                "type": [
                  "string",
                  "null"
                ],
                "format": "uuid"
              }
            }
          },
          {
            "type": "object",
            "required": [
              "id",
              "t"
            ],
            "properties": {
              "id": {
                "$ref": "#/definitions/OrderId"
              },
              "t": {
                "type": "string",
                "enum": [
                  "xx"
                ]
              },
              "xid": {
                "type": [
                  "string",
                  "null"
                ],
                "format": "uuid"
              }
            }
          },
          {
            "type": "object",
            "required": [
              "d",
              "id",
              "k",
              "p",
              "q",
              "s",
              "t",
              "tn",
              "ts",
              "x"
            ],
            "properties": {
              "a": {
                "title": "account",
                "type": [
                  "string",
                  "null"
                ],
                "format": "uuid"
              },
              "atn": {
                "title": "recv_time_ns",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "default",
                "minimum": 0.0
              },
              "ats": {
                "title": "recv_time",
                "description": "When Architect received the fill, if realtime",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "int64"
              },
              "d": {
                "title": "direction",
                "allOf": [
                  {
                    "$ref": "#/definitions/Dir"
                  }
                ]
              },
              "f": {
                "title": "fee",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "fu": {
                "title": "fee_currency",
                "description": "Fee currency, if different from the price currency",
                "type": [
                  "string",
                  "null"
                ]
              },
              "id": {
                "title": "fill_id",
                "type": "string",
                "format": "uuid"
              },
              "k": {
                "title": "fill_kind",
                "allOf": [
                  {
                    "$ref": "#/definitions/FillKind"
                  }
                ]
              },
              "oid": {
                "title": "order_id",
                "anyOf": [
                  {
                    "$ref": "#/definitions/OrderId"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "p": {
                "title": "price",
                "allOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  }
                ]
              },
              "q": {
                "title": "quantity",
                "allOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  }
                ]
              },
              "s": {
                "title": "symbol",
                "type": "string"
              },
              "t": {
                "title": "is_taker",
                "default": null,
                "type": "integer",
                "format": "default"
              },
              "tn": {
                "title": "trade_time_ns",
                "type": "integer",
                "format": "default",
                "minimum": 0.0
              },
              "ts": {
                "title": "trade_time",
                "description": "When the cpty claims the trade happened",
                "type": "integer",
                "format": "int64"
              },
              "u": {
                "title": "trader",
                "anyOf": [
                  {
                    "$ref": "#/definitions/UserId"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "x": {
                "title": "execution_venue",
                "type": "string"
              },
              "xid": {
                "title": "exchange_fill_id",
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          },
          {
            "description": "Fills which we received but couldn't parse fully, return details best effort",
            "type": "object",
            "required": [
              "id",
              "t",
              "x"
            ],
            "properties": {
              "a": {
                "title": "account",
                "type": [
                  "string",
                  "null"
                ],
                "format": "uuid"
              },
              "atn": {
                "title": "recv_time_ns",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "default",
                "minimum": 0.0
              },
              "ats": {
                "title": "recv_time",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "int64"
              },
              "d": {
                "title": "direction",
                "anyOf": [
                  {
                    "$ref": "#/definitions/Dir"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "f": {
                "title": "fee",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "fu": {
                "title": "fee_currency",
                "type": [
                  "string",
                  "null"
                ]
              },
              "id": {
                "title": "fill_id",
                "type": "string",
                "format": "uuid"
              },
              "k": {
                "title": "fill_kind",
                "anyOf": [
                  {
                    "$ref": "#/definitions/FillKind"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "oid": {
                "title": "order_id",
                "anyOf": [
                  {
                    "$ref": "#/definitions/OrderId"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "p": {
                "title": "price",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "q": {
                "title": "quantity",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "s": {
                "title": "symbol",
                "type": [
                  "string",
                  "null"
                ]
              },
              "t": {
                "type": "string",
                "enum": [
                  "af"
                ]
              },
              "tn": {
                "title": "trade_time_ns",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "default",
                "minimum": 0.0
              },
              "ts": {
                "title": "trade_time",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "int64"
              },
              "u": {
                "title": "trader",
                "anyOf": [
                  {
                    "$ref": "#/definitions/UserId"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "x": {
                "title": "execution_venue",
                "type": "string"
              },
              "xid": {
                "title": "exchange_fill_id",
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          }
        ],
        "definitions": {
          "CancelStatus": {
            "type": "integer",
            "enum": [
              0,
              1,
              2,
              127
            ],
            "x-enumNames": [
              "Pending",
              "Acked",
              "Rejected",
              "Out"
            ]
          },
          "Decimal": {
            "type": "string"
          },
          "Dir": {
            "description": "An order side/direction or a trade execution side/direction. In GraphQL these are serialized as \"buy\" or \"sell\".",
            "type": "string",
            "enum": [
              "BUY",
              "SELL"
            ]
          },
          "FillKind": {
            "type": "integer",
            "enum": [
              0,
              1,
              2
            ],
            "x-enumNames": [
              "Normal",
              "Reversal",
              "Correction"
            ]
          },
          "OrderId": {
            "description": "System-unique, persistent order identifiers",
            "type": "object",
            "required": [
              "seqid",
              "seqno"
            ],
            "properties": {
              "seqid": {
                "type": "string",
                "format": "uuid"
              },
              "seqno": {
                "type": "integer",
                "format": "default",
                "minimum": 0.0
              }
            }
          },
          "OrderRejectReason": {
            "type": "string",
            "enum": [
              "DuplicateOrderId",
              "NotAuthorized",
              "NoExecutionVenue",
              "NoAccount",
              "NoCpty",
              "UnsupportedOrderType",
              "UnsupportedExecutionVenue",
              "Unknown"
            ]
          },
          "OrderSource": {
            "type": "integer",
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              255
            ],
            "x-enumNames": [
              "API",
              "GUI",
              "Algo",
              "Reconciled",
              "CLI",
              "Telegram",
              "Other"
            ]
          },
          "OrderStatus": {
            "type": "integer",
            "enum": [
              0,
              1,
              2,
              127,
              128,
              129,
              254
            ],
            "x-enumNames": [
              "Pending",
              "Open",
              "Rejected",
              "Out",
              "Canceling",
              "Canceled",
              "Stale"
            ]
          },
          "TimeInForce": {
            "oneOf": [
              {
                "type": "string",
                "enum": [
                  "GTC",
                  "IOC",
                  "FOK"
                ]
              },
              {
                "type": "object",
                "required": [
                  "GTD"
                ],
                "properties": {
                  "GTD": {
                    "type": "string",
                    "format": "date-time"
                  }
                },
                "additionalProperties": false
              },
              {
                "description": "Day order--the specific time which this expires will be dependent on the venue",
                "type": "string",
                "enum": [
                  "DAY"
                ]
              }
            ]
          },
          "UserId": {
            "type": "string",
            "format": "uuid"
          }
        }
      }
    },
    {
      "type": "stream",
      "route": "/json.architect.Orderflow/Dropcopy",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "DropcopyRequest",
        "type": "object",
        "properties": {
          "aberrant_fills": {
            "default": false,
            "type": "boolean"
          },
          "account": {
            "default": null,
            "anyOf": [
              {
                "$ref": "#/definitions/AccountIdOrName"
              },
              {
                "type": "null"
              }
            ]
          },
          "execution_venue": {
            "default": null,
            "type": [
              "string",
              "null"
            ]
          },
          "fills": {
            "default": true,
            "type": "boolean"
          },
          "orders": {
            "default": false,
            "type": "boolean"
          },
          "trader": {
            "default": null,
            "anyOf": [
              {
                "$ref": "#/definitions/TraderIdOrEmail"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "definitions": {
          "AccountIdOrName": {
            "type": "string"
          },
          "TraderIdOrEmail": {
            "type": "string"
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Dropcopy",
        "oneOf": [
          {
            "type": "object",
            "oneOf": [
              {
                "type": "object",
                "required": [
                  "k",
                  "p",
                  "po"
                ],
                "properties": {
                  "k": {
                    "type": "string",
                    "enum": [
                      "LIMIT"
                    ]
                  },
                  "p": {
                    "title": "limit_price",
                    "allOf": [
                      {
                        "type": "string",
                        "format": "decimal"
                      }
                    ]
                  },
                  "po": {
                    "title": "post_only",
                    "type": "boolean"
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "k",
                  "p",
                  "tp"
                ],
                "properties": {
                  "k": {
                    "type": "string",
                    "enum": [
                      "STOP_LOSS_LIMIT"
                    ]
                  },
                  "p": {
                    "title": "limit_price",
                    "allOf": [
                      {
                        "type": "string",
                        "format": "decimal"
                      }
                    ]
                  },
                  "tp": {
                    "title": "trigger_price",
                    "allOf": [
                      {
                        "type": "string",
                        "format": "decimal"
                      }
                    ]
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "k",
                  "p",
                  "tp"
                ],
                "properties": {
                  "k": {
                    "type": "string",
                    "enum": [
                      "TAKE_PROFIT_LIMIT"
                    ]
                  },
                  "p": {
                    "title": "limit_price",
                    "allOf": [
                      {
                        "type": "string",
                        "format": "decimal"
                      }
                    ]
                  },
                  "tp": {
                    "title": "trigger_price",
                    "allOf": [
                      {
                        "type": "string",
                        "format": "decimal"
                      }
                    ]
                  }
                }
              }
            ],
            "required": [
              "a",
              "d",
              "id",
              "o",
              "q",
              "s",
              "src",
              "t",
              "tif",
              "tn",
              "ts",
              "u",
              "ve",
              "xq"
            ],
            "properties": {
              "a": {
                "title": "account",
                "type": "string",
                "format": "uuid"
              },
              "d": {
                "title": "dir",
                "allOf": [
                  {
                    "$ref": "#/definitions/Dir"
                  }
                ]
              },
              "id": {
                "$ref": "#/definitions/OrderId"
              },
              "o": {
                "title": "status",
                "allOf": [
                  {
                    "$ref": "#/definitions/OrderStatus"
                  }
                ]
              },
              "pid": {
                "title": "parent_id",
                "anyOf": [
                  {
                    "$ref": "#/definitions/OrderId"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "q": {
                "title": "quantity",
                "allOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  }
                ]
              },
              "r": {
                "title": "reject_reason",
                "anyOf": [
                  {
                    "$ref": "#/definitions/OrderRejectReason"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "rm": {
                "title": "reject_message",
                "type": [
                  "string",
                  "null"
                ]
              },
              "s": {
                "title": "symbol",
                "type": "string"
              },
              "src": {
                "title": "source",
                "allOf": [
                  {
                    "$ref": "#/definitions/OrderSource"
                  }
                ]
              },
              "t": {
                "type": "string",
                "enum": [
                  "o"
                ]
              },
              "tif": {
                "title": "time_in_force",
                "allOf": [
                  {
                    "$ref": "#/definitions/TimeInForce"
                  }
                ]
              },
              "tn": {
                "title": "recv_time_ns",
                "type": "integer",
                "format": "default",
                "minimum": 0.0
              },
              "ts": {
                "title": "recv_time",
                "type": "integer",
                "format": "int64"
              },
              "u": {
                "title": "trader",
                "allOf": [
                  {
                    "$ref": "#/definitions/UserId"
                  }
                ]
              },
              "ve": {
                "title": "execution_venue",
                "type": "string"
              },
              "xp": {
                "title": "average_fill_price",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "xq": {
                "title": "filled_quantity",
                "allOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "required": [
              "d",
              "id",
              "k",
              "p",
              "q",
              "s",
              "t",
              "tn",
              "ts",
              "x"
            ],
            "properties": {
              "a": {
                "title": "account",
                "type": [
                  "string",
                  "null"
                ],
                "format": "uuid"
              },
              "atn": {
                "title": "recv_time_ns",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "default",
                "minimum": 0.0
              },
              "ats": {
                "title": "recv_time",
                "description": "When Architect received the fill, if realtime",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "int64"
              },
              "d": {
                "title": "direction",
                "allOf": [
                  {
                    "$ref": "#/definitions/Dir"
                  }
                ]
              },
              "f": {
                "title": "fee",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "fu": {
                "title": "fee_currency",
                "description": "Fee currency, if different from the price currency",
                "type": [
                  "string",
                  "null"
                ]
              },
              "id": {
                "title": "fill_id",
                "type": "string",
                "format": "uuid"
              },
              "k": {
                "title": "fill_kind",
                "allOf": [
                  {
                    "$ref": "#/definitions/FillKind"
                  }
                ]
              },
              "oid": {
                "title": "order_id",
                "anyOf": [
                  {
                    "$ref": "#/definitions/OrderId"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "p": {
                "title": "price",
                "allOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  }
                ]
              },
              "q": {
                "title": "quantity",
                "allOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  }
                ]
              },
              "s": {
                "title": "symbol",
                "type": "string"
              },
              "t": {
                "title": "is_taker",
                "default": null,
                "type": "integer",
                "format": "default"
              },
              "tn": {
                "title": "trade_time_ns",
                "type": "integer",
                "format": "default",
                "minimum": 0.0
              },
              "ts": {
                "title": "trade_time",
                "description": "When the cpty claims the trade happened",
                "type": "integer",
                "format": "int64"
              },
              "u": {
                "title": "trader",
                "anyOf": [
                  {
                    "$ref": "#/definitions/UserId"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "x": {
                "title": "execution_venue",
                "type": "string"
              },
              "xid": {
                "title": "exchange_fill_id",
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          },
          {
            "description": "Fills which we received but couldn't parse fully, return details best effort",
            "type": "object",
            "required": [
              "id",
              "t",
              "x"
            ],
            "properties": {
              "a": {
                "title": "account",
                "type": [
                  "string",
                  "null"
                ],
                "format": "uuid"
              },
              "atn": {
                "title": "recv_time_ns",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "default",
                "minimum": 0.0
              },
              "ats": {
                "title": "recv_time",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "int64"
              },
              "d": {
                "title": "direction",
                "anyOf": [
                  {
                    "$ref": "#/definitions/Dir"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "f": {
                "title": "fee",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "fu": {
                "title": "fee_currency",
                "type": [
                  "string",
                  "null"
                ]
              },
              "id": {
                "title": "fill_id",
                "type": "string",
                "format": "uuid"
              },
              "k": {
                "title": "fill_kind",
                "anyOf": [
                  {
                    "$ref": "#/definitions/FillKind"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "oid": {
                "title": "order_id",
                "anyOf": [
                  {
                    "$ref": "#/definitions/OrderId"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "p": {
                "title": "price",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "q": {
                "title": "quantity",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "s": {
                "title": "symbol",
                "type": [
                  "string",
                  "null"
                ]
              },
              "t": {
                "type": "string",
                "enum": [
                  "af"
                ]
              },
              "tn": {
                "title": "trade_time_ns",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "default",
                "minimum": 0.0
              },
              "ts": {
                "title": "trade_time",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "int64"
              },
              "u": {
                "title": "trader",
                "anyOf": [
                  {
                    "$ref": "#/definitions/UserId"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "x": {
                "title": "execution_venue",
                "type": "string"
              },
              "xid": {
                "title": "exchange_fill_id",
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          }
        ],
        "definitions": {
          "Decimal": {
            "type": "string"
          },
          "Dir": {
            "description": "An order side/direction or a trade execution side/direction. In GraphQL these are serialized as \"buy\" or \"sell\".",
            "type": "string",
            "enum": [
              "BUY",
              "SELL"
            ]
          },
          "FillKind": {
            "type": "integer",
            "enum": [
              0,
              1,
              2
            ],
            "x-enumNames": [
              "Normal",
              "Reversal",
              "Correction"
            ]
          },
          "OrderId": {
            "description": "System-unique, persistent order identifiers",
            "type": "object",
            "required": [
              "seqid",
              "seqno"
            ],
            "properties": {
              "seqid": {
                "type": "string",
                "format": "uuid"
              },
              "seqno": {
                "type": "integer",
                "format": "default",
                "minimum": 0.0
              }
            }
          },
          "OrderRejectReason": {
            "type": "string",
            "enum": [
              "DuplicateOrderId",
              "NotAuthorized",
              "NoExecutionVenue",
              "NoAccount",
              "NoCpty",
              "UnsupportedOrderType",
              "UnsupportedExecutionVenue",
              "Unknown"
            ]
          },
          "OrderSource": {
            "type": "integer",
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              255
            ],
            "x-enumNames": [
              "API",
              "GUI",
              "Algo",
              "Reconciled",
              "CLI",
              "Telegram",
              "Other"
            ]
          },
          "OrderStatus": {
            "type": "integer",
            "enum": [
              0,
              1,
              2,
              127,
              128,
              129,
              254
            ],
            "x-enumNames": [
              "Pending",
              "Open",
              "Rejected",
              "Out",
              "Canceling",
              "Canceled",
              "Stale"
            ]
          },
          "TimeInForce": {
            "oneOf": [
              {
                "type": "string",
                "enum": [
                  "GTC",
                  "IOC",
                  "FOK"
                ]
              },
              {
                "type": "object",
                "required": [
                  "GTD"
                ],
                "properties": {
                  "GTD": {
                    "type": "string",
                    "format": "date-time"
                  }
                },
                "additionalProperties": false
              },
              {
                "description": "Day order--the specific time which this expires will be dependent on the venue",
                "type": "string",
                "enum": [
                  "DAY"
                ]
              }
            ]
          },
          "UserId": {
            "type": "string",
            "format": "uuid"
          }
        }
      }
    }
  ]
},

{
  "$schema": "jsonschema",
  "name": "Oms",
  "rpcs": [
    {
      "type": "unary",
      "route": "/json.architect.Oms/PlaceOrder",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "PlaceOrderRequest",
        "type": "object",
        "oneOf": [
          {
            "type": "object",
            "required": [
              "k",
              "p",
              "po"
            ],
            "properties": {
              "k": {
                "type": "string",
                "enum": [
                  "LIMIT"
                ]
              },
              "p": {
                "title": "limit_price",
                "allOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  }
                ]
              },
              "po": {
                "title": "post_only",
                "type": "boolean"
              }
            }
          },
          {
            "type": "object",
            "required": [
              "k",
              "p",
              "tp"
            ],
            "properties": {
              "k": {
                "type": "string",
                "enum": [
                  "STOP_LOSS_LIMIT"
                ]
              },
              "p": {
                "title": "limit_price",
                "allOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  }
                ]
              },
              "tp": {
                "title": "trigger_price",
                "allOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "required": [
              "k",
              "p",
              "tp"
            ],
            "properties": {
              "k": {
                "type": "string",
                "enum": [
                  "TAKE_PROFIT_LIMIT"
                ]
              },
              "p": {
                "title": "limit_price",
                "allOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  }
                ]
              },
              "tp": {
                "title": "trigger_price",
                "allOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  }
                ]
              }
            }
          }
        ],
        "required": [
          "d",
          "q",
          "s",
          "tif"
        ],
        "properties": {
          "a": {
            "title": "account",
            "default": null,
            "anyOf": [
              {
                "$ref": "#/definitions/AccountIdOrName"
              },
              {
                "type": "null"
              }
            ]
          },
          "d": {
            "title": "dir",
            "allOf": [
              {
                "$ref": "#/definitions/Dir"
              }
            ]
          },
          "id": {
            "description": "If not specified, one will be generated for you; note, in that case, you won't know for sure if the specific request went through.",
            "anyOf": [
              {
                "$ref": "#/definitions/OrderId"
              },
              {
                "type": "null"
              }
            ]
          },
          "pid": {
            "title": "parent_id",
            "anyOf": [
              {
                "$ref": "#/definitions/OrderId"
              },
              {
                "type": "null"
              }
            ]
          },
          "q": {
            "title": "quantity",
            "allOf": [
              {
                "type": "string",
                "format": "decimal"
              }
            ]
          },
          "s": {
            "title": "symbol",
            "type": "string"
          },
          "src": {
            "title": "source",
            "default": null,
            "anyOf": [
              {
                "$ref": "#/definitions/OrderSource"
              },
              {
                "type": "null"
              }
            ]
          },
          "tif": {
            "title": "time_in_force",
            "allOf": [
              {
                "$ref": "#/definitions/TimeInForce"
              }
            ]
          },
          "u": {
            "title": "trader",
            "default": null,
            "anyOf": [
              {
                "$ref": "#/definitions/TraderIdOrEmail"
              },
              {
                "type": "null"
              }
            ]
          },
          "x": {
            "title": "execution_venue",
            "default": null,
            "type": [
              "string",
              "null"
            ]
          }
        },
        "definitions": {
          "AccountIdOrName": {
            "type": "string"
          },
          "Decimal": {
            "type": "string"
          },
          "Dir": {
            "description": "An order side/direction or a trade execution side/direction. In GraphQL these are serialized as \"buy\" or \"sell\".",
            "type": "string",
            "enum": [
              "BUY",
              "SELL"
            ]
          },
          "OrderId": {
            "description": "System-unique, persistent order identifiers",
            "type": "object",
            "required": [
              "seqid",
              "seqno"
            ],
            "properties": {
              "seqid": {
                "type": "string",
                "format": "uuid"
              },
              "seqno": {
                "type": "integer",
                "format": "default",
                "minimum": 0.0
              }
            }
          },
          "OrderSource": {
            "type": "integer",
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              255
            ],
            "x-enumNames": [
              "API",
              "GUI",
              "Algo",
              "Reconciled",
              "CLI",
              "Telegram",
              "Other"
            ]
          },
          "TimeInForce": {
            "oneOf": [
              {
                "type": "string",
                "enum": [
                  "GTC",
                  "IOC",
                  "FOK"
                ]
              },
              {
                "type": "object",
                "required": [
                  "GTD"
                ],
                "properties": {
                  "GTD": {
                    "type": "string",
                    "format": "date-time"
                  }
                },
                "additionalProperties": false
              },
              {
                "description": "Day order--the specific time which this expires will be dependent on the venue",
                "type": "string",
                "enum": [
                  "DAY"
                ]
              }
            ]
          },
          "TraderIdOrEmail": {
            "type": "string"
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Order",
        "type": "object",
        "oneOf": [
          {
            "type": "object",
            "required": [
              "k",
              "p",
              "po"
            ],
            "properties": {
              "k": {
                "type": "string",
                "enum": [
                  "LIMIT"
                ]
              },
              "p": {
                "title": "limit_price",
                "allOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  }
                ]
              },
              "po": {
                "title": "post_only",
                "type": "boolean"
              }
            }
          },
          {
            "type": "object",
            "required": [
              "k",
              "p",
              "tp"
            ],
            "properties": {
              "k": {
                "type": "string",
                "enum": [
                  "STOP_LOSS_LIMIT"
                ]
              },
              "p": {
                "title": "limit_price",
                "allOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  }
                ]
              },
              "tp": {
                "title": "trigger_price",
                "allOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "required": [
              "k",
              "p",
              "tp"
            ],
            "properties": {
              "k": {
                "type": "string",
                "enum": [
                  "TAKE_PROFIT_LIMIT"
                ]
              },
              "p": {
                "title": "limit_price",
                "allOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  }
                ]
              },
              "tp": {
                "title": "trigger_price",
                "allOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  }
                ]
              }
            }
          }
        ],
        "required": [
          "a",
          "d",
          "id",
          "o",
          "q",
          "s",
          "src",
          "tif",
          "tn",
          "ts",
          "u",
          "ve",
          "xq"
        ],
        "properties": {
          "a": {
            "title": "account",
            "type": "string",
            "format": "uuid"
          },
          "d": {
            "title": "dir",
            "allOf": [
              {
                "$ref": "#/definitions/Dir"
              }
            ]
          },
          "id": {
            "$ref": "#/definitions/OrderId"
          },
          "o": {
            "title": "status",
            "allOf": [
              {
                "$ref": "#/definitions/OrderStatus"
              }
            ]
          },
          "pid": {
            "title": "parent_id",
            "anyOf": [
              {
                "$ref": "#/definitions/OrderId"
              },
              {
                "type": "null"
              }
            ]
          },
          "q": {
            "title": "quantity",
            "allOf": [
              {
                "type": "string",
                "format": "decimal"
              }
            ]
          },
          "r": {
            "title": "reject_reason",
            "anyOf": [
              {
                "$ref": "#/definitions/OrderRejectReason"
              },
              {
                "type": "null"
              }
            ]
          },
          "rm": {
            "title": "reject_message",
            "type": [
              "string",
              "null"
            ]
          },
          "s": {
            "title": "symbol",
            "type": "string"
          },
          "src": {
            "title": "source",
            "allOf": [
              {
                "$ref": "#/definitions/OrderSource"
              }
            ]
          },
          "tif": {
            "title": "time_in_force",
            "allOf": [
              {
                "$ref": "#/definitions/TimeInForce"
              }
            ]
          },
          "tn": {
            "title": "recv_time_ns",
            "type": "integer",
            "format": "default",
            "minimum": 0.0
          },
          "ts": {
            "title": "recv_time",
            "type": "integer",
            "format": "int64"
          },
          "u": {
            "title": "trader",
            "allOf": [
              {
                "$ref": "#/definitions/UserId"
              }
            ]
          },
          "ve": {
            "title": "execution_venue",
            "type": "string"
          },
          "xp": {
            "title": "average_fill_price",
            "anyOf": [
              {
                "type": "string",
                "format": "decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "xq": {
            "title": "filled_quantity",
            "allOf": [
              {
                "type": "string",
                "format": "decimal"
              }
            ]
          }
        },
        "definitions": {
          "Decimal": {
            "type": "string"
          },
          "Dir": {
            "description": "An order side/direction or a trade execution side/direction. In GraphQL these are serialized as \"buy\" or \"sell\".",
            "type": "string",
            "enum": [
              "BUY",
              "SELL"
            ]
          },
          "OrderId": {
            "description": "System-unique, persistent order identifiers",
            "type": "object",
            "required": [
              "seqid",
              "seqno"
            ],
            "properties": {
              "seqid": {
                "type": "string",
                "format": "uuid"
              },
              "seqno": {
                "type": "integer",
                "format": "default",
                "minimum": 0.0
              }
            }
          },
          "OrderRejectReason": {
            "type": "string",
            "enum": [
              "DuplicateOrderId",
              "NotAuthorized",
              "NoExecutionVenue",
              "NoAccount",
              "NoCpty",
              "UnsupportedOrderType",
              "UnsupportedExecutionVenue",
              "Unknown"
            ]
          },
          "OrderSource": {
            "type": "integer",
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              255
            ],
            "x-enumNames": [
              "API",
              "GUI",
              "Algo",
              "Reconciled",
              "CLI",
              "Telegram",
              "Other"
            ]
          },
          "OrderStatus": {
            "type": "integer",
            "enum": [
              0,
              1,
              2,
              127,
              128,
              129,
              254
            ],
            "x-enumNames": [
              "Pending",
              "Open",
              "Rejected",
              "Out",
              "Canceling",
              "Canceled",
              "Stale"
            ]
          },
          "TimeInForce": {
            "oneOf": [
              {
                "type": "string",
                "enum": [
                  "GTC",
                  "IOC",
                  "FOK"
                ]
              },
              {
                "type": "object",
                "required": [
                  "GTD"
                ],
                "properties": {
                  "GTD": {
                    "type": "string",
                    "format": "date-time"
                  }
                },
                "additionalProperties": false
              },
              {
                "description": "Day order--the specific time which this expires will be dependent on the venue",
                "type": "string",
                "enum": [
                  "DAY"
                ]
              }
            ]
          },
          "UserId": {
            "type": "string",
            "format": "uuid"
          }
        }
      }
    },
    {
      "type": "unary",
      "route": "/json.architect.Oms/CancelOrder",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "CancelOrderRequest",
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "title": "order_id",
            "allOf": [
              {
                "$ref": "#/definitions/OrderId"
              }
            ]
          },
          "xid": {
            "title": "cancel_id",
            "description": "If not specified, one will be generated for you; note, in that case, you won't know for sure if the specific request went through.",
            "default": null,
            "type": [
              "string",
              "null"
            ],
            "format": "uuid"
          }
        },
        "definitions": {
          "OrderId": {
            "description": "System-unique, persistent order identifiers",
            "type": "object",
            "required": [
              "seqid",
              "seqno"
            ],
            "properties": {
              "seqid": {
                "type": "string",
                "format": "uuid"
              },
              "seqno": {
                "type": "integer",
                "format": "default",
                "minimum": 0.0
              }
            }
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Cancel",
        "type": "object",
        "required": [
          "id",
          "o",
          "tn",
          "ts",
          "xid"
        ],
        "properties": {
          "id": {
            "$ref": "#/definitions/OrderId"
          },
          "o": {
            "$ref": "#/definitions/CancelStatus"
          },
          "r": {
            "type": [
              "string",
              "null"
            ]
          },
          "tn": {
            "type": "integer",
            "format": "default",
            "minimum": 0.0
          },
          "ts": {
            "type": "integer",
            "format": "int64"
          },
          "xid": {
            "type": "string",
            "format": "uuid"
          }
        },
        "definitions": {
          "CancelStatus": {
            "type": "integer",
            "enum": [
              0,
              1,
              2,
              127
            ],
            "x-enumNames": [
              "Pending",
              "Acked",
              "Rejected",
              "Out"
            ]
          },
          "OrderId": {
            "description": "System-unique, persistent order identifiers",
            "type": "object",
            "required": [
              "seqid",
              "seqno"
            ],
            "properties": {
              "seqid": {
                "type": "string",
                "format": "uuid"
              },
              "seqno": {
                "type": "integer",
                "format": "default",
                "minimum": 0.0
              }
            }
          }
        }
      }
    },
    {
      "type": "unary",
      "route": "/json.architect.Oms/CancelAllOrders",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "CancelAllOrdersRequest",
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "account": {
            "anyOf": [
              {
                "$ref": "#/definitions/AccountIdOrName"
              },
              {
                "type": "null"
              }
            ]
          },
          "execution_venue": {
            "type": [
              "string",
              "null"
            ]
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "trader": {
            "anyOf": [
              {
                "$ref": "#/definitions/TraderIdOrEmail"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "definitions": {
          "AccountIdOrName": {
            "type": "string"
          },
          "TraderIdOrEmail": {
            "type": "string"
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "CancelAllOrdersResponse",
        "type": "object"
      }
    },
    {
      "type": "unary",
      "route": "/json.architect.Oms/OpenOrders",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "OpenOrdersRequest",
        "type": "object",
        "properties": {
          "account": {
            "anyOf": [
              {
                "$ref": "#/definitions/AccountIdOrName"
              },
              {
                "type": "null"
              }
            ]
          },
          "order_ids": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/definitions/OrderId"
            }
          },
          "parent_order_id": {
            "anyOf": [
              {
                "$ref": "#/definitions/OrderId"
              },
              {
                "type": "null"
              }
            ]
          },
          "symbol": {
            "type": [
              "string",
              "null"
            ]
          },
          "trader": {
            "anyOf": [
              {
                "$ref": "#/definitions/TraderIdOrEmail"
              },
              {
                "type": "null"
              }
            ]
          },
          "venue": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "definitions": {
          "AccountIdOrName": {
            "type": "string"
          },
          "OrderId": {
            "description": "System-unique, persistent order identifiers",
            "type": "object",
            "required": [
              "seqid",
              "seqno"
            ],
            "properties": {
              "seqid": {
                "type": "string",
                "format": "uuid"
              },
              "seqno": {
                "type": "integer",
                "format": "default",
                "minimum": 0.0
              }
            }
          },
          "TraderIdOrEmail": {
            "type": "string"
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "OpenOrdersResponse",
        "type": "object",
        "required": [
          "open_orders"
        ],
        "properties": {
          "open_orders": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Order"
            }
          }
        },
        "definitions": {
          "Decimal": {
            "type": "string"
          },
          "Dir": {
            "description": "An order side/direction or a trade execution side/direction. In GraphQL these are serialized as \"buy\" or \"sell\".",
            "type": "string",
            "enum": [
              "BUY",
              "SELL"
            ]
          },
          "Order": {
            "type": "object",
            "oneOf": [
              {
                "type": "object",
                "required": [
                  "k",
                  "p",
                  "po"
                ],
                "properties": {
                  "k": {
                    "type": "string",
                    "enum": [
                      "LIMIT"
                    ]
                  },
                  "p": {
                    "title": "limit_price",
                    "allOf": [
                      {
                        "type": "string",
                        "format": "decimal"
                      }
                    ]
                  },
                  "po": {
                    "title": "post_only",
                    "type": "boolean"
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "k",
                  "p",
                  "tp"
                ],
                "properties": {
                  "k": {
                    "type": "string",
                    "enum": [
                      "STOP_LOSS_LIMIT"
                    ]
                  },
                  "p": {
                    "title": "limit_price",
                    "allOf": [
                      {
                        "type": "string",
                        "format": "decimal"
                      }
                    ]
                  },
                  "tp": {
                    "title": "trigger_price",
                    "allOf": [
                      {
                        "type": "string",
                        "format": "decimal"
                      }
                    ]
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "k",
                  "p",
                  "tp"
                ],
                "properties": {
                  "k": {
                    "type": "string",
                    "enum": [
                      "TAKE_PROFIT_LIMIT"
                    ]
                  },
                  "p": {
                    "title": "limit_price",
                    "allOf": [
                      {
                        "type": "string",
                        "format": "decimal"
                      }
                    ]
                  },
                  "tp": {
                    "title": "trigger_price",
                    "allOf": [
                      {
                        "type": "string",
                        "format": "decimal"
                      }
                    ]
                  }
                }
              }
            ],
            "required": [
              "a",
              "d",
              "id",
              "o",
              "q",
              "s",
              "src",
              "tif",
              "tn",
              "ts",
              "u",
              "ve",
              "xq"
            ],
            "properties": {
              "a": {
                "title": "account",
                "type": "string",
                "format": "uuid"
              },
              "d": {
                "title": "dir",
                "allOf": [
                  {
                    "$ref": "#/definitions/Dir"
                  }
                ]
              },
              "id": {
                "$ref": "#/definitions/OrderId"
              },
              "o": {
                "title": "status",
                "allOf": [
                  {
                    "$ref": "#/definitions/OrderStatus"
                  }
                ]
              },
              "pid": {
                "title": "parent_id",
                "anyOf": [
                  {
                    "$ref": "#/definitions/OrderId"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "q": {
                "title": "quantity",
                "allOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  }
                ]
              },
              "r": {
                "title": "reject_reason",
                "anyOf": [
                  {
                    "$ref": "#/definitions/OrderRejectReason"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "rm": {
                "title": "reject_message",
                "type": [
                  "string",
                  "null"
                ]
              },
              "s": {
                "title": "symbol",
                "type": "string"
              },
              "src": {
                "title": "source",
                "allOf": [
                  {
                    "$ref": "#/definitions/OrderSource"
                  }
                ]
              },
              "tif": {
                "title": "time_in_force",
                "allOf": [
                  {
                    "$ref": "#/definitions/TimeInForce"
                  }
                ]
              },
              "tn": {
                "title": "recv_time_ns",
                "type": "integer",
                "format": "default",
                "minimum": 0.0
              },
              "ts": {
                "title": "recv_time",
                "type": "integer",
                "format": "int64"
              },
              "u": {
                "title": "trader",
                "allOf": [
                  {
                    "$ref": "#/definitions/UserId"
                  }
                ]
              },
              "ve": {
                "title": "execution_venue",
                "type": "string"
              },
              "xp": {
                "title": "average_fill_price",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "xq": {
                "title": "filled_quantity",
                "allOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  }
                ]
              }
            }
          },
          "OrderId": {
            "description": "System-unique, persistent order identifiers",
            "type": "object",
            "required": [
              "seqid",
              "seqno"
            ],
            "properties": {
              "seqid": {
                "type": "string",
                "format": "uuid"
              },
              "seqno": {
                "type": "integer",
                "format": "default",
                "minimum": 0.0
              }
            }
          },
          "OrderRejectReason": {
            "type": "string",
            "enum": [
              "DuplicateOrderId",
              "NotAuthorized",
              "NoExecutionVenue",
              "NoAccount",
              "NoCpty",
              "UnsupportedOrderType",
              "UnsupportedExecutionVenue",
              "Unknown"
            ]
          },
          "OrderSource": {
            "type": "integer",
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              255
            ],
            "x-enumNames": [
              "API",
              "GUI",
              "Algo",
              "Reconciled",
              "CLI",
              "Telegram",
              "Other"
            ]
          },
          "OrderStatus": {
            "type": "integer",
            "enum": [
              0,
              1,
              2,
              127,
              128,
              129,
              254
            ],
            "x-enumNames": [
              "Pending",
              "Open",
              "Rejected",
              "Out",
              "Canceling",
              "Canceled",
              "Stale"
            ]
          },
          "TimeInForce": {
            "oneOf": [
              {
                "type": "string",
                "enum": [
                  "GTC",
                  "IOC",
                  "FOK"
                ]
              },
              {
                "type": "object",
                "required": [
                  "GTD"
                ],
                "properties": {
                  "GTD": {
                    "type": "string",
                    "format": "date-time"
                  }
                },
                "additionalProperties": false
              },
              {
                "description": "Day order--the specific time which this expires will be dependent on the venue",
                "type": "string",
                "enum": [
                  "DAY"
                ]
              }
            ]
          },
          "UserId": {
            "type": "string",
            "format": "uuid"
          }
        }
      }
    },
    {
      "type": "unary",
      "route": "/json.architect.Oms/PendingCancels",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "PendingCancelsRequest",
        "type": "object",
        "properties": {
          "account": {
            "anyOf": [
              {
                "$ref": "#/definitions/AccountIdOrName"
              },
              {
                "type": "null"
              }
            ]
          },
          "cancel_ids": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "symbol": {
            "type": [
              "string",
              "null"
            ]
          },
          "trader": {
            "anyOf": [
              {
                "$ref": "#/definitions/TraderIdOrEmail"
              },
              {
                "type": "null"
              }
            ]
          },
          "venue": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "definitions": {
          "AccountIdOrName": {
            "type": "string"
          },
          "TraderIdOrEmail": {
            "type": "string"
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "PendingCancelsResponse",
        "type": "object",
        "required": [
          "pending_cancels"
        ],
        "properties": {
          "pending_cancels": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Cancel"
            }
          }
        },
        "definitions": {
          "Cancel": {
            "type": "object",
            "required": [
              "id",
              "o",
              "tn",
              "ts",
              "xid"
            ],
            "properties": {
              "id": {
                "$ref": "#/definitions/OrderId"
              },
              "o": {
                "$ref": "#/definitions/CancelStatus"
              },
              "r": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "tn": {
                "type": "integer",
                "format": "default",
                "minimum": 0.0
              },
              "ts": {
                "type": "integer",
                "format": "int64"
              },
              "xid": {
                "type": "string",
                "format": "uuid"
              }
            }
          },
          "CancelStatus": {
            "type": "integer",
            "enum": [
              0,
              1,
              2,
              127
            ],
            "x-enumNames": [
              "Pending",
              "Acked",
              "Rejected",
              "Out"
            ]
          },
          "OrderId": {
            "description": "System-unique, persistent order identifiers",
            "type": "object",
            "required": [
              "seqid",
              "seqno"
            ],
            "properties": {
              "seqid": {
                "type": "string",
                "format": "uuid"
              },
              "seqno": {
                "type": "integer",
                "format": "default",
                "minimum": 0.0
              }
            }
          }
        }
      }
    }
  ]
},

{
  "$schema": "jsonschema",
  "name": "Folio",
  "rpcs": [
    {
      "type": "unary",
      "route": "/json.architect.Folio/AccountSummary",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "AccountSummaryRequest",
        "type": "object",
        "required": [
          "account"
        ],
        "properties": {
          "account": {
            "$ref": "#/definitions/AccountIdOrName"
          }
        },
        "definitions": {
          "AccountIdOrName": {
            "type": "string"
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "AccountSummary",
        "type": "object",
        "required": [
          "account",
          "balances",
          "positions",
          "timestamp"
        ],
        "properties": {
          "account": {
            "type": "string",
            "format": "uuid"
          },
          "balances": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "format": "decimal"
            }
          },
          "cash_excess": {
            "description": "Cash available to withdraw.",
            "anyOf": [
              {
                "type": "string",
                "format": "decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "equity": {
            "anyOf": [
              {
                "type": "string",
                "format": "decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "position_margin": {
            "description": "Margin requirement based on current positions only.",
            "anyOf": [
              {
                "type": "string",
                "format": "decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "positions": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AccountPosition"
              }
            }
          },
          "purchasing_power": {
            "anyOf": [
              {
                "type": "string",
                "format": "decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "realized_pnl": {
            "anyOf": [
              {
                "type": "string",
                "format": "decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "total_margin": {
            "description": "Margin requirement calculated for worst-case based on open positions and working orders.",
            "anyOf": [
              {
                "type": "string",
                "format": "decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "unrealized_pnl": {
            "anyOf": [
              {
                "type": "string",
                "format": "decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "yesterday_equity": {
            "anyOf": [
              {
                "type": "string",
                "format": "decimal"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "definitions": {
          "AccountPosition": {
            "type": "object",
            "required": [
              "quantity"
            ],
            "properties": {
              "break_even_price": {
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "cost_basis": {
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "liquidation_price": {
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "quantity": {
                "type": "string",
                "format": "decimal"
              },
              "trade_time": {
                "description": "The meaning of this field varies by reporting venue.",
                "type": [
                  "string",
                  "null"
                ],
                "format": "date-time"
              }
            }
          },
          "Decimal": {
            "type": "string"
          }
        }
      }
    },
    {
      "type": "unary",
      "route": "/json.architect.Folio/AccountSummaries",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "AccountSummariesRequest",
        "type": "object",
        "properties": {
          "accounts": {
            "description": "If trader and accounts are both None, return all accounts for the user",
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/definitions/AccountIdOrName"
            }
          },
          "trader": {
            "anyOf": [
              {
                "$ref": "#/definitions/TraderIdOrEmail"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "definitions": {
          "AccountIdOrName": {
            "type": "string"
          },
          "TraderIdOrEmail": {
            "type": "string"
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "AccountSummariesResponse",
        "type": "object",
        "required": [
          "account_summaries"
        ],
        "properties": {
          "account_summaries": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/AccountSummary"
            }
          }
        },
        "definitions": {
          "AccountPosition": {
            "type": "object",
            "required": [
              "quantity"
            ],
            "properties": {
              "break_even_price": {
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "cost_basis": {
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "liquidation_price": {
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "quantity": {
                "type": "string",
                "format": "decimal"
              },
              "trade_time": {
                "description": "The meaning of this field varies by reporting venue.",
                "type": [
                  "string",
                  "null"
                ],
                "format": "date-time"
              }
            }
          },
          "AccountSummary": {
            "type": "object",
            "required": [
              "account",
              "balances",
              "positions",
              "timestamp"
            ],
            "properties": {
              "account": {
                "type": "string",
                "format": "uuid"
              },
              "balances": {
                "type": "object",
                "additionalProperties": {
                  "type": "string",
                  "format": "decimal"
                }
              },
              "cash_excess": {
                "description": "Cash available to withdraw.",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "equity": {
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "position_margin": {
                "description": "Margin requirement based on current positions only.",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "positions": {
                "type": "object",
                "additionalProperties": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AccountPosition"
                  }
                }
              },
              "purchasing_power": {
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "realized_pnl": {
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "timestamp": {
                "type": "string",
                "format": "date-time"
              },
              "total_margin": {
                "description": "Margin requirement calculated for worst-case based on open positions and working orders.",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "unrealized_pnl": {
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "yesterday_equity": {
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              }
            }
          },
          "Decimal": {
            "type": "string"
          }
        }
      }
    },
    {
      "type": "unary",
      "route": "/json.architect.Folio/AccountHistory",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "AccountHistoryRequest",
        "type": "object",
        "required": [
          "account"
        ],
        "properties": {
          "account": {
            "$ref": "#/definitions/AccountIdOrName"
          },
          "from_inclusive": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "to_exclusive": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          }
        },
        "definitions": {
          "AccountIdOrName": {
            "type": "string"
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "AccountHistoryResponse",
        "type": "object",
        "required": [
          "history"
        ],
        "properties": {
          "history": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/AccountSummary"
            }
          }
        },
        "definitions": {
          "AccountPosition": {
            "type": "object",
            "required": [
              "quantity"
            ],
            "properties": {
              "break_even_price": {
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "cost_basis": {
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "liquidation_price": {
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "quantity": {
                "type": "string",
                "format": "decimal"
              },
              "trade_time": {
                "description": "The meaning of this field varies by reporting venue.",
                "type": [
                  "string",
                  "null"
                ],
                "format": "date-time"
              }
            }
          },
          "AccountSummary": {
            "type": "object",
            "required": [
              "account",
              "balances",
              "positions",
              "timestamp"
            ],
            "properties": {
              "account": {
                "type": "string",
                "format": "uuid"
              },
              "balances": {
                "type": "object",
                "additionalProperties": {
                  "type": "string",
                  "format": "decimal"
                }
              },
              "cash_excess": {
                "description": "Cash available to withdraw.",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "equity": {
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "position_margin": {
                "description": "Margin requirement based on current positions only.",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "positions": {
                "type": "object",
                "additionalProperties": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AccountPosition"
                  }
                }
              },
              "purchasing_power": {
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "realized_pnl": {
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "timestamp": {
                "type": "string",
                "format": "date-time"
              },
              "total_margin": {
                "description": "Margin requirement calculated for worst-case based on open positions and working orders.",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "unrealized_pnl": {
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "yesterday_equity": {
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              }
            }
          },
          "Decimal": {
            "type": "string"
          }
        }
      }
    },
    {
      "type": "unary",
      "route": "/json.architect.Folio/HistoricalFills",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "HistoricalFillsRequest",
        "type": "object",
        "properties": {
          "account": {
            "anyOf": [
              {
                "$ref": "#/definitions/AccountIdOrName"
              },
              {
                "type": "null"
              }
            ]
          },
          "from_inclusive": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "limit": {
            "description": "Default maximum is 1000.",
            "type": [
              "integer",
              "null"
            ],
            "format": "default",
            "minimum": 0.0
          },
          "order_id": {
            "anyOf": [
              {
                "$ref": "#/definitions/OrderId"
              },
              {
                "type": "null"
              }
            ]
          },
          "to_exclusive": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "trader": {
            "anyOf": [
              {
                "$ref": "#/definitions/TraderIdOrEmail"
              },
              {
                "type": "null"
              }
            ]
          },
          "venue": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "definitions": {
          "AccountIdOrName": {
            "type": "string"
          },
          "OrderId": {
            "description": "System-unique, persistent order identifiers",
            "type": "object",
            "required": [
              "seqid",
              "seqno"
            ],
            "properties": {
              "seqid": {
                "type": "string",
                "format": "uuid"
              },
              "seqno": {
                "type": "integer",
                "format": "default",
                "minimum": 0.0
              }
            }
          },
          "TraderIdOrEmail": {
            "type": "string"
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "HistoricalFillsResponse",
        "type": "object",
        "required": [
          "aberrant_fills",
          "fills"
        ],
        "properties": {
          "aberrant_fills": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/AberrantFill"
            }
          },
          "fills": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Fill"
            }
          }
        },
        "definitions": {
          "AberrantFill": {
            "description": "Fills which we received but couldn't parse fully, return details best effort",
            "type": "object",
            "required": [
              "id",
              "x"
            ],
            "properties": {
              "a": {
                "title": "account",
                "type": [
                  "string",
                  "null"
                ],
                "format": "uuid"
              },
              "atn": {
                "title": "recv_time_ns",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "default",
                "minimum": 0.0
              },
              "ats": {
                "title": "recv_time",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "int64"
              },
              "d": {
                "title": "direction",
                "anyOf": [
                  {
                    "$ref": "#/definitions/Dir"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "f": {
                "title": "fee",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "fu": {
                "title": "fee_currency",
                "type": [
                  "string",
                  "null"
                ]
              },
              "id": {
                "title": "fill_id",
                "type": "string",
                "format": "uuid"
              },
              "k": {
                "title": "fill_kind",
                "anyOf": [
                  {
                    "$ref": "#/definitions/FillKind"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "oid": {
                "title": "order_id",
                "anyOf": [
                  {
                    "$ref": "#/definitions/OrderId"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "p": {
                "title": "price",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "q": {
                "title": "quantity",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "s": {
                "title": "symbol",
                "type": [
                  "string",
                  "null"
                ]
              },
              "tn": {
                "title": "trade_time_ns",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "default",
                "minimum": 0.0
              },
              "ts": {
                "title": "trade_time",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "int64"
              },
              "u": {
                "title": "trader",
                "anyOf": [
                  {
                    "$ref": "#/definitions/UserId"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "x": {
                "title": "execution_venue",
                "type": "string"
              },
              "xid": {
                "title": "exchange_fill_id",
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          },
          "Decimal": {
            "type": "string"
          },
          "Dir": {
            "description": "An order side/direction or a trade execution side/direction. In GraphQL these are serialized as \"buy\" or \"sell\".",
            "type": "string",
            "enum": [
              "BUY",
              "SELL"
            ]
          },
          "Fill": {
            "type": "object",
            "required": [
              "d",
              "id",
              "k",
              "p",
              "q",
              "s",
              "tn",
              "ts",
              "x"
            ],
            "properties": {
              "a": {
                "title": "account",
                "type": [
                  "string",
                  "null"
                ],
                "format": "uuid"
              },
              "atn": {
                "title": "recv_time_ns",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "default",
                "minimum": 0.0
              },
              "ats": {
                "title": "recv_time",
                "description": "When Architect received the fill, if realtime",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "int64"
              },
              "d": {
                "title": "direction",
                "allOf": [
                  {
                    "$ref": "#/definitions/Dir"
                  }
                ]
              },
              "f": {
                "title": "fee",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "fu": {
                "title": "fee_currency",
                "description": "Fee currency, if different from the price currency",
                "type": [
                  "string",
                  "null"
                ]
              },
              "id": {
                "title": "fill_id",
                "type": "string",
                "format": "uuid"
              },
              "k": {
                "title": "fill_kind",
                "allOf": [
                  {
                    "$ref": "#/definitions/FillKind"
                  }
                ]
              },
              "oid": {
                "title": "order_id",
                "anyOf": [
                  {
                    "$ref": "#/definitions/OrderId"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "p": {
                "title": "price",
                "allOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  }
                ]
              },
              "q": {
                "title": "quantity",
                "allOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  }
                ]
              },
              "s": {
                "title": "symbol",
                "type": "string"
              },
              "t": {
                "title": "is_taker",
                "default": null,
                "type": "integer",
                "format": "default"
              },
              "tn": {
                "title": "trade_time_ns",
                "type": "integer",
                "format": "default",
                "minimum": 0.0
              },
              "ts": {
                "title": "trade_time",
                "description": "When the cpty claims the trade happened",
                "type": "integer",
                "format": "int64"
              },
              "u": {
                "title": "trader",
                "anyOf": [
                  {
                    "$ref": "#/definitions/UserId"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "x": {
                "title": "execution_venue",
                "type": "string"
              },
              "xid": {
                "title": "exchange_fill_id",
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          },
          "FillKind": {
            "type": "integer",
            "enum": [
              0,
              1,
              2
            ],
            "x-enumNames": [
              "Normal",
              "Reversal",
              "Correction"
            ]
          },
          "OrderId": {
            "description": "System-unique, persistent order identifiers",
            "type": "object",
            "required": [
              "seqid",
              "seqno"
            ],
            "properties": {
              "seqid": {
                "type": "string",
                "format": "uuid"
              },
              "seqno": {
                "type": "integer",
                "format": "default",
                "minimum": 0.0
              }
            }
          },
          "UserId": {
            "type": "string",
            "format": "uuid"
          }
        }
      }
    },
    {
      "type": "unary",
      "route": "/json.architect.Folio/HistoricalOrders",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "HistoricalOrdersRequest",
        "type": "object",
        "properties": {
          "account": {
            "anyOf": [
              {
                "$ref": "#/definitions/AccountIdOrName"
              },
              {
                "type": "null"
              }
            ]
          },
          "from_inclusive": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "limit": {
            "description": "Default maximum is 1000.",
            "type": [
              "integer",
              "null"
            ],
            "format": "default",
            "minimum": 0.0
          },
          "order_ids": {
            "description": "if order_ids is not empty, the limit field is ignored",
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/definitions/OrderId"
            }
          },
          "parent_order_id": {
            "anyOf": [
              {
                "$ref": "#/definitions/OrderId"
              },
              {
                "type": "null"
              }
            ]
          },
          "to_exclusive": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "trader": {
            "anyOf": [
              {
                "$ref": "#/definitions/TraderIdOrEmail"
              },
              {
                "type": "null"
              }
            ]
          },
          "venue": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "definitions": {
          "AccountIdOrName": {
            "type": "string"
          },
          "OrderId": {
            "description": "System-unique, persistent order identifiers",
            "type": "object",
            "required": [
              "seqid",
              "seqno"
            ],
            "properties": {
              "seqid": {
                "type": "string",
                "format": "uuid"
              },
              "seqno": {
                "type": "integer",
                "format": "default",
                "minimum": 0.0
              }
            }
          },
          "TraderIdOrEmail": {
            "type": "string"
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "HistoricalOrdersResponse",
        "type": "object",
        "required": [
          "orders"
        ],
        "properties": {
          "orders": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Order"
            }
          }
        },
        "definitions": {
          "Decimal": {
            "type": "string"
          },
          "Dir": {
            "description": "An order side/direction or a trade execution side/direction. In GraphQL these are serialized as \"buy\" or \"sell\".",
            "type": "string",
            "enum": [
              "BUY",
              "SELL"
            ]
          },
          "Order": {
            "type": "object",
            "oneOf": [
              {
                "type": "object",
                "required": [
                  "k",
                  "p",
                  "po"
                ],
                "properties": {
                  "k": {
                    "type": "string",
                    "enum": [
                      "LIMIT"
                    ]
                  },
                  "p": {
                    "title": "limit_price",
                    "allOf": [
                      {
                        "type": "string",
                        "format": "decimal"
                      }
                    ]
                  },
                  "po": {
                    "title": "post_only",
                    "type": "boolean"
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "k",
                  "p",
                  "tp"
                ],
                "properties": {
                  "k": {
                    "type": "string",
                    "enum": [
                      "STOP_LOSS_LIMIT"
                    ]
                  },
                  "p": {
                    "title": "limit_price",
                    "allOf": [
                      {
                        "type": "string",
                        "format": "decimal"
                      }
                    ]
                  },
                  "tp": {
                    "title": "trigger_price",
                    "allOf": [
                      {
                        "type": "string",
                        "format": "decimal"
                      }
                    ]
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "k",
                  "p",
                  "tp"
                ],
                "properties": {
                  "k": {
                    "type": "string",
                    "enum": [
                      "TAKE_PROFIT_LIMIT"
                    ]
                  },
                  "p": {
                    "title": "limit_price",
                    "allOf": [
                      {
                        "type": "string",
                        "format": "decimal"
                      }
                    ]
                  },
                  "tp": {
                    "title": "trigger_price",
                    "allOf": [
                      {
                        "type": "string",
                        "format": "decimal"
                      }
                    ]
                  }
                }
              }
            ],
            "required": [
              "a",
              "d",
              "id",
              "o",
              "q",
              "s",
              "src",
              "tif",
              "tn",
              "ts",
              "u",
              "ve",
              "xq"
            ],
            "properties": {
              "a": {
                "title": "account",
                "type": "string",
                "format": "uuid"
              },
              "d": {
                "title": "dir",
                "allOf": [
                  {
                    "$ref": "#/definitions/Dir"
                  }
                ]
              },
              "id": {
                "$ref": "#/definitions/OrderId"
              },
              "o": {
                "title": "status",
                "allOf": [
                  {
                    "$ref": "#/definitions/OrderStatus"
                  }
                ]
              },
              "pid": {
                "title": "parent_id",
                "anyOf": [
                  {
                    "$ref": "#/definitions/OrderId"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "q": {
                "title": "quantity",
                "allOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  }
                ]
              },
              "r": {
                "title": "reject_reason",
                "anyOf": [
                  {
                    "$ref": "#/definitions/OrderRejectReason"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "rm": {
                "title": "reject_message",
                "type": [
                  "string",
                  "null"
                ]
              },
              "s": {
                "title": "symbol",
                "type": "string"
              },
              "src": {
                "title": "source",
                "allOf": [
                  {
                    "$ref": "#/definitions/OrderSource"
                  }
                ]
              },
              "tif": {
                "title": "time_in_force",
                "allOf": [
                  {
                    "$ref": "#/definitions/TimeInForce"
                  }
                ]
              },
              "tn": {
                "title": "recv_time_ns",
                "type": "integer",
                "format": "default",
                "minimum": 0.0
              },
              "ts": {
                "title": "recv_time",
                "type": "integer",
                "format": "int64"
              },
              "u": {
                "title": "trader",
                "allOf": [
                  {
                    "$ref": "#/definitions/UserId"
                  }
                ]
              },
              "ve": {
                "title": "execution_venue",
                "type": "string"
              },
              "xp": {
                "title": "average_fill_price",
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "xq": {
                "title": "filled_quantity",
                "allOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  }
                ]
              }
            }
          },
          "OrderId": {
            "description": "System-unique, persistent order identifiers",
            "type": "object",
            "required": [
              "seqid",
              "seqno"
            ],
            "properties": {
              "seqid": {
                "type": "string",
                "format": "uuid"
              },
              "seqno": {
                "type": "integer",
                "format": "default",
                "minimum": 0.0
              }
            }
          },
          "OrderRejectReason": {
            "type": "string",
            "enum": [
              "DuplicateOrderId",
              "NotAuthorized",
              "NoExecutionVenue",
              "NoAccount",
              "NoCpty",
              "UnsupportedOrderType",
              "UnsupportedExecutionVenue",
              "Unknown"
            ]
          },
          "OrderSource": {
            "type": "integer",
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              255
            ],
            "x-enumNames": [
              "API",
              "GUI",
              "Algo",
              "Reconciled",
              "CLI",
              "Telegram",
              "Other"
            ]
          },
          "OrderStatus": {
            "type": "integer",
            "enum": [
              0,
              1,
              2,
              127,
              128,
              129,
              254
            ],
            "x-enumNames": [
              "Pending",
              "Open",
              "Rejected",
              "Out",
              "Canceling",
              "Canceled",
              "Stale"
            ]
          },
          "TimeInForce": {
            "oneOf": [
              {
                "type": "string",
                "enum": [
                  "GTC",
                  "IOC",
                  "FOK"
                ]
              },
              {
                "type": "object",
                "required": [
                  "GTD"
                ],
                "properties": {
                  "GTD": {
                    "type": "string",
                    "format": "date-time"
                  }
                },
                "additionalProperties": false
              },
              {
                "description": "Day order--the specific time which this expires will be dependent on the venue",
                "type": "string",
                "enum": [
                  "DAY"
                ]
              }
            ]
          },
          "UserId": {
            "type": "string",
            "format": "uuid"
          }
        }
      }
    }
  ]
},

{
  "$schema": "jsonschema",
  "name": "Algo",
  "rpcs": [
    {
      "type": "unary",
      "route": "/json.architect.Algo/CreateTwapAlgoOrder",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "CreateAlgoOrderRequest_for_TwapAlgo",
        "type": "object",
        "required": [
          "algo_name",
          "params"
        ],
        "properties": {
          "account": {
            "type": [
              "string",
              "null"
            ],
            "format": "uuid"
          },
          "algo_name": {
            "type": "string"
          },
          "algo_order_id": {
            "anyOf": [
              {
                "$ref": "#/definitions/OrderId"
              },
              {
                "type": "null"
              }
            ]
          },
          "params": {
            "$ref": "#/definitions/TwapParams"
          },
          "parent_order_id": {
            "anyOf": [
              {
                "$ref": "#/definitions/OrderId"
              },
              {
                "type": "null"
              }
            ]
          },
          "trader": {
            "anyOf": [
              {
                "$ref": "#/definitions/UserId"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "definitions": {
          "Decimal": {
            "type": "string"
          },
          "Dir": {
            "description": "An order side/direction or a trade execution side/direction. In GraphQL these are serialized as \"buy\" or \"sell\".",
            "type": "string",
            "enum": [
              "BUY",
              "SELL"
            ]
          },
          "HumanDuration": {
            "type": "string"
          },
          "OrderId": {
            "description": "System-unique, persistent order identifiers",
            "type": "object",
            "required": [
              "seqid",
              "seqno"
            ],
            "properties": {
              "seqid": {
                "type": "string",
                "format": "uuid"
              },
              "seqno": {
                "type": "integer",
                "format": "default",
                "minimum": 0.0
              }
            }
          },
          "TwapParams": {
            "type": "object",
            "required": [
              "dir",
              "end_time",
              "execution_venue",
              "interval",
              "quantity",
              "reject_lockout",
              "symbol"
            ],
            "properties": {
              "dir": {
                "$ref": "#/definitions/Dir"
              },
              "end_time": {
                "type": "string",
                "format": "date-time"
              },
              "execution_venue": {
                "type": "string"
              },
              "interval": {
                "$ref": "#/definitions/HumanDuration"
              },
              "quantity": {
                "type": "string",
                "format": "decimal"
              },
              "reject_lockout": {
                "$ref": "#/definitions/HumanDuration"
              },
              "symbol": {
                "type": "string"
              },
              "take_through_frac": {
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              }
            }
          },
          "UserId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "AlgoOrder_for_TwapAlgo",
        "type": "object",
        "required": [
          "account",
          "algo_name",
          "algo_order_id",
          "create_time",
          "params",
          "state",
          "status",
          "trader"
        ],
        "properties": {
          "account": {
            "type": "string",
            "format": "uuid"
          },
          "algo_name": {
            "type": "string"
          },
          "algo_order_id": {
            "$ref": "#/definitions/OrderId"
          },
          "create_time": {
            "type": "string",
            "format": "date-time"
          },
          "display_symbols": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          },
          "last_error": {
            "type": [
              "string",
              "null"
            ]
          },
          "last_error_time": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "params": {
            "$ref": "#/definitions/TwapParams"
          },
          "parent_order_id": {
            "anyOf": [
              {
                "$ref": "#/definitions/OrderId"
              },
              {
                "type": "null"
              }
            ]
          },
          "state": {
            "$ref": "#/definitions/AlgoState"
          },
          "status": {
            "$ref": "#/definitions/TwapStatus"
          },
          "trader": {
            "$ref": "#/definitions/UserId"
          }
        },
        "definitions": {
          "AlgoState": {
            "type": "string",
            "enum": [
              "Pending",
              "Running",
              "Stopped"
            ]
          },
          "Decimal": {
            "type": "string"
          },
          "Dir": {
            "description": "An order side/direction or a trade execution side/direction. In GraphQL these are serialized as \"buy\" or \"sell\".",
            "type": "string",
            "enum": [
              "BUY",
              "SELL"
            ]
          },
          "HumanDuration": {
            "type": "string"
          },
          "OrderId": {
            "description": "System-unique, persistent order identifiers",
            "type": "object",
            "required": [
              "seqid",
              "seqno"
            ],
            "properties": {
              "seqid": {
                "type": "string",
                "format": "uuid"
              },
              "seqno": {
                "type": "integer",
                "format": "default",
                "minimum": 0.0
              }
            }
          },
          "TwapParams": {
            "type": "object",
            "required": [
              "dir",
              "end_time",
              "execution_venue",
              "interval",
              "quantity",
              "reject_lockout",
              "symbol"
            ],
            "properties": {
              "dir": {
                "$ref": "#/definitions/Dir"
              },
              "end_time": {
                "type": "string",
                "format": "date-time"
              },
              "execution_venue": {
                "type": "string"
              },
              "interval": {
                "$ref": "#/definitions/HumanDuration"
              },
              "quantity": {
                "type": "string",
                "format": "decimal"
              },
              "reject_lockout": {
                "$ref": "#/definitions/HumanDuration"
              },
              "symbol": {
                "type": "string"
              },
              "take_through_frac": {
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              }
            }
          },
          "TwapStatus": {
            "type": "object",
            "required": [
              "quantity_filled"
            ],
            "properties": {
              "quantity_filled": {
                "type": "string",
                "format": "decimal"
              },
              "realized_twap": {
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              }
            }
          },
          "UserId": {
            "type": "string",
            "format": "uuid"
          }
        }
      }
    },
    {
      "type": "unary",
      "route": "/json.architect.Algo/ModifyTwapAlgoOrder",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "ModifyAlgoOrderRequest_for_TwapAlgo",
        "type": "object",
        "required": [
          "algo_order_id",
          "params"
        ],
        "properties": {
          "algo_order_id": {
            "$ref": "#/definitions/OrderId"
          },
          "params": {
            "$ref": "#/definitions/TwapParams"
          }
        },
        "definitions": {
          "Decimal": {
            "type": "string"
          },
          "Dir": {
            "description": "An order side/direction or a trade execution side/direction. In GraphQL these are serialized as \"buy\" or \"sell\".",
            "type": "string",
            "enum": [
              "BUY",
              "SELL"
            ]
          },
          "HumanDuration": {
            "type": "string"
          },
          "OrderId": {
            "description": "System-unique, persistent order identifiers",
            "type": "object",
            "required": [
              "seqid",
              "seqno"
            ],
            "properties": {
              "seqid": {
                "type": "string",
                "format": "uuid"
              },
              "seqno": {
                "type": "integer",
                "format": "default",
                "minimum": 0.0
              }
            }
          },
          "TwapParams": {
            "type": "object",
            "required": [
              "dir",
              "end_time",
              "execution_venue",
              "interval",
              "quantity",
              "reject_lockout",
              "symbol"
            ],
            "properties": {
              "dir": {
                "$ref": "#/definitions/Dir"
              },
              "end_time": {
                "type": "string",
                "format": "date-time"
              },
              "execution_venue": {
                "type": "string"
              },
              "interval": {
                "$ref": "#/definitions/HumanDuration"
              },
              "quantity": {
                "type": "string",
                "format": "decimal"
              },
              "reject_lockout": {
                "$ref": "#/definitions/HumanDuration"
              },
              "symbol": {
                "type": "string"
              },
              "take_through_frac": {
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              }
            }
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "AlgoOrder_for_TwapAlgo",
        "type": "object",
        "required": [
          "account",
          "algo_name",
          "algo_order_id",
          "create_time",
          "params",
          "state",
          "status",
          "trader"
        ],
        "properties": {
          "account": {
            "type": "string",
            "format": "uuid"
          },
          "algo_name": {
            "type": "string"
          },
          "algo_order_id": {
            "$ref": "#/definitions/OrderId"
          },
          "create_time": {
            "type": "string",
            "format": "date-time"
          },
          "display_symbols": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          },
          "last_error": {
            "type": [
              "string",
              "null"
            ]
          },
          "last_error_time": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "params": {
            "$ref": "#/definitions/TwapParams"
          },
          "parent_order_id": {
            "anyOf": [
              {
                "$ref": "#/definitions/OrderId"
              },
              {
                "type": "null"
              }
            ]
          },
          "state": {
            "$ref": "#/definitions/AlgoState"
          },
          "status": {
            "$ref": "#/definitions/TwapStatus"
          },
          "trader": {
            "$ref": "#/definitions/UserId"
          }
        },
        "definitions": {
          "AlgoState": {
            "type": "string",
            "enum": [
              "Pending",
              "Running",
              "Stopped"
            ]
          },
          "Decimal": {
            "type": "string"
          },
          "Dir": {
            "description": "An order side/direction or a trade execution side/direction. In GraphQL these are serialized as \"buy\" or \"sell\".",
            "type": "string",
            "enum": [
              "BUY",
              "SELL"
            ]
          },
          "HumanDuration": {
            "type": "string"
          },
          "OrderId": {
            "description": "System-unique, persistent order identifiers",
            "type": "object",
            "required": [
              "seqid",
              "seqno"
            ],
            "properties": {
              "seqid": {
                "type": "string",
                "format": "uuid"
              },
              "seqno": {
                "type": "integer",
                "format": "default",
                "minimum": 0.0
              }
            }
          },
          "TwapParams": {
            "type": "object",
            "required": [
              "dir",
              "end_time",
              "execution_venue",
              "interval",
              "quantity",
              "reject_lockout",
              "symbol"
            ],
            "properties": {
              "dir": {
                "$ref": "#/definitions/Dir"
              },
              "end_time": {
                "type": "string",
                "format": "date-time"
              },
              "execution_venue": {
                "type": "string"
              },
              "interval": {
                "$ref": "#/definitions/HumanDuration"
              },
              "quantity": {
                "type": "string",
                "format": "decimal"
              },
              "reject_lockout": {
                "$ref": "#/definitions/HumanDuration"
              },
              "symbol": {
                "type": "string"
              },
              "take_through_frac": {
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              }
            }
          },
          "TwapStatus": {
            "type": "object",
            "required": [
              "quantity_filled"
            ],
            "properties": {
              "quantity_filled": {
                "type": "string",
                "format": "decimal"
              },
              "realized_twap": {
                "anyOf": [
                  {
                    "type": "string",
                    "format": "decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              }
            }
          },
          "UserId": {
            "type": "string",
            "format": "uuid"
          }
        }
      }
    }
  ]
}
]