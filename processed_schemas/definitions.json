{
  "HealthMetric": {
    "type": "object",
    "required": [
      "timestamp",
      "value"
    ],
    "properties": {
      "should_be_greater_than": {
        "type": [
          "number",
          "null"
        ],
        "format": "double"
      },
      "should_be_greater_than_or_equal_to": {
        "type": [
          "number",
          "null"
        ],
        "format": "double"
      },
      "should_be_less_than": {
        "type": [
          "number",
          "null"
        ],
        "format": "double"
      },
      "should_be_less_than_or_equal_to": {
        "type": [
          "number",
          "null"
        ],
        "format": "double"
      },
      "timestamp": {
        "type": "integer",
        "format": "int32"
      },
      "value": {
        "type": "number",
        "format": "double"
      }
    }
  },
  "HealthStatus": {
    "type": "string",
    "enum": [
      "UNKNOWN",
      "SERVING",
      "NOT_SERVING",
      "SERVICE_UNKNOWN"
    ]
  },
  "TraderIdOrEmail": {
    "type": "string"
  },
  "Account": {
    "type": "object",
    "required": [
      "id",
      "name"
    ],
    "properties": {
      "id": {
        "type": "string",
        "format": "uuid"
      },
      "name": {
        "$ref": "#/AccountName"
      }
    }
  },
  "AccountName": {
    "type": "string"
  },
  "AccountPermissions": {
    "description": "Set of flags for account permissions",
    "type": "object",
    "required": [
      "list",
      "reduce_or_close",
      "set_limits",
      "trade",
      "view"
    ],
    "properties": {
      "list": {
        "type": "boolean"
      },
      "reduce_or_close": {
        "type": "boolean"
      },
      "set_limits": {
        "type": "boolean"
      },
      "trade": {
        "type": "boolean"
      },
      "view": {
        "type": "boolean"
      }
    }
  },
  "AccountWithPermissions": {
    "type": "object",
    "required": [
      "account",
      "permissions",
      "trader"
    ],
    "properties": {
      "account": {
        "$ref": "#/Account"
      },
      "permissions": {
        "$ref": "#/AccountPermissions"
      },
      "trader": {
        "$ref": "#/UserId"
      }
    }
  },
  "UserId": {
    "type": "string",
    "format": "uuid"
  },
  "Decimal": {
    "type": "string",
    "format": "decimal"
  },
  "DerivativeKind": {
    "enum": [
      "Linear",
      "Inverse",
      "Quanto"
    ],
    "type": "string"
  },
  "EventContractSeriesInstance": {
    "oneOf": [
      {
        "type": "object",
        "required": [
          "Enumerated"
        ],
        "properties": {
          "Enumerated": {
            "type": "object",
            "required": [
              "outcome"
            ],
            "properties": {
              "outcome": {
                "$ref": "#/Outcome"
              }
            }
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "OptionLike"
        ],
        "properties": {
          "OptionLike": {
            "type": "object",
            "required": [
              "strike"
            ],
            "properties": {
              "expiration": {
                "type": [
                  "string",
                  "null"
                ],
                "format": "date-time"
              },
              "strike": {
                "type": "number",
                "format": "decimal"
              }
            }
          }
        },
        "additionalProperties": false
      }
    ]
  },
  "ExecutionInfo": {
    "description": "Information about a symbol related to its execution route.",
    "type": "object",
    "required": [
      "execution_venue",
      "is_delisted",
      "min_order_quantity",
      "min_order_quantity_unit",
      "step_size",
      "tick_size"
    ],
    "properties": {
      "exchange_symbol": {
        "description": "If the execution venue has stable symbology, this may be populated",
        "type": [
          "string",
          "null"
        ]
      },
      "execution_venue": {
        "type": "string"
      },
      "initial_margin": {
        "anyOf": [
          {
            "type": "number",
            "format": "decimal"
          },
          {
            "type": "null"
          }
        ]
      },
      "is_delisted": {
        "type": "boolean"
      },
      "maintenance_margin": {
        "anyOf": [
          {
            "type": "number",
            "format": "decimal"
          },
          {
            "type": "null"
          }
        ]
      },
      "min_order_quantity": {
        "type": "number",
        "format": "decimal"
      },
      "min_order_quantity_unit": {
        "$ref": "#/MinOrderQuantityUnit"
      },
      "step_size": {
        "type": "number",
        "format": "decimal"
      },
      "tick_size": {
        "$ref": "#/TickSize"
      }
    }
  },
  "MinOrderQuantityUnit": {
    "oneOf": [
      {
        "title": "Base",
        "type": "object",
        "required": [
          "unit"
        ],
        "properties": {
          "unit": {
            "type": "string",
            "enum": [
              "base"
            ]
          }
        }
      },
      {
        "title": "Quote",
        "type": "object",
        "required": [
          "unit"
        ],
        "properties": {
          "unit": {
            "type": "string",
            "enum": [
              "quote"
            ]
          }
        }
      }
    ]
  },
  "OptionsExerciseType": {
    "type": "string",
    "enum": [
      "american",
      "european",
      "unknown"
    ]
  },
  "OptionsSeriesInfo": {
    "type": "object",
    "required": [
      "derivative_kind",
      "exercise_type",
      "expiration_time_of_day",
      "expiration_time_zone",
      "is_cash_settled",
      "multiplier",
      "options_series",
      "quote_symbol",
      "strikes_by_expiration",
      "underlying"
    ],
    "properties": {
      "derivative_kind": {
        "$ref": "#/DerivativeKind"
      },
      "exercise_type": {
        "$ref": "#/OptionsExerciseType"
      },
      "expiration_time_of_day": {
        "type": "string",
        "format": "time"
      },
      "expiration_time_zone": {
        "$ref": "#/TimeZone"
      },
      "is_cash_settled": {
        "type": "boolean"
      },
      "multiplier": {
        "type": "number",
        "format": "decimal"
      },
      "options_series": {
        "type": "string"
      },
      "quote_symbol": {
        "type": "string"
      },
      "strikes_by_expiration": {
        "type": "object",
        "additionalProperties": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "decimal"
          },
          "uniqueItems": true
        }
      },
      "underlying": {
        "type": "string"
      },
      "venue_discriminant": {
        "type": [
          "string",
          "null"
        ]
      }
    }
  },
  "OptionsSeriesInstance": {
    "description": "A specific option from a series.",
    "type": "object",
    "required": [
      "expiration",
      "put_or_call",
      "strike"
    ],
    "properties": {
      "expiration": {
        "type": "string",
        "format": "date-time"
      },
      "put_or_call": {
        "$ref": "#/PutOrCall"
      },
      "strike": {
        "type": "number",
        "format": "decimal"
      }
    }
  },
  "Outcome": {
    "type": "object",
    "required": [
      "name"
    ],
    "properties": {
      "name": {
        "type": "string"
      }
    }
  },
  "PriceDisplayFormat": {
    "type": "string"
  },
  "ProductInfo": {
    "type": "object",
    "required": [
      "product_type"
    ],
    "properties": {
      "price_display_format": {
        "anyOf": [
          {
            "$ref": "#/PriceDisplayFormat"
          },
          {
            "type": "null"
          }
        ]
      },
      "primary_venue": {
        "type": [
          "string",
          "null"
        ]
      },
      "product_type": {
        "$ref": "#/ProductType"
      }
    }
  },
  "ProductType": {
    "oneOf": [
      {
        "title": "Fiat",
        "type": "object",
        "required": [
          "product_type"
        ],
        "properties": {
          "product_type": {
            "type": "string",
            "enum": [
              "Fiat"
            ]
          }
        }
      },
      {
        "title": "Commodity",
        "type": "object",
        "required": [
          "product_type"
        ],
        "properties": {
          "product_type": {
            "type": "string",
            "enum": [
              "Commodity"
            ]
          }
        }
      },
      {
        "title": "Crypto",
        "type": "object",
        "required": [
          "product_type"
        ],
        "properties": {
          "product_type": {
            "type": "string",
            "enum": [
              "Crypto"
            ]
          }
        }
      },
      {
        "title": "Equity",
        "type": "object",
        "required": [
          "product_type"
        ],
        "properties": {
          "easy_to_borrow": {
            "type": [
              "boolean",
              "null"
            ]
          },
          "product_type": {
            "type": "string",
            "enum": [
              "Equity"
            ]
          }
        }
      },
      {
        "title": "Index",
        "type": "object",
        "required": [
          "product_type"
        ],
        "properties": {
          "product_type": {
            "type": "string",
            "enum": [
              "Index"
            ]
          }
        }
      },
      {
        "title": "Future",
        "type": "object",
        "required": [
          "derivative_kind",
          "expiration",
          "multiplier",
          "product_type"
        ],
        "properties": {
          "derivative_kind": {
            "$ref": "#/DerivativeKind"
          },
          "expiration": {
            "type": "string",
            "format": "date-time"
          },
          "first_notice_date": {
            "default": null,
            "type": [
              "string",
              "null"
            ],
            "format": "date"
          },
          "multiplier": {
            "type": "number",
            "format": "decimal"
          },
          "product_type": {
            "type": "string",
            "enum": [
              "Future"
            ]
          },
          "series": {
            "type": [
              "string",
              "null"
            ]
          },
          "underlying": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      {
        "title": "FutureSpread",
        "type": "object",
        "required": [
          "legs",
          "product_type"
        ],
        "properties": {
          "legs": {
            "type": "array",
            "items": {
              "$ref": "#/SpreadLeg"
            }
          },
          "product_type": {
            "type": "string",
            "enum": [
              "FutureSpread"
            ]
          }
        }
      },
      {
        "title": "Perpetual",
        "type": "object",
        "required": [
          "derivative_kind",
          "multiplier",
          "product_type"
        ],
        "properties": {
          "derivative_kind": {
            "$ref": "#/DerivativeKind"
          },
          "multiplier": {
            "type": "number",
            "format": "decimal"
          },
          "product_type": {
            "type": "string",
            "enum": [
              "Perpetual"
            ]
          },
          "underlying": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      {
        "title": "Option",
        "type": "object",
        "required": [
          "instance",
          "product_type",
          "series"
        ],
        "properties": {
          "instance": {
            "$ref": "#/OptionsSeriesInstance"
          },
          "product_type": {
            "type": "string",
            "enum": [
              "Option"
            ]
          },
          "series": {
            "type": "string"
          }
        }
      },
      {
        "title": "EventContract",
        "type": "object",
        "required": [
          "instance",
          "product_type",
          "series"
        ],
        "properties": {
          "instance": {
            "$ref": "#/EventContractSeriesInstance"
          },
          "product_type": {
            "type": "string",
            "enum": [
              "EventContract"
            ]
          },
          "series": {
            "type": "string"
          }
        }
      },
      {
        "title": "Unknown",
        "type": "object",
        "required": [
          "product_type"
        ],
        "properties": {
          "product_type": {
            "type": "string",
            "enum": [
              "Unknown"
            ]
          }
        }
      }
    ]
  },
  "PutOrCall": {
    "type": "string",
    "enum": [
      "P",
      "C"
    ]
  },
  "SpreadLeg": {
    "type": "object",
    "required": [
      "product",
      "quantity"
    ],
    "properties": {
      "product": {
        "type": "string"
      },
      "quantity": {
        "description": "Some spreads have different ratios for their legs, like buy 1 A, sell 2 B, buy 1 C; We would represent that with quantities in the legs: 1, -2, 1",
        "type": "number",
        "format": "decimal"
      }
    }
  },
  "TickSize": {
    "oneOf": [
      {
        "title": "Simple|Decimal",
        "type": "object",
        "required": [
          "simple"
        ],
        "properties": {
          "simple": {
            "type": "number",
            "format": "decimal"
          }
        },
        "additionalProperties": false
      },
      {
        "title": "Varying",
        "description": "List of (threshold, tick_size) pairs.  For price greater than or equal to each threshold, the tick size is the corresponding value.",
        "type": "object",
        "required": [
          "varying"
        ],
        "properties": {
          "varying": {
            "type": "object",
            "required": [
              "thresholds"
            ],
            "properties": {
              "thresholds": {
                "type": "array",
                "items": {
                  "type": "array",
                  "items": [
                    {
                      "type": "number",
                      "format": "decimal"
                    },
                    {
                      "type": "number",
                      "format": "decimal"
                    }
                  ],
                  "maxItems": 2,
                  "minItems": 2
                }
              }
            }
          }
        },
        "additionalProperties": false
      }
    ]
  },
  "TimeZone": {
    "type": "string",
    "enum": [
      "Africa/Abidjan",
      "Africa/Accra",
      "Africa/Addis_Ababa",
      "Africa/Algiers",
      "Africa/Asmara",
      "Africa/Asmera",
      "Africa/Bamako",
      "Africa/Bangui",
      "Africa/Banjul",
      "Africa/Bissau",
      "Africa/Blantyre",
      "Africa/Brazzaville",
      "Africa/Bujumbura",
      "Africa/Cairo",
      "Africa/Casablanca",
      "Africa/Ceuta",
      "Africa/Conakry",
      "Africa/Dakar",
      "Africa/Dar_es_Salaam",
      "Africa/Djibouti",
      "Africa/Douala",
      "Africa/El_Aaiun",
      "Africa/Freetown",
      "Africa/Gaborone",
      "Africa/Harare",
      "Africa/Johannesburg",
      "Africa/Juba",
      "Africa/Kampala",
      "Africa/Khartoum",
      "Africa/Kigali",
      "Africa/Kinshasa",
      "Africa/Lagos",
      "Africa/Libreville",
      "Africa/Lome",
      "Africa/Luanda",
      "Africa/Lubumbashi",
      "Africa/Lusaka",
      "Africa/Malabo",
      "Africa/Maputo",
      "Africa/Maseru",
      "Africa/Mbabane",
      "Africa/Mogadishu",
      "Africa/Monrovia",
      "Africa/Nairobi",
      "Africa/Ndjamena",
      "Africa/Niamey",
      "Africa/Nouakchott",
      "Africa/Ouagadougou",
      "Africa/Porto-Novo",
      "Africa/Sao_Tome",
      "Africa/Timbuktu",
      "Africa/Tripoli",
      "Africa/Tunis",
      "Africa/Windhoek",
      "America/Adak",
      "America/Anchorage",
      "America/Anguilla",
      "America/Antigua",
      "America/Araguaina",
      "America/Argentina/Buenos_Aires",
      "America/Argentina/Catamarca",
      "America/Argentina/ComodRivadavia",
      "America/Argentina/Cordoba",
      "America/Argentina/Jujuy",
      "America/Argentina/La_Rioja",
      "America/Argentina/Mendoza",
      "America/Argentina/Rio_Gallegos",
      "America/Argentina/Salta",
      "America/Argentina/San_Juan",
      "America/Argentina/San_Luis",
      "America/Argentina/Tucuman",
      "America/Argentina/Ushuaia",
      "America/Aruba",
      "America/Asuncion",
      "America/Atikokan",
      "America/Atka",
      "America/Bahia",
      "America/Bahia_Banderas",
      "America/Barbados",
      "America/Belem",
      "America/Belize",
      "America/Blanc-Sablon",
      "America/Boa_Vista",
      "America/Bogota",
      "America/Boise",
      "America/Buenos_Aires",
      "America/Cambridge_Bay",
      "America/Campo_Grande",
      "America/Cancun",
      "America/Caracas",
      "America/Catamarca",
      "America/Cayenne",
      "America/Cayman",
      "America/Chicago",
      "America/Chihuahua",
      "America/Ciudad_Juarez",
      "America/Coral_Harbour",
      "America/Cordoba",
      "America/Costa_Rica",
      "America/Creston",
      "America/Cuiaba",
      "America/Curacao",
      "America/Danmarkshavn",
      "America/Dawson",
      "America/Dawson_Creek",
      "America/Denver",
      "America/Detroit",
      "America/Dominica",
      "America/Edmonton",
      "America/Eirunepe",
      "America/El_Salvador",
      "America/Ensenada",
      "America/Fort_Nelson",
      "America/Fort_Wayne",
      "America/Fortaleza",
      "America/Glace_Bay",
      "America/Godthab",
      "America/Goose_Bay",
      "America/Grand_Turk",
      "America/Grenada",
      "America/Guadeloupe",
      "America/Guatemala",
      "America/Guayaquil",
      "America/Guyana",
      "America/Halifax",
      "America/Havana",
      "America/Hermosillo",
      "America/Indiana/Indianapolis",
      "America/Indiana/Knox",
      "America/Indiana/Marengo",
      "America/Indiana/Petersburg",
      "America/Indiana/Tell_City",
      "America/Indiana/Vevay",
      "America/Indiana/Vincennes",
      "America/Indiana/Winamac",
      "America/Indianapolis",
      "America/Inuvik",
      "America/Iqaluit",
      "America/Jamaica",
      "America/Jujuy",
      "America/Juneau",
      "America/Kentucky/Louisville",
      "America/Kentucky/Monticello",
      "America/Knox_IN",
      "America/Kralendijk",
      "America/La_Paz",
      "America/Lima",
      "America/Los_Angeles",
      "America/Louisville",
      "America/Lower_Princes",
      "America/Maceio",
      "America/Managua",
      "America/Manaus",
      "America/Marigot",
      "America/Martinique",
      "America/Matamoros",
      "America/Mazatlan",
      "America/Mendoza",
      "America/Menominee",
      "America/Merida",
      "America/Metlakatla",
      "America/Mexico_City",
      "America/Miquelon",
      "America/Moncton",
      "America/Monterrey",
      "America/Montevideo",
      "America/Montreal",
      "America/Montserrat",
      "America/Nassau",
      "America/New_York",
      "America/Nipigon",
      "America/Nome",
      "America/Noronha",
      "America/North_Dakota/Beulah",
      "America/North_Dakota/Center",
      "America/North_Dakota/New_Salem",
      "America/Nuuk",
      "America/Ojinaga",
      "America/Panama",
      "America/Pangnirtung",
      "America/Paramaribo",
      "America/Phoenix",
      "America/Port-au-Prince",
      "America/Port_of_Spain",
      "America/Porto_Acre",
      "America/Porto_Velho",
      "America/Puerto_Rico",
      "America/Punta_Arenas",
      "America/Rainy_River",
      "America/Rankin_Inlet",
      "America/Recife",
      "America/Regina",
      "America/Resolute",
      "America/Rio_Branco",
      "America/Rosario",
      "America/Santa_Isabel",
      "America/Santarem",
      "America/Santiago",
      "America/Santo_Domingo",
      "America/Sao_Paulo",
      "America/Scoresbysund",
      "America/Shiprock",
      "America/Sitka",
      "America/St_Barthelemy",
      "America/St_Johns",
      "America/St_Kitts",
      "America/St_Lucia",
      "America/St_Thomas",
      "America/St_Vincent",
      "America/Swift_Current",
      "America/Tegucigalpa",
      "America/Thule",
      "America/Thunder_Bay",
      "America/Tijuana",
      "America/Toronto",
      "America/Tortola",
      "America/Vancouver",
      "America/Virgin",
      "America/Whitehorse",
      "America/Winnipeg",
      "America/Yakutat",
      "America/Yellowknife",
      "Antarctica/Casey",
      "Antarctica/Davis",
      "Antarctica/DumontDUrville",
      "Antarctica/Macquarie",
      "Antarctica/Mawson",
      "Antarctica/McMurdo",
      "Antarctica/Palmer",
      "Antarctica/Rothera",
      "Antarctica/South_Pole",
      "Antarctica/Syowa",
      "Antarctica/Troll",
      "Antarctica/Vostok",
      "Arctic/Longyearbyen",
      "Asia/Aden",
      "Asia/Almaty",
      "Asia/Amman",
      "Asia/Anadyr",
      "Asia/Aqtau",
      "Asia/Aqtobe",
      "Asia/Ashgabat",
      "Asia/Ashkhabad",
      "Asia/Atyrau",
      "Asia/Baghdad",
      "Asia/Bahrain",
      "Asia/Baku",
      "Asia/Bangkok",
      "Asia/Barnaul",
      "Asia/Beirut",
      "Asia/Bishkek",
      "Asia/Brunei",
      "Asia/Calcutta",
      "Asia/Chita",
      "Asia/Choibalsan",
      "Asia/Chongqing",
      "Asia/Chungking",
      "Asia/Colombo",
      "Asia/Dacca",
      "Asia/Damascus",
      "Asia/Dhaka",
      "Asia/Dili",
      "Asia/Dubai",
      "Asia/Dushanbe",
      "Asia/Famagusta",
      "Asia/Gaza",
      "Asia/Harbin",
      "Asia/Hebron",
      "Asia/Ho_Chi_Minh",
      "Asia/Hong_Kong",
      "Asia/Hovd",
      "Asia/Irkutsk",
      "Asia/Istanbul",
      "Asia/Jakarta",
      "Asia/Jayapura",
      "Asia/Jerusalem",
      "Asia/Kabul",
      "Asia/Kamchatka",
      "Asia/Karachi",
      "Asia/Kashgar",
      "Asia/Kathmandu",
      "Asia/Katmandu",
      "Asia/Khandyga",
      "Asia/Kolkata",
      "Asia/Krasnoyarsk",
      "Asia/Kuala_Lumpur",
      "Asia/Kuching",
      "Asia/Kuwait",
      "Asia/Macao",
      "Asia/Macau",
      "Asia/Magadan",
      "Asia/Makassar",
      "Asia/Manila",
      "Asia/Muscat",
      "Asia/Nicosia",
      "Asia/Novokuznetsk",
      "Asia/Novosibirsk",
      "Asia/Omsk",
      "Asia/Oral",
      "Asia/Phnom_Penh",
      "Asia/Pontianak",
      "Asia/Pyongyang",
      "Asia/Qatar",
      "Asia/Qostanay",
      "Asia/Qyzylorda",
      "Asia/Rangoon",
      "Asia/Riyadh",
      "Asia/Saigon",
      "Asia/Sakhalin",
      "Asia/Samarkand",
      "Asia/Seoul",
      "Asia/Shanghai",
      "Asia/Singapore",
      "Asia/Srednekolymsk",
      "Asia/Taipei",
      "Asia/Tashkent",
      "Asia/Tbilisi",
      "Asia/Tehran",
      "Asia/Tel_Aviv",
      "Asia/Thimbu",
      "Asia/Thimphu",
      "Asia/Tokyo",
      "Asia/Tomsk",
      "Asia/Ujung_Pandang",
      "Asia/Ulaanbaatar",
      "Asia/Ulan_Bator",
      "Asia/Urumqi",
      "Asia/Ust-Nera",
      "Asia/Vientiane",
      "Asia/Vladivostok",
      "Asia/Yakutsk",
      "Asia/Yangon",
      "Asia/Yekaterinburg",
      "Asia/Yerevan",
      "Atlantic/Azores",
      "Atlantic/Bermuda",
      "Atlantic/Canary",
      "Atlantic/Cape_Verde",
      "Atlantic/Faeroe",
      "Atlantic/Faroe",
      "Atlantic/Jan_Mayen",
      "Atlantic/Madeira",
      "Atlantic/Reykjavik",
      "Atlantic/South_Georgia",
      "Atlantic/St_Helena",
      "Atlantic/Stanley",
      "Australia/ACT",
      "Australia/Adelaide",
      "Australia/Brisbane",
      "Australia/Broken_Hill",
      "Australia/Canberra",
      "Australia/Currie",
      "Australia/Darwin",
      "Australia/Eucla",
      "Australia/Hobart",
      "Australia/LHI",
      "Australia/Lindeman",
      "Australia/Lord_Howe",
      "Australia/Melbourne",
      "Australia/NSW",
      "Australia/North",
      "Australia/Perth",
      "Australia/Queensland",
      "Australia/South",
      "Australia/Sydney",
      "Australia/Tasmania",
      "Australia/Victoria",
      "Australia/West",
      "Australia/Yancowinna",
      "Brazil/Acre",
      "Brazil/DeNoronha",
      "Brazil/East",
      "Brazil/West",
      "CET",
      "CST6CDT",
      "Canada/Atlantic",
      "Canada/Central",
      "Canada/Eastern",
      "Canada/Mountain",
      "Canada/Newfoundland",
      "Canada/Pacific",
      "Canada/Saskatchewan",
      "Canada/Yukon",
      "Chile/Continental",
      "Chile/EasterIsland",
      "Cuba",
      "EET",
      "EST",
      "EST5EDT",
      "Egypt",
      "Eire",
      "Etc/GMT",
      "Etc/GMT+0",
      "Etc/GMT+1",
      "Etc/GMT+10",
      "Etc/GMT+11",
      "Etc/GMT+12",
      "Etc/GMT+2",
      "Etc/GMT+3",
      "Etc/GMT+4",
      "Etc/GMT+5",
      "Etc/GMT+6",
      "Etc/GMT+7",
      "Etc/GMT+8",
      "Etc/GMT+9",
      "Etc/GMT-0",
      "Etc/GMT-1",
      "Etc/GMT-10",
      "Etc/GMT-11",
      "Etc/GMT-12",
      "Etc/GMT-13",
      "Etc/GMT-14",
      "Etc/GMT-2",
      "Etc/GMT-3",
      "Etc/GMT-4",
      "Etc/GMT-5",
      "Etc/GMT-6",
      "Etc/GMT-7",
      "Etc/GMT-8",
      "Etc/GMT-9",
      "Etc/GMT0",
      "Etc/Greenwich",
      "Etc/UCT",
      "Etc/UTC",
      "Etc/Universal",
      "Etc/Zulu",
      "Europe/Amsterdam",
      "Europe/Andorra",
      "Europe/Astrakhan",
      "Europe/Athens",
      "Europe/Belfast",
      "Europe/Belgrade",
      "Europe/Berlin",
      "Europe/Bratislava",
      "Europe/Brussels",
      "Europe/Bucharest",
      "Europe/Budapest",
      "Europe/Busingen",
      "Europe/Chisinau",
      "Europe/Copenhagen",
      "Europe/Dublin",
      "Europe/Gibraltar",
      "Europe/Guernsey",
      "Europe/Helsinki",
      "Europe/Isle_of_Man",
      "Europe/Istanbul",
      "Europe/Jersey",
      "Europe/Kaliningrad",
      "Europe/Kiev",
      "Europe/Kirov",
      "Europe/Kyiv",
      "Europe/Lisbon",
      "Europe/Ljubljana",
      "Europe/London",
      "Europe/Luxembourg",
      "Europe/Madrid",
      "Europe/Malta",
      "Europe/Mariehamn",
      "Europe/Minsk",
      "Europe/Monaco",
      "Europe/Moscow",
      "Europe/Nicosia",
      "Europe/Oslo",
      "Europe/Paris",
      "Europe/Podgorica",
      "Europe/Prague",
      "Europe/Riga",
      "Europe/Rome",
      "Europe/Samara",
      "Europe/San_Marino",
      "Europe/Sarajevo",
      "Europe/Saratov",
      "Europe/Simferopol",
      "Europe/Skopje",
      "Europe/Sofia",
      "Europe/Stockholm",
      "Europe/Tallinn",
      "Europe/Tirane",
      "Europe/Tiraspol",
      "Europe/Ulyanovsk",
      "Europe/Uzhgorod",
      "Europe/Vaduz",
      "Europe/Vatican",
      "Europe/Vienna",
      "Europe/Vilnius",
      "Europe/Volgograd",
      "Europe/Warsaw",
      "Europe/Zagreb",
      "Europe/Zaporozhye",
      "Europe/Zurich",
      "GB",
      "GB-Eire",
      "GMT",
      "GMT+0",
      "GMT-0",
      "GMT0",
      "Greenwich",
      "HST",
      "Hongkong",
      "Iceland",
      "Indian/Antananarivo",
      "Indian/Chagos",
      "Indian/Christmas",
      "Indian/Cocos",
      "Indian/Comoro",
      "Indian/Kerguelen",
      "Indian/Mahe",
      "Indian/Maldives",
      "Indian/Mauritius",
      "Indian/Mayotte",
      "Indian/Reunion",
      "Iran",
      "Israel",
      "Jamaica",
      "Japan",
      "Kwajalein",
      "Libya",
      "MET",
      "MST",
      "MST7MDT",
      "Mexico/BajaNorte",
      "Mexico/BajaSur",
      "Mexico/General",
      "NZ",
      "NZ-CHAT",
      "Navajo",
      "PRC",
      "PST8PDT",
      "Pacific/Apia",
      "Pacific/Auckland",
      "Pacific/Bougainville",
      "Pacific/Chatham",
      "Pacific/Chuuk",
      "Pacific/Easter",
      "Pacific/Efate",
      "Pacific/Enderbury",
      "Pacific/Fakaofo",
      "Pacific/Fiji",
      "Pacific/Funafuti",
      "Pacific/Galapagos",
      "Pacific/Gambier",
      "Pacific/Guadalcanal",
      "Pacific/Guam",
      "Pacific/Honolulu",
      "Pacific/Johnston",
      "Pacific/Kanton",
      "Pacific/Kiritimati",
      "Pacific/Kosrae",
      "Pacific/Kwajalein",
      "Pacific/Majuro",
      "Pacific/Marquesas",
      "Pacific/Midway",
      "Pacific/Nauru",
      "Pacific/Niue",
      "Pacific/Norfolk",
      "Pacific/Noumea",
      "Pacific/Pago_Pago",
      "Pacific/Palau",
      "Pacific/Pitcairn",
      "Pacific/Pohnpei",
      "Pacific/Ponape",
      "Pacific/Port_Moresby",
      "Pacific/Rarotonga",
      "Pacific/Saipan",
      "Pacific/Samoa",
      "Pacific/Tahiti",
      "Pacific/Tarawa",
      "Pacific/Tongatapu",
      "Pacific/Truk",
      "Pacific/Wake",
      "Pacific/Wallis",
      "Pacific/Yap",
      "Poland",
      "Portugal",
      "ROC",
      "ROK",
      "Singapore",
      "Turkey",
      "UCT",
      "US/Alaska",
      "US/Aleutian",
      "US/Arizona",
      "US/Central",
      "US/East-Indiana",
      "US/Eastern",
      "US/Hawaii",
      "US/Indiana-Starke",
      "US/Michigan",
      "US/Mountain",
      "US/Pacific",
      "US/Samoa",
      "UTC",
      "Universal",
      "W-SU",
      "WET",
      "Zulu"
    ]
  },
  "AliasKind": {
    "type": "string",
    "enum": [
      "CME_GLOBEX",
      "CFE"
    ]
  },
  "SnapshotOrUpdate_for_AliasKind_and_SnapshotOrUpdate_for_String_and_String": {
    "anyOf": [
      {
        "type": "object",
        "required": [
          "snapshot"
        ],
        "properties": {
          "snapshot": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/SnapshotOrUpdate_for_String_and_String"
            }
          }
        }
      },
      {
        "type": "object",
        "required": [
          "updates"
        ],
        "properties": {
          "updates": {
            "type": "array",
            "items": {
              "type": "array",
              "items": [
                {
                  "$ref": "#/AliasKind"
                },
                {
                  "anyOf": [
                    {
                      "$ref": "#/SnapshotOrUpdate_for_String_and_String"
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              ],
              "maxItems": 2,
              "minItems": 2
            }
          }
        }
      }
    ]
  },
  "SnapshotOrUpdate_for_String_and_ExecutionInfo": {
    "anyOf": [
      {
        "type": "object",
        "required": [
          "snapshot"
        ],
        "properties": {
          "snapshot": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/ExecutionInfo"
            }
          }
        }
      },
      {
        "type": "object",
        "required": [
          "updates"
        ],
        "properties": {
          "updates": {
            "type": "array",
            "items": {
              "type": "array",
              "items": [
                {
                  "type": "string"
                },
                {
                  "anyOf": [
                    {
                      "$ref": "#/ExecutionInfo"
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              ],
              "maxItems": 2,
              "minItems": 2
            }
          }
        }
      }
    ]
  },
  "SnapshotOrUpdate_for_String_and_OptionsSeriesInfo": {
    "anyOf": [
      {
        "type": "object",
        "required": [
          "snapshot"
        ],
        "properties": {
          "snapshot": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/OptionsSeriesInfo"
            }
          }
        }
      },
      {
        "type": "object",
        "required": [
          "updates"
        ],
        "properties": {
          "updates": {
            "type": "array",
            "items": {
              "type": "array",
              "items": [
                {
                  "type": "string"
                },
                {
                  "anyOf": [
                    {
                      "$ref": "#/OptionsSeriesInfo"
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              ],
              "maxItems": 2,
              "minItems": 2
            }
          }
        }
      }
    ]
  },
  "SnapshotOrUpdate_for_String_and_ProductInfo": {
    "anyOf": [
      {
        "type": "object",
        "required": [
          "snapshot"
        ],
        "properties": {
          "snapshot": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/ProductInfo"
            }
          }
        }
      },
      {
        "type": "object",
        "required": [
          "updates"
        ],
        "properties": {
          "updates": {
            "type": "array",
            "items": {
              "type": "array",
              "items": [
                {
                  "type": "string"
                },
                {
                  "anyOf": [
                    {
                      "$ref": "#/ProductInfo"
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              ],
              "maxItems": 2,
              "minItems": 2
            }
          }
        }
      }
    ]
  },
  "SnapshotOrUpdate_for_String_and_SnapshotOrUpdate_for_String_and_ExecutionInfo": {
    "anyOf": [
      {
        "type": "object",
        "required": [
          "snapshot"
        ],
        "properties": {
          "snapshot": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/SnapshotOrUpdate_for_String_and_ExecutionInfo"
            }
          }
        }
      },
      {
        "type": "object",
        "required": [
          "updates"
        ],
        "properties": {
          "updates": {
            "type": "array",
            "items": {
              "type": "array",
              "items": [
                {
                  "type": "string"
                },
                {
                  "anyOf": [
                    {
                      "$ref": "#/SnapshotOrUpdate_for_String_and_ExecutionInfo"
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              ],
              "maxItems": 2,
              "minItems": 2
            }
          }
        }
      }
    ]
  },
  "SnapshotOrUpdate_for_String_and_String": {
    "anyOf": [
      {
        "type": "object",
        "required": [
          "snapshot"
        ],
        "properties": {
          "snapshot": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      {
        "type": "object",
        "required": [
          "updates"
        ],
        "properties": {
          "updates": {
            "type": "array",
            "items": {
              "type": "array",
              "items": [
                {
                  "type": "string"
                },
                {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              ],
              "maxItems": 2,
              "minItems": 2
            }
          }
        }
      }
    ]
  },
  "L2BookDiff": {
    "description": "Unique sequence id and number.",
    "type": "object",
    "required": [
      "a",
      "b",
      "sid",
      "sn",
      "tn",
      "ts"
    ],
    "properties": {
      "a": {
        "title": "asks",
        "description": "Set of (price, level) updates. If zero, the price level has been removed from the book.",
        "type": "array",
        "items": {
          "type": "array",
          "items": [
            {
              "type": "number",
              "format": "decimal"
            },
            {
              "type": "number",
              "format": "decimal"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "b": {
        "title": "bids",
        "description": "Set of (price, level) updates. If zero, the price level has been removed from the book.",
        "type": "array",
        "items": {
          "type": "array",
          "items": [
            {
              "type": "number",
              "format": "decimal"
            },
            {
              "type": "number",
              "format": "decimal"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "sid": {
        "title": "sequence_id",
        "type": "integer",
        "format": "default",
        "minimum": 0.0
      },
      "sn": {
        "title": "sequence_number",
        "type": "integer",
        "format": "default",
        "minimum": 0.0
      },
      "tn": {
        "title": "timestamp_ns",
        "type": "integer",
        "format": "default",
        "minimum": 0.0
      },
      "ts": {
        "title": "timestamp",
        "type": "integer",
        "format": "int64"
      }
    }
  },
  "CandleWidth": {
    "type": "integer",
    "enum": [
      1,
      2,
      4,
      8,
      16,
      32
    ],
    "x-enumNames": [
      "OneSecond",
      "FiveSecond",
      "OneMinute",
      "FifteenMinute",
      "OneHour",
      "OneDay"
    ]
  },
  "Dir": {
    "description": "An order side/direction or a trade execution side/direction. In GraphQL these are serialized as \"buy\" or \"sell\".",
    "type": "string",
    "enum": [
      "BUY",
      "SELL"
    ]
  },
  "SortTickersBy": {
    "type": "string",
    "enum": [
      "VOLUME_DESC",
      "CHANGE_ASC",
      "CHANGE_DESC",
      "ABS_CHANGE_DESC"
    ]
  },
  "AccountIdOrName": {
    "type": "string"
  },
  "OrderId": {
    "description": "System-unique, persistent order identifiers",
    "type": "object",
    "required": [
      "seqid",
      "seqno"
    ],
    "properties": {
      "seqid": {
        "type": "string",
        "format": "uuid"
      },
      "seqno": {
        "type": "integer",
        "format": "default",
        "minimum": 0.0
      }
    }
  },
  "OrderSource": {
    "type": "integer",
    "enum": [
      0,
      1,
      2,
      3,
      4,
      5,
      255
    ],
    "x-enumNames": [
      "API",
      "GUI",
      "Algo",
      "Reconciled",
      "CLI",
      "Telegram",
      "Other"
    ]
  },
  "TimeInForce": {
    "oneOf": [
      {
        "title": "GoodTilDate",
        "type": "object",
        "required": [
          "GTD"
        ],
        "properties": {
          "GTD": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      {
        "enum": [
          "GTC",
          "DAY",
          "IOC",
          "FOK",
          "ATO",
          "ATC"
        ],
        "type": "string"
      }
    ]
  },
  "OrderAck": {
    "type": "object",
    "required": [
      "id"
    ],
    "properties": {
      "eid": {
        "title": "exchange_order_id",
        "type": [
          "string",
          "null"
        ]
      },
      "id": {
        "title": "order_id",
        "allOf": [
          {
            "$ref": "#/OrderId"
          }
        ]
      }
    }
  },
  "OrderReject": {
    "type": "object",
    "required": [
      "id",
      "r"
    ],
    "properties": {
      "id": {
        "$ref": "#/OrderId"
      },
      "r": {
        "$ref": "#/OrderRejectReason"
      },
      "rm": {
        "type": [
          "string",
          "null"
        ]
      }
    }
  },
  "OrderOut": {
    "type": "object",
    "required": [
      "id"
    ],
    "properties": {
      "id": {
        "$ref": "#/OrderId"
      }
    }
  },
  "OrderStale": {
    "type": "object",
    "required": [
      "id"
    ],
    "properties": {
      "id": {
        "$ref": "#/OrderId"
      }
    }
  },
  "CancelReject": {
    "type": "object",
    "required": [
      "id",
      "xid"
    ],
    "properties": {
      "id": {
        "$ref": "#/OrderId"
      },
      "rm": {
        "type": [
          "string",
          "null"
        ]
      },
      "xid": {
        "type": "string",
        "format": "uuid"
      }
    }
  },
  "OrderCanceling": {
    "type": "object",
    "required": [
      "id"
    ],
    "properties": {
      "id": {
        "$ref": "#/OrderId"
      },
      "xid": {
        "type": [
          "string",
          "null"
        ],
        "format": "uuid"
      }
    }
  },
  "OrderCanceled": {
    "type": "object",
    "required": [
      "id"
    ],
    "properties": {
      "id": {
        "$ref": "#/OrderId"
      },
      "xid": {
        "type": [
          "string",
          "null"
        ],
        "format": "uuid"
      }
    }
  },
  "Fill": {
    "type": "object",
    "required": [
      "d",
      "id",
      "k",
      "p",
      "q",
      "s",
      "tn",
      "ts",
      "x"
    ],
    "properties": {
      "a": {
        "title": "account",
        "type": [
          "string",
          "null"
        ],
        "format": "uuid"
      },
      "agg": {
        "title": "is_taker",
        "default": null,
        "type": "integer",
        "format": "default"
      },
      "atn": {
        "title": "recv_time_ns",
        "type": [
          "integer",
          "null"
        ],
        "format": "default",
        "minimum": 0.0
      },
      "ats": {
        "title": "recv_time",
        "description": "When Architect received the fill, if realtime",
        "type": [
          "integer",
          "null"
        ],
        "format": "int64"
      },
      "d": {
        "title": "direction",
        "allOf": [
          {
            "$ref": "#/Dir"
          }
        ]
      },
      "f": {
        "title": "fee",
        "anyOf": [
          {
            "type": "number",
            "format": "decimal"
          },
          {
            "type": "null"
          }
        ]
      },
      "fu": {
        "title": "fee_currency",
        "description": "Fee currency, if different from the price currency",
        "type": [
          "string",
          "null"
        ]
      },
      "id": {
        "title": "fill_id",
        "type": "string",
        "format": "uuid"
      },
      "k": {
        "title": "fill_kind",
        "allOf": [
          {
            "$ref": "#/FillKind"
          }
        ]
      },
      "oid": {
        "title": "order_id",
        "anyOf": [
          {
            "$ref": "#/OrderId"
          },
          {
            "type": "null"
          }
        ]
      },
      "p": {
        "title": "price",
        "type": "number",
        "format": "decimal"
      },
      "q": {
        "title": "quantity",
        "type": "number",
        "format": "decimal"
      },
      "s": {
        "title": "symbol",
        "type": "string"
      },
      "tn": {
        "title": "trade_time_ns",
        "type": "integer",
        "format": "default",
        "minimum": 0.0
      },
      "ts": {
        "title": "trade_time",
        "description": "When the cpty claims the trade happened",
        "type": "integer",
        "format": "int64"
      },
      "u": {
        "title": "trader",
        "anyOf": [
          {
            "$ref": "#/UserId"
          },
          {
            "type": "null"
          }
        ]
      },
      "x": {
        "title": "execution_venue",
        "type": "string"
      },
      "xid": {
        "title": "exchange_fill_id",
        "type": [
          "string",
          "null"
        ]
      }
    }
  },
  "AberrantFill": {
    "description": "Fills which we received but couldn't parse fully, return details best effort",
    "type": "object",
    "required": [
      "id",
      "x"
    ],
    "properties": {
      "a": {
        "title": "account",
        "type": [
          "string",
          "null"
        ],
        "format": "uuid"
      },
      "atn": {
        "title": "recv_time_ns",
        "type": [
          "integer",
          "null"
        ],
        "format": "default",
        "minimum": 0.0
      },
      "ats": {
        "title": "recv_time",
        "type": [
          "integer",
          "null"
        ],
        "format": "int64"
      },
      "d": {
        "title": "direction",
        "anyOf": [
          {
            "$ref": "#/Dir"
          },
          {
            "type": "null"
          }
        ]
      },
      "f": {
        "title": "fee",
        "anyOf": [
          {
            "type": "number",
            "format": "decimal"
          },
          {
            "type": "null"
          }
        ]
      },
      "fu": {
        "title": "fee_currency",
        "type": [
          "string",
          "null"
        ]
      },
      "id": {
        "title": "fill_id",
        "type": "string",
        "format": "uuid"
      },
      "k": {
        "title": "fill_kind",
        "anyOf": [
          {
            "$ref": "#/FillKind"
          },
          {
            "type": "null"
          }
        ]
      },
      "oid": {
        "title": "order_id",
        "anyOf": [
          {
            "$ref": "#/OrderId"
          },
          {
            "type": "null"
          }
        ]
      },
      "p": {
        "title": "price",
        "anyOf": [
          {
            "type": "number",
            "format": "decimal"
          },
          {
            "type": "null"
          }
        ]
      },
      "q": {
        "title": "quantity",
        "anyOf": [
          {
            "type": "number",
            "format": "decimal"
          },
          {
            "type": "null"
          }
        ]
      },
      "s": {
        "title": "symbol",
        "type": [
          "string",
          "null"
        ]
      },
      "tn": {
        "title": "trade_time_ns",
        "type": [
          "integer",
          "null"
        ],
        "format": "default",
        "minimum": 0.0
      },
      "ts": {
        "title": "trade_time",
        "type": [
          "integer",
          "null"
        ],
        "format": "int64"
      },
      "u": {
        "title": "trader",
        "anyOf": [
          {
            "$ref": "#/UserId"
          },
          {
            "type": "null"
          }
        ]
      },
      "x": {
        "title": "execution_venue",
        "type": "string"
      },
      "xid": {
        "title": "exchange_fill_id",
        "type": [
          "string",
          "null"
        ]
      }
    }
  },
  "CancelStatus": {
    "type": "integer",
    "enum": [
      0,
      1,
      2,
      127
    ],
    "x-enumNames": [
      "Pending",
      "Acked",
      "Rejected",
      "Out"
    ]
  },
  "FillKind": {
    "type": "integer",
    "enum": [
      0,
      1,
      2
    ],
    "x-enumNames": [
      "Normal",
      "Reversal",
      "Correction"
    ]
  },
  "OrderRejectReason": {
    "type": "string",
    "enum": [
      "DuplicateOrderId",
      "NotAuthorized",
      "NoExecutionVenue",
      "NoAccount",
      "NoCpty",
      "UnsupportedOrderType",
      "UnsupportedExecutionVenue",
      "InsufficientCash",
      "InsufficientMargin",
      "NotEasyToBorrow",
      "Unknown"
    ]
  },
  "OrderStatus": {
    "type": "integer",
    "enum": [
      0,
      1,
      2,
      127,
      128,
      129,
      130,
      254,
      255
    ],
    "x-enumNames": [
      "Pending",
      "Open",
      "Rejected",
      "Out",
      "Canceling",
      "Canceled",
      "ReconciledOut",
      "Stale",
      "Unknown"
    ]
  },
  "AccountPosition": {
    "type": "object",
    "required": [
      "quantity"
    ],
    "properties": {
      "break_even_price": {
        "anyOf": [
          {
            "type": "number",
            "format": "decimal"
          },
          {
            "type": "null"
          }
        ]
      },
      "cost_basis": {
        "description": "Cost basis of the position, if known.",
        "anyOf": [
          {
            "type": "number",
            "format": "decimal"
          },
          {
            "type": "null"
          }
        ]
      },
      "liquidation_price": {
        "anyOf": [
          {
            "type": "number",
            "format": "decimal"
          },
          {
            "type": "null"
          }
        ]
      },
      "quantity": {
        "type": "number",
        "format": "decimal"
      },
      "trade_time": {
        "description": "NB: the meaning of this field varies by reporting venue",
        "type": [
          "string",
          "null"
        ],
        "format": "date-time"
      },
      "unrealized_pnl": {
        "description": "Unrealized PNL of the position, if known.",
        "anyOf": [
          {
            "type": "number",
            "format": "decimal"
          },
          {
            "type": "null"
          }
        ]
      }
    }
  },
  "CptyLoginRequest": {
    "type": "object",
    "required": [
      "account",
      "trader"
    ],
    "properties": {
      "account": {
        "type": "string",
        "format": "uuid"
      },
      "trader": {
        "$ref": "#/UserId"
      }
    }
  },
  "CptyLogoutRequest": {
    "type": "object",
    "required": [],
    "properties": {}
  },
  "AccountStatistics": {
    "type": "object",
    "properties": {
      "cash_excess": {
        "description": "Cash available to withdraw.",
        "anyOf": [
          {
            "type": "number",
            "format": "decimal"
          },
          {
            "type": "null"
          }
        ]
      },
      "equity": {
        "description": "Total account equity; net liquidation value.",
        "anyOf": [
          {
            "type": "number",
            "format": "decimal"
          },
          {
            "type": "null"
          }
        ]
      },
      "position_margin": {
        "description": "Margin requirement based on current positions only.",
        "anyOf": [
          {
            "type": "number",
            "format": "decimal"
          },
          {
            "type": "null"
          }
        ]
      },
      "purchasing_power": {
        "description": "Total purchasing power; post-multiplied. (e.g. for cash margin account could be 2x available cash)",
        "anyOf": [
          {
            "type": "number",
            "format": "decimal"
          },
          {
            "type": "null"
          }
        ]
      },
      "realized_pnl": {
        "anyOf": [
          {
            "type": "number",
            "format": "decimal"
          },
          {
            "type": "null"
          }
        ]
      },
      "total_margin": {
        "description": "Margin requirement calculated for worst-case based on open positions and working orders.",
        "anyOf": [
          {
            "type": "number",
            "format": "decimal"
          },
          {
            "type": "null"
          }
        ]
      },
      "unrealized_pnl": {
        "anyOf": [
          {
            "type": "number",
            "format": "decimal"
          },
          {
            "type": "null"
          }
        ]
      },
      "yesterday_equity": {
        "description": "Yesterday total account equity.",
        "anyOf": [
          {
            "type": "number",
            "format": "decimal"
          },
          {
            "type": "null"
          }
        ]
      }
    }
  },
  "HumanDuration": {
    "type": "string"
  },
  "TwapParams": {
    "type": "object",
    "required": [
      "dir",
      "end_time",
      "execution_venue",
      "interval",
      "quantity",
      "reject_lockout",
      "symbol"
    ],
    "properties": {
      "dir": {
        "$ref": "#/Dir"
      },
      "end_time": {
        "type": "string",
        "format": "date-time"
      },
      "execution_venue": {
        "type": "string"
      },
      "interval": {
        "$ref": "#/HumanDuration"
      },
      "quantity": {
        "type": "number",
        "format": "decimal"
      },
      "reject_lockout": {
        "$ref": "#/HumanDuration"
      },
      "symbol": {
        "type": "string"
      },
      "take_through_frac": {
        "anyOf": [
          {
            "type": "number",
            "format": "decimal"
          },
          {
            "type": "null"
          }
        ]
      }
    }
  },
  "AlgoState": {
    "type": "string",
    "enum": [
      "Pending",
      "Running",
      "Stopped"
    ]
  },
  "TwapStatus": {
    "type": "object",
    "required": [
      "quantity_filled"
    ],
    "properties": {
      "quantity_filled": {
        "type": "number",
        "format": "decimal"
      },
      "realized_twap": {
        "anyOf": [
          {
            "type": "number",
            "format": "decimal"
          },
          {
            "type": "null"
          }
        ]
      }
    }
  }
}