# generated by datamodel-codegen:
#   filename:  SubscribeTickersRequest.json

from __future__ import annotations
import grpc
import msgspec
from architect_py.grpc_client.Marketdata.TickerUpdate import TickerUpdate
from architect_py.grpc_client.request import RequestStream


from typing import Annotated, List, Optional

from msgspec import Meta, Struct


class SubscribeTickersRequest(Struct):
    symbols: Optional[
        Annotated[
            List[str],
            Meta(description='If None, subscribe from all symbols on the feed'),
        ]
    ] = None

    @staticmethod
    def create_stub(channel: grpc.aio.Channel, encoder: msgspec.json.Encoder) -> grpc.aio.UnaryStreamMultiCallable["SubscribeTickersRequest", TickerUpdate]:
        return channel.unary_stream(
            "/json.architect.Marketdata/SubscribeTickers",
            request_serializer=encoder.encode,
            response_deserializer=lambda buf: msgspec.json.decode(
                buf, type=TickerUpdate
            ),
        )

SubscribeTickersRequestRequestHelper = RequestStream(SubscribeTickersRequest, TickerUpdate, "/json.architect.Marketdata/SubscribeTickers")
