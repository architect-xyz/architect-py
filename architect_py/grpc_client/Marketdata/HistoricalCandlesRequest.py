# generated by datamodel-codegen:
#   filename:  Marketdata/HistoricalCandlesRequest.json

from __future__ import annotations
from architect_py.grpc_client.Marketdata.HistoricalCandlesResponse import (
    HistoricalCandlesResponse,
)

from datetime import datetime

from msgspec import Struct

from .. import definitions


class HistoricalCandlesRequest(Struct, omit_defaults=True):
    candle_width: definitions.CandleWidth
    end_date: datetime
    start_date: datetime
    symbol: str

    # below is a constructor that takes all field titles as arguments for convenience
    @classmethod
    def new(
        cls,
        candle_width: definitions.CandleWidth,
        end_date: datetime,
        start_date: datetime,
        symbol: str,
    ):
        return cls(
            candle_width,
            end_date,
            start_date,
            symbol,
        )

    def __str__(self) -> str:
        return f"HistoricalCandlesRequest(candle_width={self.candle_width},end_date={self.end_date},start_date={self.start_date},symbol={self.symbol})"

    @staticmethod
    def get_response_type():
        return HistoricalCandlesResponse

    @staticmethod
    def get_unannotated_response_type():
        return HistoricalCandlesResponse

    @staticmethod
    def get_route() -> str:
        return "/json.architect.Marketdata/HistoricalCandles"

    @staticmethod
    def get_rpc_method():
        return "unary"
