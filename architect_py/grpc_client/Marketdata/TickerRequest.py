# generated by datamodel-codegen:
#   filename:  Marketdata/TickerRequest.json

from __future__ import annotations
from architect_py.grpc_client.Marketdata.Ticker import Ticker

from typing import Optional

from msgspec import Struct


class TickerRequest(Struct, omit_defaults=True):
    symbol: str
    venue: Optional[str] = None

    # below is a constructor that takes all field titles as arguments for convenience
    @classmethod
    def new(
        cls,
        symbol: str,
        venue: Optional[str] = None,
    ):
        return cls(
            symbol,
            venue,
        )

    def __str__(self) -> str:
        return f"TickerRequest(symbol={self.symbol},venue={self.venue})"

    @staticmethod
    def get_response_type():
        return Ticker

    @staticmethod
    def get_unannotated_response_type():
        return Ticker

    @staticmethod
    def get_route() -> str:
        return "/json.architect.Marketdata/Ticker"

    @staticmethod
    def get_rpc_method():
        return "unary"
