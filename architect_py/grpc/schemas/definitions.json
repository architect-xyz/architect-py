{
  "HealthMetric": {
    "type": "object",
    "required": [
      "timestamp",
      "value"
    ],
    "properties": {
      "should_be_greater_than": {
        "type": [
          "number",
          "null"
        ],
        "format": "double"
      },
      "should_be_greater_than_or_equal_to": {
        "type": [
          "number",
          "null"
        ],
        "format": "double"
      },
      "should_be_less_than": {
        "type": [
          "number",
          "null"
        ],
        "format": "double"
      },
      "should_be_less_than_or_equal_to": {
        "type": [
          "number",
          "null"
        ],
        "format": "double"
      },
      "timestamp": {
        "type": "integer",
        "format": "int32"
      },
      "value": {
        "type": "number",
        "format": "double"
      }
    }
  },
  "HealthStatus": {
    "type": "string",
    "enum": [
      "UNKNOWN",
      "SERVING",
      "NOT_SERVING",
      "SERVICE_UNKNOWN"
    ]
  },
  "TraderIdOrEmail": {
    "type": "string"
  },
  "Account": {
    "type": "object",
    "required": [
      "id",
      "name"
    ],
    "properties": {
      "id": {
        "type": "string",
        "format": "uuid"
      },
      "name": {
        "$ref": "#/AccountName"
      }
    }
  },
  "AccountName": {
    "type": "string"
  },
  "AccountPermissions": {
    "description": "Set of flags for account permissions",
    "type": "object",
    "required": [
      "list",
      "reduce_or_close",
      "set_limits",
      "trade",
      "view"
    ],
    "properties": {
      "list": {
        "type": "boolean"
      },
      "reduce_or_close": {
        "type": "boolean"
      },
      "set_limits": {
        "type": "boolean"
      },
      "trade": {
        "type": "boolean"
      },
      "view": {
        "type": "boolean"
      }
    }
  },
  "AccountWithPermissions": {
    "type": "object",
    "required": [
      "account",
      "permissions",
      "trader"
    ],
    "properties": {
      "account": {
        "$ref": "#/Account"
      },
      "permissions": {
        "$ref": "#/AccountPermissions"
      },
      "trader": {
        "$ref": "#/UserId"
      }
    }
  },
  "UserId": {
    "type": "string",
    "format": "uuid"
  },
  "ExecutionInfo": {
    "description": "Information about a symbol related to its execution route.",
    "type": "object",
    "required": [
      "execution_venue",
      "is_delisted",
      "min_order_quantity",
      "min_order_quantity_unit",
      "step_size",
      "tick_size"
    ],
    "properties": {
      "exchange_symbol": {
        "description": "If the execution venue has stable symbology, this may be populated",
        "type": [
          "string",
          "null"
        ]
      },
      "execution_venue": {
        "type": "string"
      },
      "initial_margin": {
        "type": [
          "string",
          "null"
        ],
        "format": "decimal"
      },
      "is_delisted": {
        "type": "boolean"
      },
      "maintenance_margin": {
        "type": [
          "string",
          "null"
        ],
        "format": "decimal"
      },
      "min_order_quantity": {
        "type": "string",
        "format": "decimal"
      },
      "min_order_quantity_unit": {
        "$ref": "#/MinOrderQuantityUnit"
      },
      "step_size": {
        "type": "string",
        "format": "decimal"
      },
      "tick_size": {
        "$ref": "#/TickSize"
      }
    }
  },
  "MinOrderQuantityUnit": {
    "title": "MinOrderQuantityUnit",
    "type": "object",
    "required": [
      "unit"
    ],
    "properties": {
      "unit": {
        "type": "string",
        "enum": [
          "base",
          "quote"
        ]
      }
    }
  },
  "TickSize": {
    "oneOf": [
      {
        "title": "Simple|Decimal",
        "type": "object",
        "required": [
          "simple"
        ],
        "properties": {
          "simple": {
            "type": "string",
            "format": "decimal"
          }
        },
        "additionalProperties": false
      },
      {
        "title": "Varying",
        "description": "List of (threshold, tick_size) pairs.  For price greater than or equal to each threshold, the tick size is the corresponding value.",
        "type": "object",
        "required": [
          "varying"
        ],
        "properties": {
          "varying": {
            "type": "object",
            "required": [
              "thresholds"
            ],
            "properties": {
              "thresholds": {
                "type": "array",
                "items": {
                  "type": "array",
                  "items": [
                    {
                      "type": "string",
                      "format": "decimal"
                    },
                    {
                      "type": "string",
                      "format": "decimal"
                    }
                  ],
                  "maxItems": 2,
                  "minItems": 2
                }
              }
            }
          }
        },
        "additionalProperties": false
      }
    ]
  },
  "DerivativeKind": {
    "enum": [
      "Linear",
      "Inverse",
      "Quanto"
    ],
    "type": "string"
  },
  "EventContractSeriesInstance": {
    "oneOf": [
      {
        "type": "object",
        "required": [
          "Enumerated"
        ],
        "properties": {
          "Enumerated": {
            "type": "object",
            "required": [
              "outcome"
            ],
            "properties": {
              "outcome": {
                "$ref": "#/Outcome"
              }
            }
          }
        },
        "additionalProperties": false
      },
      {
        "type": "object",
        "required": [
          "OptionLike"
        ],
        "properties": {
          "OptionLike": {
            "type": "object",
            "required": [
              "strike"
            ],
            "properties": {
              "expiration": {
                "type": [
                  "string",
                  "null"
                ],
                "format": "date-time"
              },
              "strike": {
                "type": "string",
                "format": "decimal"
              }
            }
          }
        },
        "additionalProperties": false
      }
    ]
  },
  "OptionsExerciseType": {
    "type": "string",
    "enum": [
      "american",
      "european",
      "unknown"
    ]
  },
  "OptionsSeriesInfo": {
    "type": "object",
    "required": [
      "derivative_kind",
      "exercise_type",
      "expiration_time_of_day",
      "expiration_time_zone",
      "is_cash_settled",
      "multiplier",
      "options_series",
      "quote_symbol",
      "strikes_by_expiration",
      "underlying"
    ],
    "properties": {
      "derivative_kind": {
        "$ref": "#/DerivativeKind"
      },
      "exercise_type": {
        "$ref": "#/OptionsExerciseType"
      },
      "expiration_time_of_day": {
        "type": "string",
        "format": "time"
      },
      "expiration_time_zone": {
        "type": "string"
      },
      "is_cash_settled": {
        "type": "boolean"
      },
      "multiplier": {
        "type": "string",
        "format": "decimal"
      },
      "options_series": {
        "type": "string"
      },
      "quote_symbol": {
        "type": "string"
      },
      "strikes_by_expiration": {
        "type": "object",
        "additionalProperties": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "decimal"
          },
          "uniqueItems": true
        }
      },
      "underlying": {
        "type": "string"
      },
      "venue_discriminant": {
        "type": [
          "string",
          "null"
        ]
      }
    }
  },
  "OptionsSeriesInstance": {
    "description": "A specific option from a series.",
    "type": "object",
    "required": [
      "expiration",
      "put_or_call",
      "strike"
    ],
    "properties": {
      "expiration": {
        "type": "string",
        "format": "date-time"
      },
      "put_or_call": {
        "$ref": "#/PutOrCall"
      },
      "strike": {
        "type": "string",
        "format": "decimal"
      }
    }
  },
  "Outcome": {
    "type": "object",
    "required": [
      "name"
    ],
    "properties": {
      "name": {
        "type": "string"
      }
    }
  },
  "PriceDisplayFormat": {
    "type": "string"
  },
  "ProductCatalogInfo": {
    "description": "Loosely normalized information about exchange products; used to seed symbology loaders and populate extended product info;\n\nSymbology loaders will use catalog fields to augment and/or cross-check any other load source.",
    "type": "object",
    "required": [
      "exchange",
      "exchange_product"
    ],
    "properties": {
      "category": {
        "type": [
          "string",
          "null"
        ]
      },
      "cqg_contract_symbol": {
        "type": [
          "string",
          "null"
        ]
      },
      "exchange": {
        "type": "string"
      },
      "exchange_product": {
        "description": "Could be anything really",
        "type": "string"
      },
      "info_url": {
        "description": "URL to more product info",
        "type": [
          "string",
          "null"
        ]
      },
      "long_description": {
        "type": [
          "string",
          "null"
        ]
      },
      "multiplier": {
        "description": "For derivatives contracts, the multiplier",
        "type": [
          "string",
          "null"
        ],
        "format": "decimal"
      },
      "price_display_format": {
        "type": [
          "string",
          "null"
        ]
      },
      "quote_currency": {
        "type": [
          "string",
          "null"
        ]
      },
      "schedule_description": {
        "type": [
          "string",
          "null"
        ]
      },
      "settle_method": {
        "type": [
          "string",
          "null"
        ]
      },
      "short_description": {
        "description": "Short description of the product, suitable for display in a bubble, for example",
        "type": [
          "string",
          "null"
        ]
      },
      "sub_category": {
        "type": [
          "string",
          "null"
        ]
      }
    }
  },
  "ProductInfo": {
    "type": "object",
    "required": [
      "product_type"
    ],
    "properties": {
      "price_display_format": {
        "anyOf": [
          {
            "$ref": "#/PriceDisplayFormat"
          },
          {
            "type": "null"
          }
        ]
      },
      "primary_venue": {
        "type": [
          "string",
          "null"
        ]
      },
      "product_type": {
        "$ref": "#/ProductType"
      }
    }
  },
  "ProductType": {
    "oneOf": [
      {
        "title": "Fiat",
        "type": "object",
        "required": [
          "product_type"
        ],
        "properties": {
          "product_type": {
            "type": "string",
            "enum": [
              "Fiat"
            ]
          }
        }
      },
      {
        "title": "Commodity",
        "type": "object",
        "required": [
          "product_type"
        ],
        "properties": {
          "product_type": {
            "type": "string",
            "enum": [
              "Commodity"
            ]
          }
        }
      },
      {
        "title": "Crypto",
        "type": "object",
        "required": [
          "product_type"
        ],
        "properties": {
          "product_type": {
            "type": "string",
            "enum": [
              "Crypto"
            ]
          }
        }
      },
      {
        "title": "Equity",
        "type": "object",
        "required": [
          "product_type"
        ],
        "properties": {
          "easy_to_borrow": {
            "type": [
              "boolean",
              "null"
            ]
          },
          "product_type": {
            "type": "string",
            "enum": [
              "Equity"
            ]
          }
        }
      },
      {
        "title": "Index",
        "type": "object",
        "required": [
          "product_type"
        ],
        "properties": {
          "product_type": {
            "type": "string",
            "enum": [
              "Index"
            ]
          }
        }
      },
      {
        "title": "Future",
        "type": "object",
        "required": [
          "derivative_kind",
          "expiration",
          "multiplier",
          "product_type"
        ],
        "properties": {
          "derivative_kind": {
            "$ref": "#/DerivativeKind"
          },
          "expiration": {
            "type": "string",
            "format": "date-time"
          },
          "first_notice_date": {
            "default": null,
            "type": [
              "string",
              "null"
            ],
            "format": "date"
          },
          "multiplier": {
            "type": "string",
            "format": "decimal"
          },
          "product_type": {
            "type": "string",
            "enum": [
              "Future"
            ]
          },
          "series": {
            "type": [
              "string",
              "null"
            ]
          },
          "underlying": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      {
        "title": "FutureSpread",
        "type": "object",
        "required": [
          "legs",
          "product_type"
        ],
        "properties": {
          "legs": {
            "type": "array",
            "items": {
              "$ref": "#/SpreadLeg"
            }
          },
          "product_type": {
            "type": "string",
            "enum": [
              "FutureSpread"
            ]
          }
        }
      },
      {
        "title": "Perpetual",
        "type": "object",
        "required": [
          "derivative_kind",
          "multiplier",
          "product_type"
        ],
        "properties": {
          "derivative_kind": {
            "$ref": "#/DerivativeKind"
          },
          "multiplier": {
            "type": "string",
            "format": "decimal"
          },
          "product_type": {
            "type": "string",
            "enum": [
              "Perpetual"
            ]
          },
          "underlying": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      {
        "title": "Option",
        "type": "object",
        "required": [
          "instance",
          "product_type",
          "series"
        ],
        "properties": {
          "instance": {
            "$ref": "#/OptionsSeriesInstance"
          },
          "product_type": {
            "type": "string",
            "enum": [
              "Option"
            ]
          },
          "series": {
            "type": "string"
          }
        }
      },
      {
        "title": "EventContract",
        "type": "object",
        "required": [
          "instance",
          "product_type",
          "series"
        ],
        "properties": {
          "instance": {
            "$ref": "#/EventContractSeriesInstance"
          },
          "product_type": {
            "type": "string",
            "enum": [
              "EventContract"
            ]
          },
          "series": {
            "type": "string"
          }
        }
      },
      {
        "title": "Unknown",
        "type": "object",
        "required": [
          "product_type"
        ],
        "properties": {
          "product_type": {
            "type": "string",
            "enum": [
              "Unknown"
            ]
          }
        }
      }
    ]
  },
  "PutOrCall": {
    "type": "string",
    "enum": [
      "P",
      "C"
    ]
  },
  "SpreadLeg": {
    "type": "object",
    "required": [
      "product",
      "quantity"
    ],
    "properties": {
      "product": {
        "type": "string"
      },
      "quantity": {
        "description": "Some spreads have different ratios for their legs, like buy 1 A, sell 2 B, buy 1 C; We would represent that with quantities in the legs: 1, -2, 1",
        "type": "string",
        "format": "decimal"
      }
    }
  },
  "AliasKind": {
    "type": "string",
    "enum": [
      "CME_GLOBEX",
      "CFE"
    ]
  },
  "SnapshotOrUpdate_for_AliasKind_and_SnapshotOrUpdate_for_String_and_String": {
    "anyOf": [
      {
        "type": "object",
        "required": [
          "snapshot"
        ],
        "properties": {
          "snapshot": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/SnapshotOrUpdate_for_String_and_String"
            }
          }
        }
      },
      {
        "type": "object",
        "required": [
          "updates"
        ],
        "properties": {
          "updates": {
            "type": "array",
            "items": {
              "type": "array",
              "items": [
                {
                  "$ref": "#/AliasKind"
                },
                {
                  "anyOf": [
                    {
                      "$ref": "#/SnapshotOrUpdate_for_String_and_String"
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              ],
              "maxItems": 2,
              "minItems": 2
            }
          }
        }
      }
    ]
  },
  "SnapshotOrUpdate_for_String_and_ExecutionInfo": {
    "anyOf": [
      {
        "type": "object",
        "required": [
          "snapshot"
        ],
        "properties": {
          "snapshot": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/ExecutionInfo"
            }
          }
        }
      },
      {
        "type": "object",
        "required": [
          "updates"
        ],
        "properties": {
          "updates": {
            "type": "array",
            "items": {
              "type": "array",
              "items": [
                {
                  "type": "string"
                },
                {
                  "anyOf": [
                    {
                      "$ref": "#/ExecutionInfo"
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              ],
              "maxItems": 2,
              "minItems": 2
            }
          }
        }
      }
    ]
  },
  "SnapshotOrUpdate_for_String_and_OptionsSeriesInfo": {
    "anyOf": [
      {
        "type": "object",
        "required": [
          "snapshot"
        ],
        "properties": {
          "snapshot": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/OptionsSeriesInfo"
            }
          }
        }
      },
      {
        "type": "object",
        "required": [
          "updates"
        ],
        "properties": {
          "updates": {
            "type": "array",
            "items": {
              "type": "array",
              "items": [
                {
                  "type": "string"
                },
                {
                  "anyOf": [
                    {
                      "$ref": "#/OptionsSeriesInfo"
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              ],
              "maxItems": 2,
              "minItems": 2
            }
          }
        }
      }
    ]
  },
  "SnapshotOrUpdate_for_String_and_ProductCatalogInfo": {
    "anyOf": [
      {
        "type": "object",
        "required": [
          "snapshot"
        ],
        "properties": {
          "snapshot": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/ProductCatalogInfo"
            }
          }
        }
      },
      {
        "type": "object",
        "required": [
          "updates"
        ],
        "properties": {
          "updates": {
            "type": "array",
            "items": {
              "type": "array",
              "items": [
                {
                  "type": "string"
                },
                {
                  "anyOf": [
                    {
                      "$ref": "#/ProductCatalogInfo"
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              ],
              "maxItems": 2,
              "minItems": 2
            }
          }
        }
      }
    ]
  },
  "SnapshotOrUpdate_for_String_and_ProductInfo": {
    "anyOf": [
      {
        "type": "object",
        "required": [
          "snapshot"
        ],
        "properties": {
          "snapshot": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/ProductInfo"
            }
          }
        }
      },
      {
        "type": "object",
        "required": [
          "updates"
        ],
        "properties": {
          "updates": {
            "type": "array",
            "items": {
              "type": "array",
              "items": [
                {
                  "type": "string"
                },
                {
                  "anyOf": [
                    {
                      "$ref": "#/ProductInfo"
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              ],
              "maxItems": 2,
              "minItems": 2
            }
          }
        }
      }
    ]
  },
  "SnapshotOrUpdate_for_String_and_SnapshotOrUpdate_for_String_and_ExecutionInfo": {
    "anyOf": [
      {
        "type": "object",
        "required": [
          "snapshot"
        ],
        "properties": {
          "snapshot": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/SnapshotOrUpdate_for_String_and_ExecutionInfo"
            }
          }
        }
      },
      {
        "type": "object",
        "required": [
          "updates"
        ],
        "properties": {
          "updates": {
            "type": "array",
            "items": {
              "type": "array",
              "items": [
                {
                  "type": "string"
                },
                {
                  "anyOf": [
                    {
                      "$ref": "#/SnapshotOrUpdate_for_String_and_ExecutionInfo"
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              ],
              "maxItems": 2,
              "minItems": 2
            }
          }
        }
      }
    ]
  },
  "SnapshotOrUpdate_for_String_and_SnapshotOrUpdate_for_String_and_ProductCatalogInfo": {
    "anyOf": [
      {
        "type": "object",
        "required": [
          "snapshot"
        ],
        "properties": {
          "snapshot": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/SnapshotOrUpdate_for_String_and_ProductCatalogInfo"
            }
          }
        }
      },
      {
        "type": "object",
        "required": [
          "updates"
        ],
        "properties": {
          "updates": {
            "type": "array",
            "items": {
              "type": "array",
              "items": [
                {
                  "type": "string"
                },
                {
                  "anyOf": [
                    {
                      "$ref": "#/SnapshotOrUpdate_for_String_and_ProductCatalogInfo"
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              ],
              "maxItems": 2,
              "minItems": 2
            }
          }
        }
      }
    ]
  },
  "SnapshotOrUpdate_for_String_and_String": {
    "anyOf": [
      {
        "type": "object",
        "required": [
          "snapshot"
        ],
        "properties": {
          "snapshot": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      {
        "type": "object",
        "required": [
          "updates"
        ],
        "properties": {
          "updates": {
            "type": "array",
            "items": {
              "type": "array",
              "items": [
                {
                  "type": "string"
                },
                {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              ],
              "maxItems": 2,
              "minItems": 2
            }
          }
        }
      }
    ]
  },
  "L2BookDiff": {
    "description": "Unique sequence id and number.",
    "type": "object",
    "required": [
      "a",
      "b",
      "sid",
      "sn",
      "tn",
      "ts"
    ],
    "properties": {
      "a": {
        "title": "asks",
        "description": "Set of (price, level) updates. If zero, the price level has been removed from the book.",
        "type": "array",
        "items": {
          "type": "array",
          "items": [
            {
              "type": "string",
              "format": "decimal"
            },
            {
              "type": "string",
              "format": "decimal"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "b": {
        "title": "bids",
        "description": "Set of (price, level) updates. If zero, the price level has been removed from the book.",
        "type": "array",
        "items": {
          "type": "array",
          "items": [
            {
              "type": "string",
              "format": "decimal"
            },
            {
              "type": "string",
              "format": "decimal"
            }
          ],
          "maxItems": 2,
          "minItems": 2
        }
      },
      "sid": {
        "title": "sequence_id",
        "type": "integer",
        "format": "default",
        "minimum": 0.0
      },
      "sn": {
        "title": "sequence_number",
        "type": "integer",
        "format": "default",
        "minimum": 0.0
      },
      "tn": {
        "title": "timestamp_ns",
        "type": "integer",
        "format": "default",
        "minimum": 0.0
      },
      "ts": {
        "title": "timestamp",
        "type": "integer",
        "format": "int64"
      }
    }
  },
  "CandleWidth": {
    "type": "integer",
    "enum": [
      1,
      5,
      60,
      900,
      3600,
      86400
    ],
    "x-enumNames": [
      "OneSecond",
      "FiveSecond",
      "OneMinute",
      "FifteenMinute",
      "OneHour",
      "OneDay"
    ]
  },
  "DateTimeOrUtc": {
    "type": "string",
    "format": "date-time"
  },
  "Dir": {
    "description": "An order side/direction or a trade execution side/direction. In GraphQL these are serialized as \"buy\" or \"sell\".",
    "type": "string",
    "enum": [
      "BUY",
      "SELL"
    ]
  },
  "SortTickersBy": {
    "type": "string",
    "enum": [
      "VOLUME_DESC",
      "CHANGE_ASC",
      "CHANGE_DESC",
      "ABS_CHANGE_DESC"
    ]
  },
  "OptionsContract": {
    "type": "object",
    "required": [
      "expiration",
      "put_or_call",
      "strike",
      "ticker",
      "underlying"
    ],
    "properties": {
      "expiration": {
        "type": "string",
        "format": "date"
      },
      "in_the_money": {
        "type": [
          "boolean",
          "null"
        ]
      },
      "put_or_call": {
        "$ref": "#/PutOrCall"
      },
      "strike": {
        "type": "string",
        "format": "decimal"
      },
      "ticker": {
        "$ref": "Marketdata/Ticker.json/#"
      },
      "underlying": {
        "type": "string"
      }
    }
  },
  "OptionsGreeks": {
    "type": "object",
    "required": [
      "delta",
      "expiration",
      "gamma",
      "implied_volatility",
      "put_or_call",
      "rho",
      "strike",
      "symbol",
      "theta",
      "underlying",
      "vega"
    ],
    "properties": {
      "delta": {
        "type": "string",
        "format": "decimal"
      },
      "expiration": {
        "type": "string",
        "format": "date"
      },
      "gamma": {
        "type": "string",
        "format": "decimal"
      },
      "implied_volatility": {
        "type": "string",
        "format": "decimal"
      },
      "put_or_call": {
        "$ref": "#/PutOrCall"
      },
      "rho": {
        "type": "string",
        "format": "decimal"
      },
      "strike": {
        "type": "string",
        "format": "decimal"
      },
      "symbol": {
        "type": "string"
      },
      "theta": {
        "type": "string",
        "format": "decimal"
      },
      "underlying": {
        "type": "string"
      },
      "vega": {
        "type": "string",
        "format": "decimal"
      }
    }
  },
  "AccountIdOrName": {
    "type": "string"
  },
  "OrderId": {
    "description": "System-unique, persistent order identifiers",
    "type": "string"
  },
  "OrderSource": {
    "type": "integer",
    "enum": [
      0,
      1,
      2,
      3,
      4,
      5,
      255
    ],
    "x-enumNames": [
      "API",
      "GUI",
      "Algo",
      "Reconciled",
      "CLI",
      "Telegram",
      "Other"
    ]
  },
  "TimeInForce": {
    "oneOf": [
      {
        "title": "GoodTilDate",
        "type": "object",
        "required": [
          "GTD"
        ],
        "properties": {
          "GTD": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      {
        "enum": [
          "GTC",
          "DAY",
          "IOC",
          "FOK",
          "ATO",
          "ATC"
        ],
        "type": "string",
        "title": "TimeInForceEnum"
      }
    ]
  },
  "OrderAck": {
    "type": "object",
    "required": [
      "id"
    ],
    "properties": {
      "eid": {
        "title": "exchange_order_id",
        "type": [
          "string",
          "null"
        ]
      },
      "id": {
        "title": "order_id",
        "allOf": [
          {
            "$ref": "#/OrderId"
          }
        ]
      }
    }
  },
  "OrderReject": {
    "type": "object",
    "required": [
      "id",
      "r"
    ],
    "properties": {
      "id": {
        "$ref": "#/OrderId"
      },
      "r": {
        "title": "reject_reason",
        "allOf": [
          {
            "$ref": "#/OrderRejectReason"
          }
        ]
      },
      "rm": {
        "title": "message",
        "type": [
          "string",
          "null"
        ]
      }
    }
  },
  "OrderOut": {
    "type": "object",
    "required": [
      "id"
    ],
    "properties": {
      "id": {
        "$ref": "#/OrderId"
      }
    }
  },
  "OrderStale": {
    "type": "object",
    "required": [
      "id"
    ],
    "properties": {
      "id": {
        "$ref": "#/OrderId"
      }
    }
  },
  "CancelReject": {
    "type": "object",
    "required": [
      "id",
      "xid"
    ],
    "properties": {
      "id": {
        "$ref": "#/OrderId"
      },
      "rm": {
        "type": [
          "string",
          "null"
        ]
      },
      "xid": {
        "type": "string",
        "format": "uuid"
      }
    }
  },
  "OrderCanceling": {
    "type": "object",
    "required": [
      "id"
    ],
    "properties": {
      "id": {
        "$ref": "#/OrderId"
      },
      "xid": {
        "type": [
          "string",
          "null"
        ],
        "format": "uuid"
      }
    }
  },
  "OrderCanceled": {
    "type": "object",
    "required": [
      "id"
    ],
    "properties": {
      "id": {
        "$ref": "#/OrderId"
      },
      "xid": {
        "type": [
          "string",
          "null"
        ],
        "format": "uuid"
      }
    }
  },
  "Fill": {
    "type": "object",
    "required": [
      "d",
      "id",
      "k",
      "p",
      "q",
      "s",
      "tn",
      "ts",
      "x"
    ],
    "properties": {
      "a": {
        "title": "account",
        "type": [
          "string",
          "null"
        ],
        "format": "uuid"
      },
      "agg": {
        "title": "is_taker",
        "default": null,
        "type": "integer",
        "format": "default"
      },
      "atn": {
        "title": "recv_time_ns",
        "type": [
          "integer",
          "null"
        ],
        "format": "default"
      },
      "ats": {
        "title": "recv_time",
        "description": "When Architect received the fill, if realtime",
        "type": [
          "integer",
          "null"
        ],
        "format": "int64"
      },
      "d": {
        "title": "dir",
        "allOf": [
          {
            "$ref": "#/Dir"
          }
        ]
      },
      "f": {
        "title": "fee",
        "type": [
          "string",
          "null"
        ],
        "format": "decimal"
      },
      "fu": {
        "title": "fee_currency",
        "description": "Fee currency, if different from the price currency",
        "type": [
          "string",
          "null"
        ]
      },
      "id": {
        "title": "fill_id",
        "type": "string",
        "format": "uuid"
      },
      "k": {
        "title": "fill_kind",
        "allOf": [
          {
            "$ref": "#/FillKind"
          }
        ]
      },
      "oid": {
        "title": "order_id",
        "anyOf": [
          {
            "$ref": "#/OrderId"
          },
          {
            "type": "null"
          }
        ]
      },
      "p": {
        "title": "price",
        "type": "string",
        "format": "decimal"
      },
      "q": {
        "title": "quantity",
        "type": "string",
        "format": "decimal"
      },
      "s": {
        "title": "symbol",
        "type": "string"
      },
      "tn": {
        "title": "trade_time_ns",
        "type": "integer",
        "format": "default",
        "minimum": 0.0
      },
      "ts": {
        "title": "trade_time",
        "description": "When the cpty claims the trade happened",
        "type": "integer",
        "format": "int64"
      },
      "u": {
        "title": "trader",
        "anyOf": [
          {
            "$ref": "#/UserId"
          },
          {
            "type": "null"
          }
        ]
      },
      "x": {
        "title": "execution_venue",
        "type": "string"
      },
      "xid": {
        "title": "exchange_fill_id",
        "type": [
          "string",
          "null"
        ]
      }
    }
  },
  "AberrantFill": {
    "description": "Fills which we received but couldn't parse fully, return details best effort",
    "type": "object",
    "required": [
      "id",
      "x"
    ],
    "properties": {
      "a": {
        "title": "account",
        "type": [
          "string",
          "null"
        ],
        "format": "uuid"
      },
      "atn": {
        "title": "recv_time_ns",
        "type": [
          "integer",
          "null"
        ],
        "format": "default"
      },
      "ats": {
        "title": "recv_time",
        "type": [
          "integer",
          "null"
        ],
        "format": "int64"
      },
      "d": {
        "title": "dir",
        "anyOf": [
          {
            "$ref": "#/Dir"
          },
          {
            "type": "null"
          }
        ]
      },
      "f": {
        "title": "fee",
        "type": [
          "string",
          "null"
        ],
        "format": "decimal"
      },
      "fu": {
        "title": "fee_currency",
        "type": [
          "string",
          "null"
        ]
      },
      "id": {
        "title": "fill_id",
        "type": "string",
        "format": "uuid"
      },
      "k": {
        "title": "fill_kind",
        "anyOf": [
          {
            "$ref": "#/FillKind"
          },
          {
            "type": "null"
          }
        ]
      },
      "oid": {
        "title": "order_id",
        "anyOf": [
          {
            "$ref": "#/OrderId"
          },
          {
            "type": "null"
          }
        ]
      },
      "p": {
        "title": "price",
        "type": [
          "string",
          "null"
        ],
        "format": "decimal"
      },
      "q": {
        "title": "quantity",
        "type": [
          "string",
          "null"
        ],
        "format": "decimal"
      },
      "s": {
        "title": "symbol",
        "type": [
          "string",
          "null"
        ]
      },
      "tn": {
        "title": "trade_time_ns",
        "type": [
          "integer",
          "null"
        ],
        "format": "default"
      },
      "ts": {
        "title": "trade_time",
        "type": [
          "integer",
          "null"
        ],
        "format": "int64"
      },
      "u": {
        "title": "trader",
        "anyOf": [
          {
            "$ref": "#/UserId"
          },
          {
            "type": "null"
          }
        ]
      },
      "x": {
        "title": "execution_venue",
        "type": "string"
      },
      "xid": {
        "title": "exchange_fill_id",
        "type": [
          "string",
          "null"
        ]
      }
    }
  },
  "CancelStatus": {
    "type": "integer",
    "enum": [
      0,
      1,
      2,
      127
    ],
    "x-enumNames": [
      "Pending",
      "Acked",
      "Rejected",
      "Out"
    ]
  },
  "FillKind": {
    "type": "integer",
    "enum": [
      0,
      1,
      2
    ],
    "x-enumNames": [
      "Normal",
      "Reversal",
      "Correction"
    ]
  },
  "OrderRejectReason": {
    "type": "string",
    "enum": [
      "DuplicateOrderId",
      "NotAuthorized",
      "NoExecutionVenue",
      "NoAccount",
      "NoCpty",
      "UnsupportedOrderType",
      "UnsupportedExecutionVenue",
      "InsufficientCash",
      "InsufficientMargin",
      "NotEasyToBorrow",
      "InvalidOrder",
      "Unknown"
    ]
  },
  "OrderStatus": {
    "type": "integer",
    "enum": [
      0,
      1,
      2,
      127,
      128,
      129,
      130,
      254,
      255
    ],
    "x-enumNames": [
      "Pending",
      "Open",
      "Rejected",
      "Out",
      "Canceling",
      "Canceled",
      "ReconciledOut",
      "Stale",
      "Unknown"
    ]
  },
  "OrderType": {
    "type": "string",
    "title": "order_type",
    "enum": [
      "MARKET",
      "LIMIT",
      "STOP_LOSS_LIMIT",
      "TAKE_PROFIT_LIMIT"
    ]
  },
  "AccountPosition": {
    "type": "object",
    "required": [
      "quantity"
    ],
    "properties": {
      "break_even_price": {
        "type": [
          "string",
          "null"
        ],
        "format": "decimal"
      },
      "cost_basis": {
        "description": "Cost basis of the position, if known.",
        "type": [
          "string",
          "null"
        ],
        "format": "decimal"
      },
      "liquidation_price": {
        "type": [
          "string",
          "null"
        ],
        "format": "decimal"
      },
      "quantity": {
        "type": "string",
        "format": "decimal"
      },
      "trade_time": {
        "description": "NB: the meaning of this field varies by reporting venue",
        "type": [
          "string",
          "null"
        ],
        "format": "date-time"
      },
      "unrealized_pnl": {
        "description": "Unrealized PNL of the position, if known.",
        "type": [
          "string",
          "null"
        ],
        "format": "decimal"
      }
    }
  },
  "CptyLoginRequest": {
    "type": "object",
    "required": [
      "account",
      "trader"
    ],
    "properties": {
      "account": {
        "type": "string",
        "format": "uuid"
      },
      "trader": {
        "$ref": "#/UserId"
      }
    }
  },
  "CptyLogoutRequest": {
    "type": "object",
    "required": [],
    "properties": {}
  },
  "AccountStatistics": {
    "type": "object",
    "properties": {
      "cash_excess": {
        "description": "Cash available to withdraw.",
        "type": [
          "string",
          "null"
        ],
        "format": "decimal"
      },
      "equity": {
        "description": "Total account equity; net liquidation value.",
        "type": [
          "string",
          "null"
        ],
        "format": "decimal"
      },
      "position_margin": {
        "description": "Margin requirement based on current positions only.",
        "type": [
          "string",
          "null"
        ],
        "format": "decimal"
      },
      "purchasing_power": {
        "description": "Total purchasing power; post-multiplied. (e.g. for cash margin account could be 2x available cash)",
        "type": [
          "string",
          "null"
        ],
        "format": "decimal"
      },
      "realized_pnl": {
        "type": [
          "string",
          "null"
        ],
        "format": "decimal"
      },
      "total_margin": {
        "description": "Margin requirement calculated for worst-case based on open positions and working orders.",
        "type": [
          "string",
          "null"
        ],
        "format": "decimal"
      },
      "unrealized_pnl": {
        "type": [
          "string",
          "null"
        ],
        "format": "decimal"
      },
      "yesterday_equity": {
        "description": "Yesterday total account equity.",
        "type": [
          "string",
          "null"
        ],
        "format": "decimal"
      }
    }
  },
  "ConnectionStatus": {
    "type": "object",
    "required": [
      "connected",
      "last_heartbeat",
      "last_heartbeat_stale_threshold"
    ],
    "properties": {
      "connected": {
        "type": "boolean"
      },
      "last_heartbeat": {
        "description": "UNIX epoch time or -1 for never",
        "type": "integer",
        "format": "int64"
      },
      "last_heartbeat_stale_threshold": {
        "description": "Stale threshold in seconds, or -1 for never stale",
        "type": "integer",
        "format": "int64"
      },
      "logged_in": {
        "description": "Not applicable to connection if None",
        "type": [
          "boolean",
          "null"
        ]
      }
    }
  },
  "AlgoOrderStatus": {
    "type": "integer",
    "enum": [
      1,
      2,
      63,
      127
    ],
    "x-enumNames": [
      "Working",
      "Rejected",
      "Paused",
      "Stopped"
    ]
  },
  "Statement": {
    "type": "object",
    "required": [
      "account",
      "clearing_firm",
      "filename",
      "statement_date",
      "statement_type",
      "statement_uuid"
    ],
    "properties": {
      "account": {
        "type": "string"
      },
      "clearing_firm": {
        "type": "string"
      },
      "filename": {
        "type": "string"
      },
      "statement_date": {
        "type": "string",
        "format": "date"
      },
      "statement_type": {
        "type": "string"
      },
      "statement_uuid": {
        "type": "string",
        "format": "uuid"
      }
    }
  },
  "RqdAccountStatistics": {
    "type": "object",
    "required": [
      "account_number"
    ],
    "properties": {
      "account_number": {
        "type": "string"
      },
      "account_type": {
        "type": [
          "string",
          "null"
        ]
      },
      "as_of_date": {
        "type": [
          "string",
          "null"
        ]
      },
      "available_cash_balance": {
        "type": [
          "string",
          "null"
        ],
        "format": "decimal"
      },
      "cash_available_for_withdrawal": {
        "type": [
          "string",
          "null"
        ],
        "format": "decimal"
      },
      "cumulative_day_trade_pnl": {
        "type": [
          "string",
          "null"
        ],
        "format": "decimal"
      },
      "day_trading_buying_power": {
        "type": [
          "string",
          "null"
        ],
        "format": "decimal"
      },
      "day_trading_buying_power_high_water_mark": {
        "type": [
          "string",
          "null"
        ],
        "format": "decimal"
      },
      "day_trading_buying_power_maintenance_margin_multiplier": {
        "type": [
          "string",
          "null"
        ],
        "format": "decimal"
      },
      "day_trading_house_minimum_equity_margin_call_amount": {
        "type": [
          "string",
          "null"
        ],
        "format": "decimal"
      },
      "day_trading_margin_call_amount": {
        "type": [
          "string",
          "null"
        ],
        "format": "decimal"
      },
      "day_trading_minimum_equity_margin_call_amount": {
        "type": [
          "string",
          "null"
        ],
        "format": "decimal"
      },
      "excess_sma_amount": {
        "type": [
          "string",
          "null"
        ],
        "format": "decimal"
      },
      "house_initial_margin_requirement_adjustment_factor": {
        "type": [
          "string",
          "null"
        ],
        "format": "decimal"
      },
      "house_margin_call_amount": {
        "type": [
          "string",
          "null"
        ],
        "format": "decimal"
      },
      "house_margin_requirement": {
        "type": [
          "string",
          "null"
        ],
        "format": "decimal"
      },
      "house_margin_requirement_adjustment_factor": {
        "type": [
          "string",
          "null"
        ],
        "format": "decimal"
      },
      "is_day_trader": {
        "type": [
          "string",
          "null"
        ]
      },
      "maintenance_margin_requirement": {
        "type": [
          "string",
          "null"
        ],
        "format": "decimal"
      },
      "margin_call_amount": {
        "type": [
          "string",
          "null"
        ],
        "format": "decimal"
      },
      "marginable_equity": {
        "type": [
          "string",
          "null"
        ],
        "format": "decimal"
      },
      "market_value_adjustment_factor": {
        "type": [
          "string",
          "null"
        ],
        "format": "decimal"
      },
      "number_open_day_trading_margin_calls": {
        "type": [
          "string",
          "null"
        ],
        "format": "decimal"
      },
      "option_only_maintenance_margin_requirement": {
        "type": [
          "string",
          "null"
        ],
        "format": "decimal"
      },
      "option_trade_date_short_market_value": {
        "type": [
          "string",
          "null"
        ],
        "format": "decimal"
      },
      "overall_current_sma_balance": {
        "type": [
          "string",
          "null"
        ],
        "format": "decimal"
      },
      "overnight_buying_power": {
        "type": [
          "string",
          "null"
        ],
        "format": "decimal"
      },
      "reg_t_initial_margin_requirement": {
        "type": [
          "string",
          "null"
        ],
        "format": "decimal"
      },
      "reg_t_maintenance_margin_requirement_adjustment_factor": {
        "type": [
          "string",
          "null"
        ]
      },
      "reg_t_margin_call_amount": {
        "type": [
          "string",
          "null"
        ],
        "format": "decimal"
      },
      "settlement_date_cash_balance": {
        "type": [
          "string",
          "null"
        ],
        "format": "decimal"
      },
      "settlement_date_long_market_value": {
        "type": [
          "string",
          "null"
        ],
        "format": "decimal"
      },
      "settlement_date_option_long_market_value": {
        "type": [
          "string",
          "null"
        ],
        "format": "decimal"
      },
      "settlement_date_option_short_market_value": {
        "type": [
          "string",
          "null"
        ],
        "format": "decimal"
      },
      "settlement_date_short_market_value": {
        "type": [
          "string",
          "null"
        ],
        "format": "decimal"
      },
      "start_of_day_day_trading_buying_power": {
        "type": [
          "string",
          "null"
        ],
        "format": "decimal"
      },
      "start_of_day_day_trading_buying_power_margin_call_amount": {
        "type": [
          "string",
          "null"
        ],
        "format": "decimal"
      },
      "start_of_day_house_margin_call_amount": {
        "type": [
          "string",
          "null"
        ],
        "format": "decimal"
      },
      "start_of_day_maintenance_margin_call_amount": {
        "type": [
          "string",
          "null"
        ],
        "format": "decimal"
      },
      "start_of_day_reg_t_margin_call_amount": {
        "type": [
          "string",
          "null"
        ],
        "format": "decimal"
      },
      "strategy_based_relief_adjustment_factor": {
        "type": [
          "string",
          "null"
        ],
        "format": "decimal"
      },
      "total_equity": {
        "type": [
          "string",
          "null"
        ],
        "format": "decimal"
      },
      "trade_date_cash_balance": {
        "type": [
          "string",
          "null"
        ],
        "format": "decimal"
      },
      "trade_date_option_long_market_value": {
        "type": [
          "string",
          "null"
        ],
        "format": "decimal"
      },
      "trade_date_total_long_market_value": {
        "type": [
          "string",
          "null"
        ],
        "format": "decimal"
      },
      "trade_date_total_short_market_value": {
        "type": [
          "string",
          "null"
        ],
        "format": "decimal"
      },
      "usable_sma_balance": {
        "type": [
          "string",
          "null"
        ],
        "format": "decimal"
      }
    }
  },
  "Deposit": {
    "type": "object",
    "required": [
      "account",
      "amount",
      "description",
      "timestamp"
    ],
    "properties": {
      "account": {
        "type": "string"
      },
      "amount": {
        "type": "string",
        "format": "decimal"
      },
      "description": {
        "type": "string"
      },
      "timestamp": {
        "type": "string",
        "format": "date-time"
      }
    }
  },
  "Withdrawal": {
    "type": "object",
    "required": [
      "account",
      "amount",
      "description",
      "timestamp"
    ],
    "properties": {
      "account": {
        "type": "string"
      },
      "amount": {
        "type": "string",
        "format": "decimal"
      },
      "description": {
        "type": "string"
      },
      "timestamp": {
        "type": "string",
        "format": "date-time"
      }
    }
  }
}