# generated by datamodel-codegen:
#   filename:  Oms/PendingModifiesRequest.json

from __future__ import annotations
from architect_py.grpc.models.Oms.PendingModifiesResponse import PendingModifiesResponse

from typing import List, Optional

from msgspec import Struct

from .. import definitions


class PendingModifiesRequest(Struct, omit_defaults=True):
    account: Optional[definitions.AccountIdOrName] = None
    modify_ids: Optional[List[str]] = None
    symbol: Optional[str] = None
    trader: Optional[definitions.TraderIdOrEmail] = None
    venue: Optional[str] = None

    # Constructor that takes all field titles as arguments for convenience
    @classmethod
    def new(
        cls,
        account: Optional[definitions.AccountIdOrName] = None,
        modify_ids: Optional[List[str]] = None,
        symbol: Optional[str] = None,
        trader: Optional[definitions.TraderIdOrEmail] = None,
        venue: Optional[str] = None,
    ):
        return cls(
            account,
            modify_ids,
            symbol,
            trader,
            venue,
        )

    def __str__(self) -> str:
        return f"PendingModifiesRequest(account={self.account},modify_ids={self.modify_ids},symbol={self.symbol},trader={self.trader},venue={self.venue})"

    @staticmethod
    def get_response_type():
        return PendingModifiesResponse

    @staticmethod
    def get_unannotated_response_type():
        return PendingModifiesResponse

    @staticmethod
    def get_route() -> str:
        return "/json.architect.Oms/PendingModifies"

    @staticmethod
    def get_rpc_method():
        return "unary"
