# generated by datamodel-codegen:
#   filename:  Oms/ReconcileOutRequest.json

from __future__ import annotations
from architect_py.grpc.models.Oms.ReconcileOutResponse import ReconcileOutResponse

from typing import List, Optional

from msgspec import Struct

from .. import definitions


class ReconcileOutRequest(Struct, omit_defaults=True):
    """
    Manually reconcile out orders.  Useful for clearing stuck orders or stale orders when a human wants to intervene.
    """

    order_id: Optional[definitions.OrderId] = None
    order_ids: Optional[List[definitions.OrderId]] = None

    # Constructor that takes all field titles as arguments for convenience
    @classmethod
    def new(
        cls,
        order_id: Optional[definitions.OrderId] = None,
        order_ids: Optional[List[definitions.OrderId]] = None,
    ):
        return cls(
            order_id,
            order_ids,
        )

    def __str__(self) -> str:
        return (
            f"ReconcileOutRequest(order_id={self.order_id},order_ids={self.order_ids})"
        )

    @staticmethod
    def get_response_type():
        return ReconcileOutResponse

    @staticmethod
    def get_unannotated_response_type():
        return ReconcileOutResponse

    @staticmethod
    def get_route() -> str:
        return "/json.architect.Oms/ReconcileOut"

    @staticmethod
    def get_rpc_method():
        return "unary"
