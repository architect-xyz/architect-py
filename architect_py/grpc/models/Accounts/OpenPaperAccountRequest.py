# generated by datamodel-codegen:
#   filename:  Accounts/OpenPaperAccountRequest.json

from __future__ import annotations
from architect_py.grpc.models.Accounts.OpenPaperAccountResponse import (
    OpenPaperAccountResponse,
)

from typing import Annotated

from msgspec import Meta, Struct


class OpenPaperAccountRequest(Struct, omit_defaults=True):
    account_name: Annotated[
        str,
        Meta(
            description="The name for the new paper account (will be prefixed with PAPER:{email}:)"
        ),
    ]
    """
    The name for the new paper account (will be prefixed with PAPER:{email}:)
    """

    # Constructor that takes all field titles as arguments for convenience
    @classmethod
    def new(
        cls,
        account_name: str,
    ):
        return cls(
            account_name,
        )

    def __str__(self) -> str:
        return f"OpenPaperAccountRequest(account_name={self.account_name})"

    @staticmethod
    def get_response_type():
        return OpenPaperAccountResponse

    @staticmethod
    def get_unannotated_response_type():
        return OpenPaperAccountResponse

    @staticmethod
    def get_route() -> str:
        return "/json.architect.Accounts/OpenPaperAccount"

    @staticmethod
    def get_rpc_method():
        return "unary"
