# generated by datamodel-codegen:
#   filename:  Orderflow_Dropcopy.json
#   timestamp: 2025-02-26T08:01:04+00:00

from __future__ import annotations

from enum import Enum
from typing import Annotated

from msgspec import Meta, Struct


class T(Enum):
    o = 'o'


class K(Enum):
    LIMIT = 'LIMIT'


class K1(Enum):
    STOP_LOSS_LIMIT = 'STOP_LOSS_LIMIT'


class K2(Enum):
    TAKE_PROFIT_LIMIT = 'TAKE_PROFIT_LIMIT'


class T3(Enum):
    af = 'af'


class Dir(Enum):
    BUY = 'BUY'
    SELL = 'SELL'


class FillKind(Enum):
    integer_0 = 0
    integer_1 = 1
    integer_2 = 2


class OrderId(Struct):
    seqid: str
    seqno: Annotated[int, Meta(ge=0)]


class OrderRejectReason(Enum):
    DuplicateOrderId = 'DuplicateOrderId'
    NotAuthorized = 'NotAuthorized'
    NoExecutionVenue = 'NoExecutionVenue'
    NoAccount = 'NoAccount'
    NoCpty = 'NoCpty'
    UnsupportedOrderType = 'UnsupportedOrderType'
    UnsupportedExecutionVenue = 'UnsupportedExecutionVenue'
    Unknown = 'Unknown'


class OrderSource(Enum):
    integer_0 = 0
    integer_1 = 1
    integer_2 = 2
    integer_3 = 3
    integer_4 = 4
    integer_5 = 5
    integer_255 = 255


class OrderStatus(Enum):
    integer_0 = 0
    integer_1 = 1
    integer_2 = 2
    integer_127 = 127
    integer_128 = 128
    integer_129 = 129
    integer_254 = 254


class TimeInForce1(Enum):
    GTC = 'GTC'
    IOC = 'IOC'
    FOK = 'FOK'


class TimeInForce2(Struct):
    GTD: str


class TimeInForce3(Enum):
    DAY = 'DAY'


class Dropcopy1(Struct):
    a: Annotated[str, Meta(title='account')]
    d: Annotated[Dir, Meta(title='dir')]
    id: OrderId
    o: Annotated[OrderStatus, Meta(title='status')]
    q: Annotated[str, Meta(title='quantity')]
    s: Annotated[str, Meta(title='symbol')]
    src: Annotated[OrderSource, Meta(title='source')]
    t: T
    tif: Annotated[
        TimeInForce1 | TimeInForce2 | TimeInForce3, Meta(title='time_in_force')
    ]
    tn: Annotated[int, Meta(ge=0, title='recv_time_ns')]
    ts: Annotated[int, Meta(title='recv_time')]
    u: Annotated[str, Meta(title='trader')]
    ve: Annotated[str, Meta(title='execution_venue')]
    xq: Annotated[str, Meta(title='filled_quantity')]
    k: K
    p: Annotated[str, Meta(title='limit_price')]
    po: Annotated[bool, Meta(title='post_only')]
    pid: Annotated[OrderId | None, Meta(title='parent_id')] | None = None
    r: Annotated[OrderRejectReason | None, Meta(title='reject_reason')] | None = None
    rm: Annotated[str | None, Meta(title='reject_message')] | None = None
    xp: Annotated[str | None, Meta(title='average_fill_price')] | None = None


class Dropcopy2(Struct):
    a: Annotated[str, Meta(title='account')]
    d: Annotated[Dir, Meta(title='dir')]
    id: OrderId
    o: Annotated[OrderStatus, Meta(title='status')]
    q: Annotated[str, Meta(title='quantity')]
    s: Annotated[str, Meta(title='symbol')]
    src: Annotated[OrderSource, Meta(title='source')]
    t: T
    tif: Annotated[
        TimeInForce1 | TimeInForce2 | TimeInForce3, Meta(title='time_in_force')
    ]
    tn: Annotated[int, Meta(ge=0, title='recv_time_ns')]
    ts: Annotated[int, Meta(title='recv_time')]
    u: Annotated[str, Meta(title='trader')]
    ve: Annotated[str, Meta(title='execution_venue')]
    xq: Annotated[str, Meta(title='filled_quantity')]
    k: K1
    p: Annotated[str, Meta(title='limit_price')]
    tp: Annotated[str, Meta(title='trigger_price')]
    pid: Annotated[OrderId | None, Meta(title='parent_id')] | None = None
    r: Annotated[OrderRejectReason | None, Meta(title='reject_reason')] | None = None
    rm: Annotated[str | None, Meta(title='reject_message')] | None = None
    xp: Annotated[str | None, Meta(title='average_fill_price')] | None = None


class Dropcopy3(Struct):
    a: Annotated[str, Meta(title='account')]
    d: Annotated[Dir, Meta(title='dir')]
    id: OrderId
    o: Annotated[OrderStatus, Meta(title='status')]
    q: Annotated[str, Meta(title='quantity')]
    s: Annotated[str, Meta(title='symbol')]
    src: Annotated[OrderSource, Meta(title='source')]
    t: T
    tif: Annotated[
        TimeInForce1 | TimeInForce2 | TimeInForce3, Meta(title='time_in_force')
    ]
    tn: Annotated[int, Meta(ge=0, title='recv_time_ns')]
    ts: Annotated[int, Meta(title='recv_time')]
    u: Annotated[str, Meta(title='trader')]
    ve: Annotated[str, Meta(title='execution_venue')]
    xq: Annotated[str, Meta(title='filled_quantity')]
    k: K2
    p: Annotated[str, Meta(title='limit_price')]
    tp: Annotated[str, Meta(title='trigger_price')]
    pid: Annotated[OrderId | None, Meta(title='parent_id')] | None = None
    r: Annotated[OrderRejectReason | None, Meta(title='reject_reason')] | None = None
    rm: Annotated[str | None, Meta(title='reject_message')] | None = None
    xp: Annotated[str | None, Meta(title='average_fill_price')] | None = None


class Dropcopy4(Struct):
    d: Annotated[Dir, Meta(title='direction')]
    id: Annotated[str, Meta(title='fill_id')]
    k: Annotated[FillKind, Meta(title='fill_kind')]
    p: Annotated[str, Meta(title='price')]
    q: Annotated[str, Meta(title='quantity')]
    s: Annotated[str, Meta(title='symbol')]
    t: Annotated[int, Meta(title='is_taker')]
    tn: Annotated[int, Meta(ge=0, title='trade_time_ns')]
    ts: Annotated[
        int,
        Meta(description='When the cpty claims the trade happened', title='trade_time'),
    ]
    """
    When the cpty claims the trade happened
    """
    x: Annotated[str, Meta(title='execution_venue')]
    a: Annotated[str | None, Meta(title='account')] | None = None
    atn: Annotated[int | None, Meta(ge=0, title='recv_time_ns')] | None = None
    ats: (
        Annotated[
            int | None,
            Meta(
                description='When Architect received the fill, if realtime',
                title='recv_time',
            ),
        ]
        | None
    ) = None
    """
    When Architect received the fill, if realtime
    """
    f: Annotated[str | None, Meta(title='fee')] | None = None
    fu: (
        Annotated[
            str | None,
            Meta(
                description='Fee currency, if different from the price currency',
                title='fee_currency',
            ),
        ]
        | None
    ) = None
    """
    Fee currency, if different from the price currency
    """
    oid: Annotated[OrderId | None, Meta(title='order_id')] | None = None
    u: Annotated[str | None, Meta(title='trader')] | None = None
    xid: Annotated[str | None, Meta(title='exchange_fill_id')] | None = None


class Dropcopy5(Struct):
    id: Annotated[str, Meta(title='fill_id')]
    t: T3
    x: Annotated[str, Meta(title='execution_venue')]
    a: Annotated[str | None, Meta(title='account')] | None = None
    atn: Annotated[int | None, Meta(ge=0, title='recv_time_ns')] | None = None
    ats: Annotated[int | None, Meta(title='recv_time')] | None = None
    d: Annotated[Dir | None, Meta(title='direction')] | None = None
    f: Annotated[str | None, Meta(title='fee')] | None = None
    fu: Annotated[str | None, Meta(title='fee_currency')] | None = None
    k: Annotated[FillKind | None, Meta(title='fill_kind')] | None = None
    oid: Annotated[OrderId | None, Meta(title='order_id')] | None = None
    p: Annotated[str | None, Meta(title='price')] | None = None
    q: Annotated[str | None, Meta(title='quantity')] | None = None
    s: Annotated[str | None, Meta(title='symbol')] | None = None
    tn: Annotated[int | None, Meta(ge=0, title='trade_time_ns')] | None = None
    ts: Annotated[int | None, Meta(title='trade_time')] | None = None
    u: Annotated[str | None, Meta(title='trader')] | None = None
    xid: Annotated[str | None, Meta(title='exchange_fill_id')] | None = None


Dropcopy = Annotated[
    Dropcopy1 | Dropcopy2 | Dropcopy3 | Dropcopy4 | Dropcopy5, Meta(title='Dropcopy')
]
