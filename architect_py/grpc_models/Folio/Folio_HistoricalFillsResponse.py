# generated by datamodel-codegen:
#   filename:  Folio_HistoricalFillsResponse.json

from __future__ import annotations

from enum import Enum
from typing import Annotated, List, Optional

from msgspec import Meta, Struct

Decimal = str


class Dir(Enum):
    BUY = 'BUY'
    SELL = 'SELL'


class FillKind(Enum):
    integer_0 = 0
    integer_1 = 1
    integer_2 = 2


class OrderId(Struct):
    seqid: str
    seqno: Annotated[int, Meta(ge=0)]


UserId = str


class AberrantFill(Struct):
    id: Annotated[str, Meta(title='fill_id')]
    x: Annotated[str, Meta(title='execution_venue')]
    a: Optional[Annotated[Optional[str], Meta(title='account')]] = None
    atn: Optional[Annotated[Optional[int], Meta(ge=0, title='recv_time_ns')]] = None
    ats: Optional[Annotated[Optional[int], Meta(title='recv_time')]] = None
    d: Optional[Annotated[Optional[Dir], Meta(title='direction')]] = None
    f: Optional[Annotated[Optional[Decimal], Meta(title='fee')]] = None
    fu: Optional[Annotated[Optional[str], Meta(title='fee_currency')]] = None
    k: Optional[Annotated[Optional[FillKind], Meta(title='fill_kind')]] = None
    oid: Optional[Annotated[Optional[OrderId], Meta(title='order_id')]] = None
    p: Optional[Annotated[Optional[Decimal], Meta(title='price')]] = None
    q: Optional[Annotated[Optional[Decimal], Meta(title='quantity')]] = None
    s: Optional[Annotated[Optional[str], Meta(title='symbol')]] = None
    tn: Optional[Annotated[Optional[int], Meta(ge=0, title='trade_time_ns')]] = None
    ts: Optional[Annotated[Optional[int], Meta(title='trade_time')]] = None
    u: Optional[Annotated[Optional[UserId], Meta(title='trader')]] = None
    xid: Optional[Annotated[Optional[str], Meta(title='exchange_fill_id')]] = None


class Fill(Struct):
    d: Annotated[Dir, Meta(title='direction')]
    id: Annotated[str, Meta(title='fill_id')]
    k: Annotated[FillKind, Meta(title='fill_kind')]
    p: Annotated[Decimal, Meta(title='price')]
    q: Annotated[Decimal, Meta(title='quantity')]
    s: Annotated[str, Meta(title='symbol')]
    tn: Annotated[int, Meta(ge=0, title='trade_time_ns')]
    ts: Annotated[
        int,
        Meta(description='When the cpty claims the trade happened', title='trade_time'),
    ]
    x: Annotated[str, Meta(title='execution_venue')]
    a: Optional[Annotated[Optional[str], Meta(title='account')]] = None
    atn: Optional[Annotated[Optional[int], Meta(ge=0, title='recv_time_ns')]] = None
    ats: Optional[
        Annotated[
            Optional[int],
            Meta(
                description='When Architect received the fill, if realtime',
                title='recv_time',
            ),
        ]
    ] = None
    f: Optional[Annotated[Optional[Decimal], Meta(title='fee')]] = None
    fu: Optional[
        Annotated[
            Optional[str],
            Meta(
                description='Fee currency, if different from the price currency',
                title='fee_currency',
            ),
        ]
    ] = None
    oid: Optional[Annotated[Optional[OrderId], Meta(title='order_id')]] = None
    t: Optional[Annotated[int, Meta(title='is_taker')]] = None
    u: Optional[Annotated[Optional[UserId], Meta(title='trader')]] = None
    xid: Optional[Annotated[Optional[str], Meta(title='exchange_fill_id')]] = None


class HistoricalFillsResponse(Struct):
    aberrant_fills: List[AberrantFill]
    fills: List[Fill]
