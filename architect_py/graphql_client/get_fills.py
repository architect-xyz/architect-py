# Generated by ariadne-codegen
# Source: queries.graphql

from datetime import datetime
from decimal import Decimal
from typing import List, Optional
from uuid import UUID

from pydantic import Field

from architect_py.scalars import OrderDir

from .base_model import BaseModel
from .enums import FillKind


class GetFills(BaseModel):
    folio: "GetFillsFolio"


class GetFillsFolio(BaseModel):
    historical_fills: "GetFillsFolioHistoricalFills" = Field(alias="historicalFills")


class GetFillsFolioHistoricalFills(BaseModel):
    fills: List["GetFillsFolioHistoricalFillsFills"]
    aberrant_fills: List["GetFillsFolioHistoricalFillsAberrantFills"] = Field(
        alias="aberrantFills"
    )


class GetFillsFolioHistoricalFillsFills(BaseModel):
    fill_id: UUID = Field(alias="fillId")
    fill_kind: FillKind = Field(alias="fillKind")
    execution_venue: str = Field(alias="executionVenue")
    exchange_fill_id: Optional[str] = Field(alias="exchangeFillId")
    order_id: Optional[str] = Field(alias="orderId")
    trader: Optional[str]
    account: Optional[UUID]
    symbol: str
    dir: OrderDir
    quantity: Decimal
    price: Decimal
    recv_time: Optional[datetime] = Field(alias="recvTime")
    trade_time: Optional[datetime] = Field(alias="tradeTime")


class GetFillsFolioHistoricalFillsAberrantFills(BaseModel):
    fill_id: UUID = Field(alias="fillId")
    fill_kind: Optional[FillKind] = Field(alias="fillKind")
    execution_venue: str = Field(alias="executionVenue")
    exchange_fill_id: Optional[str] = Field(alias="exchangeFillId")
    order_id: Optional[str] = Field(alias="orderId")
    trader: Optional[str]
    account: Optional[UUID]
    symbol: Optional[str]
    dir: Optional[OrderDir]
    quantity: Optional[Decimal]
    price: Optional[Decimal]
    recv_time: Optional[datetime] = Field(alias="recvTime")
    trade_time: Optional[datetime] = Field(alias="tradeTime")


GetFills.model_rebuild()
GetFillsFolio.model_rebuild()
GetFillsFolioHistoricalFills.model_rebuild()
