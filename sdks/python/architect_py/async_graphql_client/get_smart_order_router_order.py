# Generated by ariadne-codegen
# Source: queries.async.graphql

from typing import Any, List, Optional

from pydantic import Field

from .base_model import BaseModel


class GetSmartOrderRouterOrder(BaseModel):
    smart_order_router_order: Optional[
        "GetSmartOrderRouterOrderSmartOrderRouterOrder"
    ] = Field(alias="smartOrderRouterOrder")


class GetSmartOrderRouterOrderSmartOrderRouterOrder(BaseModel):
    order_id: Any = Field(alias="orderId")
    markets: List["GetSmartOrderRouterOrderSmartOrderRouterOrderMarkets"]
    dir: Any
    limit_price: Any = Field(alias="limitPrice")
    target_size: Any = Field(alias="targetSize")
    execution_time_limit_ms: int = Field(alias="executionTimeLimitMs")
    parent_order_id: Optional[Any] = Field(alias="parentOrderId")


class GetSmartOrderRouterOrderSmartOrderRouterOrderMarkets(BaseModel):
    id: Any


GetSmartOrderRouterOrder.model_rebuild()
GetSmartOrderRouterOrderSmartOrderRouterOrder.model_rebuild()
